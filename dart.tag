<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>BulletCollisionDetector.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/bullet/</path>
    <filename>db/d73/BulletCollisionDetector_8cpp</filename>
    <includes id="d9/d57/BulletCollisionDetector_8h" name="BulletCollisionDetector.h" local="yes" imported="no">dart/collision/bullet/BulletCollisionDetector.h</includes>
    <includes id="d1/d63/BulletCollisionNode_8h" name="BulletCollisionNode.h" local="yes" imported="no">dart/collision/bullet/BulletCollisionNode.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <class kind="struct">dart::collision::CollisionFilter</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>BulletCollisionDetector.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/bullet/</path>
    <filename>d9/d57/BulletCollisionDetector_8h</filename>
    <includes id="d4/d58/CollisionDetector_8h" name="CollisionDetector.h" local="yes" imported="no">dart/collision/CollisionDetector.h</includes>
    <includes id="dd/dff/BulletTypes_8h" name="BulletTypes.h" local="yes" imported="no">dart/collision/bullet/BulletTypes.h</includes>
    <class kind="class">dart::collision::BulletCollisionDetector</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>BulletCollisionNode.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/bullet/</path>
    <filename>d6/dbe/BulletCollisionNode_8cpp</filename>
    <includes id="d1/d63/BulletCollisionNode_8h" name="BulletCollisionNode.h" local="yes" imported="no">dart/collision/bullet/BulletCollisionNode.h</includes>
    <includes id="dd/dff/BulletTypes_8h" name="BulletTypes.h" local="yes" imported="no">dart/collision/bullet/BulletTypes.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d9/d49/BoxShape_8h" name="BoxShape.h" local="yes" imported="no">dart/dynamics/BoxShape.h</includes>
    <includes id="de/d25/EllipsoidShape_8h" name="EllipsoidShape.h" local="yes" imported="no">dart/dynamics/EllipsoidShape.h</includes>
    <includes id="d2/d73/CylinderShape_8h" name="CylinderShape.h" local="yes" imported="no">dart/dynamics/CylinderShape.h</includes>
    <includes id="de/d65/PlaneShape_8h" name="PlaneShape.h" local="yes" imported="no">dart/dynamics/PlaneShape.h</includes>
    <includes id="d0/d7e/MeshShape_8h" name="MeshShape.h" local="yes" imported="no">dart/dynamics/MeshShape.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="function">
      <type>btConvexTriangleMeshShape *</type>
      <name>_createMesh</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a22ce5b24dfd6140e14b45be5caf79b2d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_scale, const aiScene *_mesh)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BulletCollisionNode.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/bullet/</path>
    <filename>d1/d63/BulletCollisionNode_8h</filename>
    <includes id="dd/d4a/SmartPointer_8h" name="SmartPointer.h" local="yes" imported="no">dart/dynamics/SmartPointer.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="dd/d3f/CollisionNode_8h" name="CollisionNode.h" local="yes" imported="no">dart/collision/CollisionNode.h</includes>
    <class kind="struct">dart::collision::BulletUserData</class>
    <class kind="class">dart::collision::BulletCollisionNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>BulletTypes.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/bullet/</path>
    <filename>d7/da3/BulletTypes_8cpp</filename>
    <includes id="dd/dff/BulletTypes_8h" name="BulletTypes.h" local="yes" imported="no">dart/collision/bullet/BulletTypes.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>convertVector3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>af48f34ae3d323de6bee3c08842ed7a41</anchor>
      <arglist>(const btVector3 &amp;_vec)</arglist>
    </member>
    <member kind="function">
      <type>btVector3</type>
      <name>convertVector3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a2f06b4ac7aeef37633e3b3420ab5973c</anchor>
      <arglist>(const Eigen::Vector3d &amp;_vec)</arglist>
    </member>
    <member kind="function">
      <type>btMatrix3x3</type>
      <name>convertMatrix3x3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a483f89f8346675830080e7699933100f</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>btTransform</type>
      <name>convertTransform</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aac24cea5ee84f5eb396ac2c302296e14</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BulletTypes.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/bullet/</path>
    <filename>dd/dff/BulletTypes_8h</filename>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionDetector.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/</path>
    <filename>d6/d5e/CollisionDetector_8cpp</filename>
    <includes id="d4/d58/CollisionDetector_8h" name="CollisionDetector.h" local="yes" imported="no">dart/collision/CollisionDetector.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="dd/d3f/CollisionNode_8h" name="CollisionNode.h" local="yes" imported="no">dart/collision/CollisionNode.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="function">
      <type>bool</type>
      <name>isValidIndex</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a33f6efb853aab20a67e08c7f58e16ae5</anchor>
      <arglist>(const std::vector&lt; std::vector&lt; bool &gt;&gt; &amp;_collidablePairs, const std::size_t _index1, const std::size_t _index2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CollisionDetector.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/</path>
    <filename>d4/d58/CollisionDetector_8h</filename>
    <includes id="dd/d3f/CollisionNode_8h" name="CollisionNode.h" local="yes" imported="no">dart/collision/CollisionNode.h</includes>
    <includes id="dd/d4a/SmartPointer_8h" name="SmartPointer.h" local="yes" imported="no">dart/dynamics/SmartPointer.h</includes>
    <class kind="struct">dart::collision::Contact</class>
    <class kind="class">dart::collision::CollisionDetector</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionNode.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/</path>
    <filename>dd/d0f/CollisionNode_8cpp</filename>
    <includes id="dd/d3f/CollisionNode_8h" name="CollisionNode.h" local="yes" imported="no">dart/collision/CollisionNode.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionNode.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/</path>
    <filename>dd/d3f/CollisionNode_8h</filename>
    <class kind="class">dart::collision::CollisionNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>DARTCollide.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/dart/</path>
    <filename>d2/db2/DARTCollide_8cpp</filename>
    <includes id="de/d8a/DARTCollide_8h" name="DARTCollide.h" local="yes" imported="no">dart/collision/dart/DARTCollide.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d9/d49/BoxShape_8h" name="BoxShape.h" local="yes" imported="no">dart/dynamics/BoxShape.h</includes>
    <includes id="de/d25/EllipsoidShape_8h" name="EllipsoidShape.h" local="yes" imported="no">dart/dynamics/EllipsoidShape.h</includes>
    <includes id="d2/d73/CylinderShape_8h" name="CylinderShape.h" local="yes" imported="no">dart/dynamics/CylinderShape.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <class kind="struct">dart::collision::dContactGeom</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_COLLISION_EPS</name>
      <anchorfile>d2/db2/DARTCollide_8cpp.html</anchorfile>
      <anchor>a654af0a082cd2c354076e585e9b9af7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dMULTIPLYOP0_331</name>
      <anchorfile>d2/db2/DARTCollide_8cpp.html</anchorfile>
      <anchor>acd7c95f0b919f96b818a3793644058f9</anchor>
      <arglist>(A, op, B, C)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dMULTIPLYOP1_331</name>
      <anchorfile>d2/db2/DARTCollide_8cpp.html</anchorfile>
      <anchor>aadc8a10a7a740934f6be6e88a8d61032</anchor>
      <arglist>(A, op, B, C)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dRecip</name>
      <anchorfile>d2/db2/DARTCollide_8cpp.html</anchorfile>
      <anchor>a8d68a516c6cf1719b4169ee9e8eba19f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TST</name>
      <anchorfile>d2/db2/DARTCollide_8cpp.html</anchorfile>
      <anchor>aeeb3066b2701c8ecff449645fe45ea6f</anchor>
      <arglist>(expr1, expr2, norm, cc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TST</name>
      <anchorfile>d2/db2/DARTCollide_8cpp.html</anchorfile>
      <anchor>a19e189e2e0a0a91b06a684bd017070d2</anchor>
      <arglist>(expr1, expr2, n1, n2, n3, cc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEMP_INNER14</name>
      <anchorfile>d2/db2/DARTCollide_8cpp.html</anchorfile>
      <anchor>a32ca4c87185a2e44eccd27fe6962f483</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dVector3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a06cbc8d8bf1b517485a30f5fb5f59c7e</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dVector4</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a31d67aec6c73cf30b210e20f78cae13d</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dMatrix3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a41017ac8839d38f79668c697222cddbb</anchor>
      <arglist>[12]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dMatrix4</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a615dc3d4662e37b804eecac1b3a6c1ac</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dMatrix6</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a91e09b519847bdf69dcf0ca7e307195e</anchor>
      <arglist>[48]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dQuaternion</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ac42a4d9a17315ebd549ede1a4651511b</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convVector</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a2ba103455befd217da9a68983578bd34</anchor>
      <arglist>(const Eigen::Vector3d &amp;p0, dVector3 &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convMatrix</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae5963bdaf13514a32a6a6ca2927e7fa4</anchor>
      <arglist>(const Eigen::Isometry3d &amp;T0, dMatrix3 &amp;R0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a582e2b248c47e0301f4f53bc9fbc9fd5</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner14</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ade2fe0e9de532caa8d4b317f59cb6cce</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner41</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a5930bfa267cb2944c3f9b3e3dbd9b314</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner44</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a9468049d0828ec2acded2d76495dc68a</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dMULTIPLY0_331</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a6c1b007d5021df4e7c86a53b2983e7f2</anchor>
      <arglist>(double *A, const double *B, const double *C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dMULTIPLY1_331</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae6653a9f95446d3454b7ffed271c7bc7</anchor>
      <arglist>(double *A, const double *B, const double *C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cullPoints</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae70b4278338a6fa4c3412e30d58b9c18</anchor>
      <arglist>(int n, double p[], int m, int i0, int iret[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dLineClosestApproach</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aac47b960e83b7d7722dc787cc8d7efd2</anchor>
      <arglist>(const dVector3 pa, const dVector3 ua, const dVector3 pb, const dVector3 ub, double *alpha, double *beta)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>intersectRectQuad</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a3a0ff848fc18f09ae206645081fcab0e</anchor>
      <arglist>(double h[2], double p[8], double ret[16])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dClosestLineBoxPoints</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a8bbea9f76289149a458a4b776ff71e97</anchor>
      <arglist>(const dVector3 p1, const dVector3 p2, const dVector3 c, const dMatrix3 R, const dVector3 side, dVector3 lret, dVector3 bret)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dBoxBox</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a25cacdc5959f6018d3ec73f549fe75c6</anchor>
      <arglist>(const dVector3 p1, const dMatrix3 R1, const dVector3 side1, const dVector3 p2, const dMatrix3 R2, const dVector3 side2, std::vector&lt; Contact &gt; &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideBoxBox</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ab9843f8d5c225b021193e8c54e3dfa79</anchor>
      <arglist>(const Eigen::Vector3d &amp;size0, const Eigen::Isometry3d &amp;T0, const Eigen::Vector3d &amp;size1, const Eigen::Isometry3d &amp;T1, std::vector&lt; Contact &gt; *result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideBoxSphere</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aa37e5f03947916b8f3da016a5572f795</anchor>
      <arglist>(const Eigen::Vector3d &amp;size0, const Eigen::Isometry3d &amp;T0, const double &amp;r1, const Eigen::Isometry3d &amp;T1, std::vector&lt; Contact &gt; *result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideSphereBox</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>af5ad125996af8462bb6b494d90f3fa43</anchor>
      <arglist>(const double &amp;r0, const Eigen::Isometry3d &amp;T0, const Eigen::Vector3d &amp;size1, const Eigen::Isometry3d &amp;T1, std::vector&lt; Contact &gt; *result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideSphereSphere</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a92de52212abc3e2d52442597b44b56a1</anchor>
      <arglist>(const double &amp;_r0, const Eigen::Isometry3d &amp;c0, const double &amp;_r1, const Eigen::Isometry3d &amp;c1, std::vector&lt; Contact &gt; *result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideCylinderSphere</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a57ae18620eae66a8812e1784acb9de1b</anchor>
      <arglist>(const double &amp;cyl_rad, const double &amp;half_height, const Eigen::Isometry3d &amp;T0, const double &amp;sphere_rad, const Eigen::Isometry3d &amp;T1, std::vector&lt; Contact &gt; *result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideCylinderPlane</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a74d6cbac277625331a4a0adeb7d7c0cd</anchor>
      <arglist>(const double &amp;cyl_rad, const double &amp;half_height, const Eigen::Isometry3d &amp;T0, const Eigen::Vector3d &amp;plane_normal, const Eigen::Isometry3d &amp;T1, std::vector&lt; Contact &gt; *result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collide</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a5a95a1596a7c4011fb36b22af90cbadd</anchor>
      <arglist>(dynamics::ConstShapePtr _shape0, const Eigen::Isometry3d &amp;_T0, dynamics::ConstShapePtr _shape1, const Eigen::Isometry3d &amp;_T1, std::vector&lt; Contact &gt; *_result)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>MAX_CYLBOX_CLIP_POINTS</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a80ba017c7bf196a9663e0a9d3cd8578b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>nCYLINDER_AXIS</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a4146747250f23fa87196b56d54138c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>nCYLINDER_SEGMENT</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae7562cb943cd38b057831387484bea04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DARTCollide.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/dart/</path>
    <filename>de/d8a/DARTCollide_8h</filename>
    <includes id="d4/d58/CollisionDetector_8h" name="CollisionDetector.h" local="yes" imported="no">dart/collision/CollisionDetector.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::collision</namespace>
    <member kind="function">
      <type>int</type>
      <name>collide</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a4584df7639ad83c98ad22747368dbaa0</anchor>
      <arglist>(dart::dynamics::ConstShapePtr _shape0, const Eigen::Isometry3d &amp;_T0, dart::dynamics::ConstShapePtr _shape1, const Eigen::Isometry3d &amp;_T1, std::vector&lt; Contact &gt; *_result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DARTCollisionDetector.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/dart/</path>
    <filename>dc/d01/DARTCollisionDetector_8cpp</filename>
    <includes id="d4/dc0/DARTCollisionDetector_8h" name="DARTCollisionDetector.h" local="yes" imported="no">dart/collision/dart/DARTCollisionDetector.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="de/d8a/DARTCollide_8h" name="DARTCollide.h" local="yes" imported="no">dart/collision/dart/DARTCollide.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>DARTCollisionDetector.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/dart/</path>
    <filename>d4/dc0/DARTCollisionDetector_8h</filename>
    <includes id="d4/d58/CollisionDetector_8h" name="CollisionDetector.h" local="yes" imported="no">dart/collision/CollisionDetector.h</includes>
    <class kind="class">dart::collision::DARTCollisionDetector</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>FCLCollisionDetector.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl/</path>
    <filename>d2/d00/FCLCollisionDetector_8cpp</filename>
    <includes id="d9/dd0/FCLCollisionDetector_8h" name="FCLCollisionDetector.h" local="yes" imported="no">dart/collision/fcl/FCLCollisionDetector.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="d4/d76/FCLCollisionNode_8h" name="FCLCollisionNode.h" local="yes" imported="no">dart/collision/fcl/FCLCollisionNode.h</includes>
    <includes id="d7/dab/FCLTypes_8h" name="FCLTypes.h" local="yes" imported="no">dart/collision/fcl/FCLTypes.h</includes>
    <class kind="struct">dart::collision::CollisionData</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="define">
      <type>#define</type>
      <name>FCL_VERSION_AT_LEAST</name>
      <anchorfile>d2/d00/FCLCollisionDetector_8cpp.html</anchorfile>
      <anchor>a6791c3dd766d6e264155b65053d85bf9</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collisionCallBack</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a8314ed4d521bfb1a3f604452957344e9</anchor>
      <arglist>(fcl::CollisionObject *_o1, fcl::CollisionObject *_o2, void *_cdata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isClose</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ab5140bbf7847568e359958896d7a4077</anchor>
      <arglist>(const Eigen::Vector3d &amp;_point1, const Eigen::Vector3d &amp;_point2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasClosePoint</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a82b1579f129bc71de11774cad7fddade</anchor>
      <arglist>(const std::vector&lt; Contact &gt; &amp;_contacts, const Eigen::Vector3d &amp;_point)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FCLCollisionDetector.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl/</path>
    <filename>d9/dd0/FCLCollisionDetector_8h</filename>
    <includes id="d4/d58/CollisionDetector_8h" name="CollisionDetector.h" local="yes" imported="no">dart/collision/CollisionDetector.h</includes>
    <class kind="class">dart::collision::FCLCollisionDetector</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>FCLCollisionNode.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl/</path>
    <filename>dc/d0e/FCLCollisionNode_8cpp</filename>
    <includes id="d4/d76/FCLCollisionNode_8h" name="FCLCollisionNode.h" local="yes" imported="no">dart/collision/fcl/FCLCollisionNode.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d9/d49/BoxShape_8h" name="BoxShape.h" local="yes" imported="no">dart/dynamics/BoxShape.h</includes>
    <includes id="de/d25/EllipsoidShape_8h" name="EllipsoidShape.h" local="yes" imported="no">dart/dynamics/EllipsoidShape.h</includes>
    <includes id="d2/d73/CylinderShape_8h" name="CylinderShape.h" local="yes" imported="no">dart/dynamics/CylinderShape.h</includes>
    <includes id="de/d65/PlaneShape_8h" name="PlaneShape.h" local="yes" imported="no">dart/dynamics/PlaneShape.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="d0/d7e/MeshShape_8h" name="MeshShape.h" local="yes" imported="no">dart/dynamics/MeshShape.h</includes>
    <includes id="d6/db8/SoftMeshShape_8h" name="SoftMeshShape.h" local="yes" imported="no">dart/dynamics/SoftMeshShape.h</includes>
    <includes id="d7/dab/FCLTypes_8h" name="FCLTypes.h" local="yes" imported="no">dart/collision/fcl/FCLTypes.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="define">
      <type>#define</type>
      <name>FCL_VERSION_AT_LEAST</name>
      <anchorfile>dc/d0e/FCLCollisionNode_8cpp.html</anchorfile>
      <anchor>a6791c3dd766d6e264155b65053d85bf9</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="function">
      <type>fcl::BVHModel&lt; BV &gt; *</type>
      <name>createEllipsoid</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a3a42c7afbeb5d268bc555cbd9859bcbb</anchor>
      <arglist>(float _sizeX, float _sizeY, float _sizeZ)</arglist>
    </member>
    <member kind="function">
      <type>fcl::BVHModel&lt; BV &gt; *</type>
      <name>createMesh</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a45fa8ae5b072cf705cc2b78b5df68ed7</anchor>
      <arglist>(float _scaleX, float _scaleY, float _scaleZ, const aiScene *_mesh)</arglist>
    </member>
    <member kind="function">
      <type>fcl::BVHModel&lt; BV &gt; *</type>
      <name>createSoftMesh</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a02f1211f19abf81c116e5c5052de3681</anchor>
      <arglist>(const aiMesh *_mesh, const fcl::Transform3f &amp;_transform)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FCLCollisionNode.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl/</path>
    <filename>d4/d76/FCLCollisionNode_8h</filename>
    <includes id="dd/d3f/CollisionNode_8h" name="CollisionNode.h" local="yes" imported="no">dart/collision/CollisionNode.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <class kind="struct">dart::collision::FCLUserData</class>
    <class kind="class">dart::collision::FCLCollisionNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>FCLTypes.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl/</path>
    <filename>d5/d57/FCLTypes_8cpp</filename>
    <includes id="d7/dab/FCLTypes_8h" name="FCLTypes.h" local="yes" imported="no">dart/collision/fcl/FCLTypes.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>FCLTypes.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl/</path>
    <filename>d7/dab/FCLTypes_8h</filename>
    <class kind="class">dart::collision::FCLTypes</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>CollisionShapes.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl_mesh/</path>
    <filename>d0/d11/CollisionShapes_8h</filename>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <member kind="function">
      <type>fcl::BVHModel&lt; BV &gt; *</type>
      <name>createMesh</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a33d9e432d1c8108756e0a356490e71a0</anchor>
      <arglist>(float _scaleX, float _scaleY, float _scaleZ, const aiScene *_mesh, const fcl::Transform3f &amp;_transform)</arglist>
    </member>
    <member kind="function">
      <type>fcl::BVHModel&lt; BV &gt; *</type>
      <name>createEllipsoid</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>af3e97734fb6d0fa41220589c7bef62ed</anchor>
      <arglist>(float _sizeX, float _sizeY, float _sizeZ, const fcl::Transform3f &amp;_transform)</arglist>
    </member>
    <member kind="function">
      <type>fcl::BVHModel&lt; BV &gt; *</type>
      <name>createCube</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a867c7d3c8dff56789567e8de05636fca</anchor>
      <arglist>(float _sizeX, float _sizeY, float _sizeZ, const fcl::Transform3f &amp;_transform)</arglist>
    </member>
    <member kind="function">
      <type>fcl::BVHModel&lt; BV &gt; *</type>
      <name>createCylinder</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ac9dd5c8a6c4e027007a229104f2dea4e</anchor>
      <arglist>(double _baseRadius, double _topRadius, double _height, int _slices, int _stacks, const fcl::Transform3f &amp;_transform)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FCLMeshCollisionDetector.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl_mesh/</path>
    <filename>d6/ddd/FCLMeshCollisionDetector_8cpp</filename>
    <includes id="db/dd5/FCLMeshCollisionDetector_8h" name="FCLMeshCollisionDetector.h" local="yes" imported="no">dart/collision/fcl_mesh/FCLMeshCollisionDetector.h</includes>
    <includes id="dc/de7/LoadOpengl_8h" name="LoadOpengl.h" local="yes" imported="no">dart/renderer/LoadOpengl.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d0/d9b/SoftBodyNode_8h" name="SoftBodyNode.h" local="yes" imported="no">dart/dynamics/SoftBodyNode.h</includes>
    <includes id="db/d4c/PointMass_8h" name="PointMass.h" local="yes" imported="no">dart/dynamics/PointMass.h</includes>
    <includes id="dd/d3f/CollisionNode_8h" name="CollisionNode.h" local="yes" imported="no">dart/collision/CollisionNode.h</includes>
    <includes id="d0/d11/CollisionShapes_8h" name="CollisionShapes.h" local="yes" imported="no">dart/collision/fcl_mesh/CollisionShapes.h</includes>
    <includes id="df/d71/FCLMeshCollisionNode_8h" name="FCLMeshCollisionNode.h" local="yes" imported="no">dart/collision/fcl_mesh/FCLMeshCollisionNode.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>FCLMeshCollisionDetector.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl_mesh/</path>
    <filename>db/dd5/FCLMeshCollisionDetector_8h</filename>
    <includes id="d4/d58/CollisionDetector_8h" name="CollisionDetector.h" local="yes" imported="no">dart/collision/CollisionDetector.h</includes>
    <class kind="class">dart::collision::FCLMeshCollisionDetector</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>FCLMeshCollisionNode.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl_mesh/</path>
    <filename>db/d09/FCLMeshCollisionNode_8cpp</filename>
    <includes id="df/d71/FCLMeshCollisionNode_8h" name="FCLMeshCollisionNode.h" local="yes" imported="no">dart/collision/fcl_mesh/FCLMeshCollisionNode.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="d9/d49/BoxShape_8h" name="BoxShape.h" local="yes" imported="no">dart/dynamics/BoxShape.h</includes>
    <includes id="d0/d7e/MeshShape_8h" name="MeshShape.h" local="yes" imported="no">dart/dynamics/MeshShape.h</includes>
    <includes id="de/d25/EllipsoidShape_8h" name="EllipsoidShape.h" local="yes" imported="no">dart/dynamics/EllipsoidShape.h</includes>
    <includes id="d2/d73/CylinderShape_8h" name="CylinderShape.h" local="yes" imported="no">dart/dynamics/CylinderShape.h</includes>
    <includes id="d6/db8/SoftMeshShape_8h" name="SoftMeshShape.h" local="yes" imported="no">dart/dynamics/SoftMeshShape.h</includes>
    <includes id="dc/de7/LoadOpengl_8h" name="LoadOpengl.h" local="yes" imported="no">dart/renderer/LoadOpengl.h</includes>
    <includes id="d0/d11/CollisionShapes_8h" name="CollisionShapes.h" local="yes" imported="no">dart/collision/fcl_mesh/CollisionShapes.h</includes>
    <includes id="db/dd5/FCLMeshCollisionDetector_8h" name="FCLMeshCollisionDetector.h" local="yes" imported="no">dart/collision/fcl_mesh/FCLMeshCollisionDetector.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>FCLMeshCollisionNode.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl_mesh/</path>
    <filename>df/d71/FCLMeshCollisionNode_8h</filename>
    <includes id="dd/d3f/CollisionNode_8h" name="CollisionNode.h" local="yes" imported="no">dart/collision/CollisionNode.h</includes>
    <includes id="d4/d58/CollisionDetector_8h" name="CollisionDetector.h" local="yes" imported="no">dart/collision/CollisionDetector.h</includes>
    <includes id="df/d7e/tri__tri__intersection__test_8h" name="tri_tri_intersection_test.h" local="yes" imported="no">dart/collision/fcl_mesh/tri_tri_intersection_test.h</includes>
    <class kind="class">dart::collision::FCLMeshCollisionNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::collision</namespace>
  </compound>
  <compound kind="file">
    <name>tri_tri_intersection_test.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl_mesh/</path>
    <filename>df/d7e/tri__tri__intersection__test_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>FABS</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>a9b649f4d878e64a80b4cd2cad45f43b3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USE_EPSILON_TEST</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>a30e72ae9306395819bee85199878fa9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPSILON</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>a002b2f4894492820fe708b1b7e7c5e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_CONTACT</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>a5409f11a5d10becb9f8625cde63924cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COPLANAR_CONTACT</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>a033fad011269e0c02323d1634fcd64f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INTERIAL_CONTACT</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>aa2bd9d44ef5e226062ca9f56307d82cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CROSS</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>a275587ce22080c4c09deb818b1ce3564</anchor>
      <arglist>(dest, v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOT</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>a7942047af87f6f42fe6880a4c7c842ae</anchor>
      <arglist>(v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>a241dda3a0a43611f1187bdfebc3391d7</anchor>
      <arglist>(dest, v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADD</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>ae4523d8a54d733effac8236546decd4c</anchor>
      <arglist>(dest, v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULT</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>af3dd211b007998f1568cde5e9a25d6bc</anchor>
      <arglist>(dest, v, factor)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIV</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>a08e256370d129272d4b47df0710a366c</anchor>
      <arglist>(dest, v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>aa7ff16bef9247f63b96fd79e1833bc1c</anchor>
      <arglist>(dest, src)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SORT</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>ac226bc1ed04fd7d4865263484ed22a47</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SWAP</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>aac9153aee4bdb92701df902e06a74eb3</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ISECT</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>acbc500e8e7812f102a89fa065c80c36e</anchor>
      <arglist>(VV0, VV1, VV2, D0, D1, D2, isect0, isect1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPUTE_INTERVALS</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>abde7de24036af5d1c5257bb6b6738335</anchor>
      <arglist>(VV0, VV1, VV2, D0, D1, D2, D0D1, D0D2, isect0, isect1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>edge_tri_intersect</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>a5e7babd88a23c7455a0c82a06dd1ff10</anchor>
      <arglist>(float V0[3], float V1[3], float DV0, float DV1, float V[3])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tri_tri_intersect</name>
      <anchorfile>df/d7e/tri__tri__intersection__test_8h.html</anchorfile>
      <anchor>aee3759bc183c9ffcf6418784164c2a87</anchor>
      <arglist>(float V0[3], float V1[3], float V2[3], float U0[3], float U1[3], float U2[3], float res1[3], float res2[3])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Console.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d5/d1a/Console_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>colorMsg</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>af7e228b6914a47b7f42e43d0ed615e7b</anchor>
      <arglist>(const std::string &amp;_msg, int _color)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>colorErr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>afe69bb6c9e434a7421aee6dbeaa7c195</anchor>
      <arglist>(const std::string &amp;_msg, const std::string &amp;_file, unsigned int _line, int _color)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Console.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d2/d3f/Console_8h</filename>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="define">
      <type>#define</type>
      <name>dtmsg</name>
      <anchorfile>d2/d3f/Console_8h.html</anchorfile>
      <anchor>a826562d8b387d3249a9bbd1f851f57b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dtdbg</name>
      <anchorfile>d2/d3f/Console_8h.html</anchorfile>
      <anchor>abd8537185ba9af5be734e69ce6bfcf9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dtwarn</name>
      <anchorfile>d2/d3f/Console_8h.html</anchorfile>
      <anchor>a9713004034ce30e0de1fe34de5096a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dterr</name>
      <anchorfile>d2/d3f/Console_8h.html</anchorfile>
      <anchor>a629c9358594739a393fed2a82f8f8137</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Deprecated.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d9/db7/Deprecated_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>DEPRECATED</name>
      <anchorfile>d9/db7/Deprecated_8h.html</anchorfile>
      <anchor>a8c2405e88b68ac98d7bb65f491bf5daa</anchor>
      <arglist>(version)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORCEINLINE</name>
      <anchorfile>d9/db7/Deprecated_8h.html</anchorfile>
      <anchor>a724fb9f82013c782db5c3c12ea36aac8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ConnectionBody.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/detail/</path>
    <filename>dd/de9/ConnectionBody_8cpp</filename>
    <includes id="d3/d97/ConnectionBody_8h" name="ConnectionBody.h" local="yes" imported="no">dart/common/detail/ConnectionBody.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::common::signal</namespace>
    <namespace>dart::common::signal::detail</namespace>
  </compound>
  <compound kind="file">
    <name>ConnectionBody.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/detail/</path>
    <filename>d3/d97/ConnectionBody_8h</filename>
    <class kind="class">dart::common::signal::detail::ConnectionBodyBase</class>
    <class kind="class">dart::common::signal::detail::ConnectionBody</class>
    <class kind="struct">dart::common::signal::detail::DefaultCombiner</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::common::signal</namespace>
    <namespace>dart::common::signal::detail</namespace>
  </compound>
  <compound kind="file">
    <name>NameManager.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/detail/</path>
    <filename>d3/da6/detail_2NameManager_8h</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>NameManager.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>db/d33/NameManager_8h</filename>
    <includes id="d3/da6/detail_2NameManager_8h" name="NameManager.h" local="yes" imported="no">dart/common/detail/NameManager.h</includes>
    <class kind="class">dart::common::NameManager</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Signal.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/detail/</path>
    <filename>d2/d5d/detail_2Signal_8h</filename>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Signal.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d0/def/Signal_8h</filename>
    <includes id="d9/db7/Deprecated_8h" name="Deprecated.h" local="yes" imported="no">dart/common/Deprecated.h</includes>
    <includes id="d3/d97/ConnectionBody_8h" name="ConnectionBody.h" local="yes" imported="no">dart/common/detail/ConnectionBody.h</includes>
    <includes id="d2/d5d/detail_2Signal_8h" name="Signal.h" local="yes" imported="no">dart/common/detail/Signal.h</includes>
    <class kind="class">dart::common::Connection</class>
    <class kind="class">dart::common::ScopedConnection</class>
    <class kind="class">dart::common::Signal</class>
    <class kind="class">dart::common::Signal&lt; _Res(_ArgTypes...), Combiner &gt;</class>
    <class kind="class">dart::common::Signal&lt; void(_ArgTypes...)&gt;</class>
    <class kind="class">dart::common::SlotRegister</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>sub_ptr.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/detail/</path>
    <filename>de/d1d/detail_2sub__ptr_8h</filename>
  </compound>
  <compound kind="file">
    <name>sub_ptr.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>da/d07/sub__ptr_8h</filename>
    <includes id="d8/df1/Observer_8h" name="Observer.h" local="yes" imported="no">dart/common/Observer.h</includes>
    <includes id="de/d1d/detail_2sub__ptr_8h" name="sub_ptr.h" local="yes" imported="no">dart/common/detail/sub_ptr.h</includes>
    <class kind="class">dart::common::sub_ptr</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="typedef">
      <type>common::sub_ptr&lt; T &gt;</type>
      <name>sub_ptr</name>
      <anchorfile>d1/d83/namespacedart.html</anchorfile>
      <anchor>aaf0980612cd4d36f879823eb69711522</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LocalResource.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d3/d79/LocalResource_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d4/d1c/LocalResource_8h" name="LocalResource.h" local="yes" imported="no">LocalResource.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>LocalResource.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d4/d1c/LocalResource_8h</filename>
    <includes id="da/d1f/Resource_8h" name="Resource.h" local="yes" imported="no">dart/common/Resource.h</includes>
    <class kind="class">dart::common::LocalResource</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>LocalResourceRetriever.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d4/dbd/LocalResourceRetriever_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="da/d26/Uri_8h" name="Uri.h" local="yes" imported="no">dart/common/Uri.h</includes>
    <includes id="d5/d13/LocalResourceRetriever_8h" name="LocalResourceRetriever.h" local="yes" imported="no">LocalResourceRetriever.h</includes>
    <includes id="d4/d1c/LocalResource_8h" name="LocalResource.h" local="yes" imported="no">LocalResource.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>LocalResourceRetriever.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d5/d13/LocalResourceRetriever_8h</filename>
    <includes id="d3/d14/ResourceRetriever_8h" name="ResourceRetriever.h" local="yes" imported="no">dart/common/ResourceRetriever.h</includes>
    <class kind="class">dart::common::LocalResourceRetriever</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; LocalResourceRetriever &gt;</type>
      <name>LocalResourceRetrieverPtr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a7e980fe2587497d7848324ae6a805c32</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Memory.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>de/d5c/Memory_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>DART_ALIGNED</name>
      <anchorfile>de/d5c/Memory_8h.html</anchorfile>
      <anchor>aa3cf4a570705d6adf35884bca40acf99</anchor>
      <arglist>(v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Observer.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d8/d56/Observer_8cpp</filename>
    <includes id="db/de8/Subject_8h" name="Subject.h" local="yes" imported="no">dart/common/Subject.h</includes>
    <includes id="d8/df1/Observer_8h" name="Observer.h" local="yes" imported="no">dart/common/Observer.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Observer.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d8/df1/Observer_8h</filename>
    <class kind="class">dart::common::Observer</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Resource.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>da/d1f/Resource_8h</filename>
    <class kind="class">dart::common::Resource</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Resource &gt;</type>
      <name>ResourcePtr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a17b6f1fe8c719e1059adc09c4f43df67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ResourceRetriever.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d3/d14/ResourceRetriever_8h</filename>
    <includes id="d9/db7/Deprecated_8h" name="Deprecated.h" local="yes" imported="no">dart/common/Deprecated.h</includes>
    <includes id="da/d1f/Resource_8h" name="Resource.h" local="yes" imported="no">dart/common/Resource.h</includes>
    <includes id="da/d26/Uri_8h" name="Uri.h" local="yes" imported="no">dart/common/Uri.h</includes>
    <class kind="class">dart::common::ResourceRetriever</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ResourceRetriever &gt;</type>
      <name>ResourceRetrieverPtr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a79a12a817633757c8465245b78d91bfc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Signal.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d1/de5/Signal_8cpp</filename>
    <includes id="d0/def/Signal_8h" name="Signal.h" local="yes" imported="no">dart/common/Signal.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Subject.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d7/d91/Subject_8cpp</filename>
    <includes id="db/de8/Subject_8h" name="Subject.h" local="yes" imported="no">dart/common/Subject.h</includes>
    <includes id="d8/df1/Observer_8h" name="Observer.h" local="yes" imported="no">dart/common/Observer.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Subject.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>db/de8/Subject_8h</filename>
    <class kind="class">dart::common::Subject</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Timer.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d0/dc2/Timer_8cpp</filename>
    <includes id="dd/d27/Timer_8h" name="Timer.h" local="yes" imported="no">dart/common/Timer.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Timer.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>dd/d27/Timer_8h</filename>
    <class kind="class">dart::common::Timer</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>Uri.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>d0/da2/Uri_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="da/d26/Uri_8h" name="Uri.h" local="yes" imported="no">Uri.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>startsWith</name>
      <anchorfile>d0/da2/Uri_8cpp.html</anchorfile>
      <anchor>a778722d7d766708ae393458b4529ffa3</anchor>
      <arglist>(const std::string &amp;_target, const std::string &amp;_prefix)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Uri.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>da/d26/Uri_8h</filename>
    <includes id="d9/db7/Deprecated_8h" name="Deprecated.h" local="yes" imported="no">dart/common/Deprecated.h</includes>
    <class kind="class">dart::common::UriComponent</class>
    <class kind="struct">dart::common::Uri</class>
    <namespace>dart</namespace>
    <namespace>dart::common</namespace>
  </compound>
  <compound kind="file">
    <name>BalanceConstraint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>db/d7c/BalanceConstraint_8cpp</filename>
    <includes id="d2/d16/BalanceConstraint_8h" name="BalanceConstraint.h" local="yes" imported="no">dart/constraint/BalanceConstraint.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="d9/da1/EndEffector_8h" name="EndEffector.h" local="yes" imported="no">dart/dynamics/EndEffector.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addDampedPseudoInverseToGradient</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ab1ca16fdd4b156f83993421c1f0c11df</anchor>
      <arglist>(Eigen::Map&lt; Eigen::VectorXd &gt; &amp;grad, const JacType &amp;J, const Eigen::MatrixXd &amp;nullspace, const Eigen::Vector3d &amp;error, double damping)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>convertJacobianMethodOutputToGradient</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ab25299cfe8ec0b8199f6f00eece7db2e</anchor>
      <arglist>(Eigen::Map&lt; Eigen::VectorXd &gt; &amp;grad, const std::weak_ptr&lt; dynamics::HierarchicalIK &gt; &amp;mIK)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BalanceConstraint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d2/d16/BalanceConstraint_8h</filename>
    <includes id="d2/dc9/HierarchicalIK_8h" name="HierarchicalIK.h" local="yes" imported="no">dart/dynamics/HierarchicalIK.h</includes>
    <class kind="class">dart::constraint::BalanceConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>BallJointConstraint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d0/d37/BallJointConstraint_8cpp</filename>
    <includes id="d5/da0/BallJointConstraint_8h" name="BallJointConstraint.h" local="yes" imported="no">dart/constraint/BallJointConstraint.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="d8/df5/lcp_8h" name="lcp.h" local="yes" imported="no">dart/lcpsolver/lcp.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>BallJointConstraint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d5/da0/BallJointConstraint_8h</filename>
    <includes id="d5/d55/MathTypes_8h" name="MathTypes.h" local="yes" imported="no">dart/math/MathTypes.h</includes>
    <includes id="d5/dc2/JointConstraint_8h" name="JointConstraint.h" local="yes" imported="no">dart/constraint/JointConstraint.h</includes>
    <class kind="class">dart::constraint::BallJointConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ConstrainedGroup.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d5/d6e/ConstrainedGroup_8cpp</filename>
    <includes id="da/d1b/ConstrainedGroup_8h" name="ConstrainedGroup.h" local="yes" imported="no">dart/constraint/ConstrainedGroup.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/da5/ConstraintBase_8h" name="ConstraintBase.h" local="yes" imported="no">dart/constraint/ConstraintBase.h</includes>
    <includes id="da/db5/ConstraintSolver_8h" name="ConstraintSolver.h" local="yes" imported="no">dart/constraint/ConstraintSolver.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ConstrainedGroup.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>da/d1b/ConstrainedGroup_8h</filename>
    <class kind="class">dart::constraint::ConstrainedGroup</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ConstraintBase.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>df/de2/ConstraintBase_8cpp</filename>
    <includes id="db/da5/ConstraintBase_8h" name="ConstraintBase.h" local="yes" imported="no">dart/constraint/ConstraintBase.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ConstraintBase.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>db/da5/ConstraintBase_8h</filename>
    <includes id="dd/d4a/SmartPointer_8h" name="SmartPointer.h" local="yes" imported="no">dart/dynamics/SmartPointer.h</includes>
    <class kind="struct">dart::constraint::ConstraintInfo</class>
    <class kind="class">dart::constraint::ConstraintBase</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ConstraintSolver.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d7/dc0/ConstraintSolver_8cpp</filename>
    <includes id="da/db5/ConstraintSolver_8h" name="ConstraintSolver.h" local="yes" imported="no">dart/constraint/ConstraintSolver.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d0/d9b/SoftBodyNode_8h" name="SoftBodyNode.h" local="yes" imported="no">dart/dynamics/SoftBodyNode.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="db/dd5/FCLMeshCollisionDetector_8h" name="FCLMeshCollisionDetector.h" local="yes" imported="no">dart/collision/fcl_mesh/FCLMeshCollisionDetector.h</includes>
    <includes id="d4/dc0/DARTCollisionDetector_8h" name="DARTCollisionDetector.h" local="yes" imported="no">dart/collision/dart/DARTCollisionDetector.h</includes>
    <includes id="da/d1b/ConstrainedGroup_8h" name="ConstrainedGroup.h" local="yes" imported="no">dart/constraint/ConstrainedGroup.h</includes>
    <includes id="d3/dbe/ContactConstraint_8h" name="ContactConstraint.h" local="yes" imported="no">dart/constraint/ContactConstraint.h</includes>
    <includes id="dd/d1a/SoftContactConstraint_8h" name="SoftContactConstraint.h" local="yes" imported="no">dart/constraint/SoftContactConstraint.h</includes>
    <includes id="d3/d61/JointLimitConstraint_8h" name="JointLimitConstraint.h" local="yes" imported="no">dart/constraint/JointLimitConstraint.h</includes>
    <includes id="da/dfc/JointCoulombFrictionConstraint_8h" name="JointCoulombFrictionConstraint.h" local="yes" imported="no">dart/constraint/JointCoulombFrictionConstraint.h</includes>
    <includes id="d3/d39/DantzigLCPSolver_8h" name="DantzigLCPSolver.h" local="yes" imported="no">dart/constraint/DantzigLCPSolver.h</includes>
    <includes id="d6/d2b/PGSLCPSolver_8h" name="PGSLCPSolver.h" local="yes" imported="no">dart/constraint/PGSLCPSolver.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ConstraintSolver.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>da/db5/ConstraintSolver_8h</filename>
    <includes id="db/da5/ConstraintBase_8h" name="ConstraintBase.h" local="yes" imported="no">dart/constraint/ConstraintBase.h</includes>
    <includes id="d4/d58/CollisionDetector_8h" name="CollisionDetector.h" local="yes" imported="no">dart/collision/CollisionDetector.h</includes>
    <class kind="class">dart::constraint::ConstraintSolver</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>ContactConstraint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d7/d27/ContactConstraint_8cpp</filename>
    <includes id="d3/dbe/ContactConstraint_8h" name="ContactConstraint.h" local="yes" imported="no">dart/constraint/ContactConstraint.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="d8/df5/lcp_8h" name="lcp.h" local="yes" imported="no">dart/lcpsolver/lcp.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERROR_ALLOWANCE</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>a0f1f4106a1f7a30bd2b04d8754bb9e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERP</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>ac12c507c1b5d92519e5929d66d57ca7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_MAX_ERV</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>a0d31a4befde2f2b4fc67c8b48a95ca6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_CFM</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>a1df203c33aed22bdff50496e142257d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_RESTITUTION_COEFF_THRESHOLD</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>a35d6849d333ec9b11821ef7e55207bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_FRICTION_COEFF_THRESHOLD</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>a2b0dcfb1536ff83c9edc47cedca73be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BOUNCING_VELOCITY_THRESHOLD</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>aa9d7023df6b58e42d8db01389e573f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_MAX_BOUNCING_VELOCITY</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>ae53f26ba1a39411bfa968a3fbfeceb76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_CONTACT_CONSTRAINT_EPSILON</name>
      <anchorfile>d7/d27/ContactConstraint_8cpp.html</anchorfile>
      <anchor>a30e2fcf76be9305b552146a7b93cf064</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ContactConstraint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d3/dbe/ContactConstraint_8h</filename>
    <includes id="db/da5/ConstraintBase_8h" name="ConstraintBase.h" local="yes" imported="no">dart/constraint/ConstraintBase.h</includes>
    <includes id="d5/d55/MathTypes_8h" name="MathTypes.h" local="yes" imported="no">dart/math/MathTypes.h</includes>
    <includes id="d4/d58/CollisionDetector_8h" name="CollisionDetector.h" local="yes" imported="no">dart/collision/CollisionDetector.h</includes>
    <class kind="class">dart::constraint::ContactConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>DantzigLCPSolver.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>de/de8/DantzigLCPSolver_8cpp</filename>
    <includes id="d3/d39/DantzigLCPSolver_8h" name="DantzigLCPSolver.h" local="yes" imported="no">dart/constraint/DantzigLCPSolver.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/da5/ConstraintBase_8h" name="ConstraintBase.h" local="yes" imported="no">dart/constraint/ConstraintBase.h</includes>
    <includes id="da/d1b/ConstrainedGroup_8h" name="ConstrainedGroup.h" local="yes" imported="no">dart/constraint/ConstrainedGroup.h</includes>
    <includes id="d7/dde/Lemke_8h" name="Lemke.h" local="yes" imported="no">dart/lcpsolver/Lemke.h</includes>
    <includes id="d8/df5/lcp_8h" name="lcp.h" local="yes" imported="no">dart/lcpsolver/lcp.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>DantzigLCPSolver.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d3/d39/DantzigLCPSolver_8h</filename>
    <includes id="d6/d84/LCPSolver_8h" name="LCPSolver.h" local="yes" imported="no">dart/constraint/LCPSolver.h</includes>
    <class kind="class">dart::constraint::DantzigLCPSolver</class>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>JointConstraint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>db/d4f/JointConstraint_8cpp</filename>
    <includes id="d5/dc2/JointConstraint_8h" name="JointConstraint.h" local="yes" imported="no">dart/constraint/JointConstraint.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERROR_ALLOWANCE</name>
      <anchorfile>db/d4f/JointConstraint_8cpp.html</anchorfile>
      <anchor>a0f1f4106a1f7a30bd2b04d8754bb9e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERP</name>
      <anchorfile>db/d4f/JointConstraint_8cpp.html</anchorfile>
      <anchor>ac12c507c1b5d92519e5929d66d57ca7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_MAX_ERV</name>
      <anchorfile>db/d4f/JointConstraint_8cpp.html</anchorfile>
      <anchor>a0d31a4befde2f2b4fc67c8b48a95ca6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_CFM</name>
      <anchorfile>db/d4f/JointConstraint_8cpp.html</anchorfile>
      <anchor>a1df203c33aed22bdff50496e142257d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JointConstraint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d5/dc2/JointConstraint_8h</filename>
    <includes id="db/da5/ConstraintBase_8h" name="ConstraintBase.h" local="yes" imported="no">dart/constraint/ConstraintBase.h</includes>
    <class kind="class">dart::constraint::JointConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>JointCoulombFrictionConstraint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d1/dfc/JointCoulombFrictionConstraint_8cpp</filename>
    <includes id="da/dfc/JointCoulombFrictionConstraint_8h" name="JointCoulombFrictionConstraint.h" local="yes" imported="no">dart/constraint/JointCoulombFrictionConstraint.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="d8/df5/lcp_8h" name="lcp.h" local="yes" imported="no">dart/lcpsolver/lcp.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_CFM</name>
      <anchorfile>d1/dfc/JointCoulombFrictionConstraint_8cpp.html</anchorfile>
      <anchor>a1df203c33aed22bdff50496e142257d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JointCoulombFrictionConstraint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>da/dfc/JointCoulombFrictionConstraint_8h</filename>
    <includes id="db/da5/ConstraintBase_8h" name="ConstraintBase.h" local="yes" imported="no">dart/constraint/ConstraintBase.h</includes>
    <class kind="class">dart::constraint::JointCoulombFrictionConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>JointLimitConstraint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>db/d5d/JointLimitConstraint_8cpp</filename>
    <includes id="d3/d61/JointLimitConstraint_8h" name="JointLimitConstraint.h" local="yes" imported="no">dart/constraint/JointLimitConstraint.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="d8/df5/lcp_8h" name="lcp.h" local="yes" imported="no">dart/lcpsolver/lcp.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERROR_ALLOWANCE</name>
      <anchorfile>db/d5d/JointLimitConstraint_8cpp.html</anchorfile>
      <anchor>a0f1f4106a1f7a30bd2b04d8754bb9e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERP</name>
      <anchorfile>db/d5d/JointLimitConstraint_8cpp.html</anchorfile>
      <anchor>ac12c507c1b5d92519e5929d66d57ca7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_MAX_ERV</name>
      <anchorfile>db/d5d/JointLimitConstraint_8cpp.html</anchorfile>
      <anchor>a0d31a4befde2f2b4fc67c8b48a95ca6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_CFM</name>
      <anchorfile>db/d5d/JointLimitConstraint_8cpp.html</anchorfile>
      <anchor>a1df203c33aed22bdff50496e142257d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JointLimitConstraint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d3/d61/JointLimitConstraint_8h</filename>
    <includes id="db/da5/ConstraintBase_8h" name="ConstraintBase.h" local="yes" imported="no">dart/constraint/ConstraintBase.h</includes>
    <class kind="class">dart::constraint::JointLimitConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>LCPSolver.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d1/daf/LCPSolver_8cpp</filename>
    <includes id="d6/d84/LCPSolver_8h" name="LCPSolver.h" local="yes" imported="no">dart/constraint/LCPSolver.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>LCPSolver.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d6/d84/LCPSolver_8h</filename>
    <class kind="class">dart::constraint::LCPSolver</class>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>PGSLCPSolver.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d1/db9/PGSLCPSolver_8cpp</filename>
    <includes id="d6/d2b/PGSLCPSolver_8h" name="PGSLCPSolver.h" local="yes" imported="no">dart/constraint/PGSLCPSolver.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/da5/ConstraintBase_8h" name="ConstraintBase.h" local="yes" imported="no">dart/constraint/ConstraintBase.h</includes>
    <includes id="da/d1b/ConstrainedGroup_8h" name="ConstrainedGroup.h" local="yes" imported="no">dart/constraint/ConstrainedGroup.h</includes>
    <includes id="d7/dde/Lemke_8h" name="Lemke.h" local="yes" imported="no">dart/lcpsolver/Lemke.h</includes>
    <includes id="d8/df5/lcp_8h" name="lcp.h" local="yes" imported="no">dart/lcpsolver/lcp.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="define">
      <type>#define</type>
      <name>LCP_PGS_RANDOMLY_REORDER_CONSTRAINTS</name>
      <anchorfile>d1/db9/PGSLCPSolver_8cpp.html</anchorfile>
      <anchor>a7f8d7fb96da573afb60cada093143fb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCP_PGS_OPTION_DEFAULT_ITERMAX</name>
      <anchorfile>d1/db9/PGSLCPSolver_8cpp.html</anchorfile>
      <anchor>acb33719ae019e129af9d77479de5b1f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCP_PGS_OPTION_DEFAULT_SOR_W</name>
      <anchorfile>d1/db9/PGSLCPSolver_8cpp.html</anchorfile>
      <anchor>a90cde0f6bb4d579b2bf57d27b692e4d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCP_PGS_OPTION_DEFAULT_EPS_EA</name>
      <anchorfile>d1/db9/PGSLCPSolver_8cpp.html</anchorfile>
      <anchor>a55644215c3cd9ecd81e3846bc1f919a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCP_PGS_OPTION_DEFAULT_EPS_RESIDUAL</name>
      <anchorfile>d1/db9/PGSLCPSolver_8cpp.html</anchorfile>
      <anchor>a2ececabb62c8e647230b12d7a1f55223</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LCP_PGS_OPTION_DEFAULT_EPS_DIVIDE</name>
      <anchorfile>d1/db9/PGSLCPSolver_8cpp.html</anchorfile>
      <anchor>a3fcb206991a0a45b4b6f8b2aab8a37fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solvePGS</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a2488681e6db07eb614b77f7715eac2c1</anchor>
      <arglist>(int n, int nskip, int, double *A, double *x, double *b, double *lo, double *hi, int *findex, PGSOption *option)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PGSLCPSolver.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d6/d2b/PGSLCPSolver_8h</filename>
    <includes id="d6/d84/LCPSolver_8h" name="LCPSolver.h" local="yes" imported="no">dart/constraint/LCPSolver.h</includes>
    <class kind="class">dart::constraint::PGSLCPSolver</class>
    <class kind="struct">dart::constraint::PGSOption</class>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>SoftContactConstraint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>d2/d9e/SoftContactConstraint_8cpp</filename>
    <includes id="dd/d1a/SoftContactConstraint_8h" name="SoftContactConstraint.h" local="yes" imported="no">dart/constraint/SoftContactConstraint.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="db/d4c/PointMass_8h" name="PointMass.h" local="yes" imported="no">dart/dynamics/PointMass.h</includes>
    <includes id="d0/d9b/SoftBodyNode_8h" name="SoftBodyNode.h" local="yes" imported="no">dart/dynamics/SoftBodyNode.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="db/dd5/FCLMeshCollisionDetector_8h" name="FCLMeshCollisionDetector.h" local="yes" imported="no">dart/collision/fcl_mesh/FCLMeshCollisionDetector.h</includes>
    <includes id="d8/df5/lcp_8h" name="lcp.h" local="yes" imported="no">dart/lcpsolver/lcp.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERROR_ALLOWANCE</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>a0f1f4106a1f7a30bd2b04d8754bb9e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_ERP</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>ac12c507c1b5d92519e5929d66d57ca7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_MAX_ERV</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>a0d31a4befde2f2b4fc67c8b48a95ca6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_CFM</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>a1df203c33aed22bdff50496e142257d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_RESTITUTION_COEFF_THRESHOLD</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>a35d6849d333ec9b11821ef7e55207bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_FRICTION_COEFF_THRESHOLD</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>a2b0dcfb1536ff83c9edc47cedca73be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_BOUNCING_VELOCITY_THRESHOLD</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>aa9d7023df6b58e42d8db01389e573f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_MAX_BOUNCING_VELOCITY</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>ae53f26ba1a39411bfa968a3fbfeceb76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_CONTACT_CONSTRAINT_EPSILON</name>
      <anchorfile>d2/d9e/SoftContactConstraint_8cpp.html</anchorfile>
      <anchor>a30e2fcf76be9305b552146a7b93cf064</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PointMassT</type>
      <name>selectCollidingPointMassT</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a638541c0a4b2f8e00d73f873393ffa5f</anchor>
      <arglist>(SoftBodyNodeT _softBodyNode, const Eigen::Vector3d &amp;_point, int _faceId)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SoftContactConstraint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>dd/d1a/SoftContactConstraint_8h</filename>
    <includes id="db/da5/ConstraintBase_8h" name="ConstraintBase.h" local="yes" imported="no">dart/constraint/ConstraintBase.h</includes>
    <includes id="d5/d55/MathTypes_8h" name="MathTypes.h" local="yes" imported="no">dart/math/MathTypes.h</includes>
    <includes id="d4/d58/CollisionDetector_8h" name="CollisionDetector.h" local="yes" imported="no">dart/collision/CollisionDetector.h</includes>
    <class kind="class">dart::constraint::SoftContactConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::collision</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>WeldJointConstraint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>de/d2b/WeldJointConstraint_8cpp</filename>
    <includes id="dd/d9a/WeldJointConstraint_8h" name="WeldJointConstraint.h" local="yes" imported="no">dart/constraint/WeldJointConstraint.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="d8/df5/lcp_8h" name="lcp.h" local="yes" imported="no">dart/lcpsolver/lcp.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>WeldJointConstraint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>dd/d9a/WeldJointConstraint_8h</filename>
    <includes id="d5/d55/MathTypes_8h" name="MathTypes.h" local="yes" imported="no">dart/math/MathTypes.h</includes>
    <includes id="d5/dc2/JointConstraint_8h" name="JointConstraint.h" local="yes" imported="no">dart/constraint/JointConstraint.h</includes>
    <class kind="class">dart::constraint::WeldJointConstraint</class>
    <namespace>dart</namespace>
    <namespace>dart::constraint</namespace>
  </compound>
  <compound kind="file">
    <name>dart-core.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/</path>
    <filename>d7/dd5/dart-core_8h</filename>
  </compound>
  <compound kind="file">
    <name>dart.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/</path>
    <filename>d1/dd1/dart_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>dart.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/</path>
    <filename>db/df3/dart_8h</filename>
    <includes id="d7/dd5/dart-core_8h" name="dart-core.h" local="yes" imported="no">dart/dart-core.h</includes>
  </compound>
  <compound kind="file">
    <name>ArrowShape.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>df/dbf/ArrowShape_8cpp</filename>
    <includes id="d9/d86/ArrowShape_8h" name="ArrowShape.h" local="yes" imported="no">dart/dynamics/ArrowShape.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>constructArrowTip</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ace0e10253d7750c9df732e6def570171</anchor>
      <arglist>(aiMesh *mesh, double base, double tip, const ArrowShape::Properties &amp;properties)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>constructArrowBody</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a005aad3c4bb6a8dd38dbd2905fd2a7c4</anchor>
      <arglist>(aiMesh *mesh, double z1, double z2, const ArrowShape::Properties &amp;properties)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArrowShape.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d9/d86/ArrowShape_8h</filename>
    <includes id="d0/d7e/MeshShape_8h" name="MeshShape.h" local="yes" imported="no">dart/dynamics/MeshShape.h</includes>
    <class kind="class">dart::dynamics::ArrowShape</class>
    <class kind="struct">dart::dynamics::ArrowShape::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>AssimpInputResourceAdaptor.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d3/d4c/AssimpInputResourceAdaptor_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="de/dbe/AssimpInputResourceAdaptor_8h" name="AssimpInputResourceAdaptor.h" local="yes" imported="no">AssimpInputResourceAdaptor.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function">
      <type>aiFileIO</type>
      <name>createFileIO</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a3933ea3434b7470b1d7ebb0dc3d0681a</anchor>
      <arglist>(Assimp::IOSystem *_system)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AssimpInputResourceAdaptor.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>de/dbe/AssimpInputResourceAdaptor_8h</filename>
    <includes id="da/d1f/Resource_8h" name="Resource.h" local="yes" imported="no">dart/common/Resource.h</includes>
    <includes id="d3/d14/ResourceRetriever_8h" name="ResourceRetriever.h" local="yes" imported="no">dart/common/ResourceRetriever.h</includes>
    <class kind="class">dart::dynamics::AssimpInputResourceRetrieverAdaptor</class>
    <class kind="class">dart::dynamics::AssimpInputResourceAdaptor</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>BallJoint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>dc/dfc/BallJoint_8cpp</filename>
    <includes id="d3/ddc/BallJoint_8h" name="BallJoint.h" local="yes" imported="no">dart/dynamics/BallJoint.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>BallJoint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d3/ddc/BallJoint_8h</filename>
    <includes id="d4/d92/MultiDofJoint_8h" name="MultiDofJoint.h" local="yes" imported="no">dart/dynamics/MultiDofJoint.h</includes>
    <class kind="class">dart::dynamics::BallJoint</class>
    <class kind="struct">dart::dynamics::BallJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>BodyNode.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d0/db2/BodyNode_8cpp</filename>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">dart/renderer/RenderInterface.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="de/da4/Chain_8h" name="Chain.h" local="yes" imported="no">dart/dynamics/Chain.h</includes>
    <includes id="dc/dab/Marker_8h" name="Marker.h" local="yes" imported="no">dart/dynamics/Marker.h</includes>
    <includes id="d0/d9b/SoftBodyNode_8h" name="SoftBodyNode.h" local="yes" imported="no">dart/dynamics/SoftBodyNode.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SKEL_SET_FLAGS</name>
      <anchorfile>d0/db2/BodyNode_8cpp.html</anchorfile>
      <anchor>a12950e5e7271c907db724cb529b7adf2</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET_FLAGS</name>
      <anchorfile>d0/db2/BodyNode_8cpp.html</anchorfile>
      <anchor>af4cabc94cbe068e28b7d2000253b2b52</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_FLAG</name>
      <anchorfile>d0/db2/BodyNode_8cpp.html</anchorfile>
      <anchor>a3c9adcbaac5076e42568bbea6bf84974</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; Entity * &gt;</type>
      <name>EntityPtrSet</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac56a7745ab08dd1273216cac7df61326</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>getVectorObjectIfAvailable</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0a2112304a7478f4fab5881b08c0e5b5</anchor>
      <arglist>(size_t _index, const std::vector&lt; T &gt; &amp;_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkSkeletonNodeAgreement</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a017de4d6b353f1c1881e496dc1066f90</anchor>
      <arglist>(const BodyNode *_bodyNode, const ConstSkeletonPtr &amp;_newSkeleton, const BodyNode *_newParent, const std::string &amp;_function, const std::string &amp;_operation)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BodyNode.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d7/d87/BodyNode_8h</filename>
    <includes id="d0/def/Signal_8h" name="Signal.h" local="yes" imported="no">dart/common/Signal.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="db/d92/Node_8h" name="Node.h" local="yes" imported="no">dart/dynamics/Node.h</includes>
    <includes id="d7/db3/Frame_8h" name="Frame.h" local="yes" imported="no">dart/dynamics/Frame.h</includes>
    <includes id="db/d17/Inertia_8h" name="Inertia.h" local="yes" imported="no">dart/dynamics/Inertia.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="dc/dab/Marker_8h" name="Marker.h" local="yes" imported="no">dart/dynamics/Marker.h</includes>
    <includes id="dd/d4a/SmartPointer_8h" name="SmartPointer.h" local="yes" imported="no">dart/dynamics/SmartPointer.h</includes>
    <includes id="d3/dc0/TemplatedJacobianNode_8h" name="TemplatedJacobianNode.h" local="yes" imported="no">dart/dynamics/TemplatedJacobianNode.h</includes>
    <includes id="d9/da1/EndEffector_8h" name="EndEffector.h" local="yes" imported="no">dart/dynamics/EndEffector.h</includes>
    <includes id="db/da3/detail_2BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/detail/BodyNode.h</includes>
    <class kind="class">dart::dynamics::BodyNode</class>
    <class kind="struct">dart::dynamics::BodyNode::UniqueProperties</class>
    <class kind="struct">dart::dynamics::BodyNode::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::renderer</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_FRICTION_COEFF</name>
      <anchorfile>d7/d87/BodyNode_8h.html</anchorfile>
      <anchor>af899746df1c2b98df9b2f81d0258e372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_RESTITUTION_COEFF</name>
      <anchorfile>d7/d87/BodyNode_8h.html</anchorfile>
      <anchor>aa57ffb67e6de26fada015fa68abad17c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BodyNode.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/detail/</path>
    <filename>db/da3/detail_2BodyNode_8h</filename>
  </compound>
  <compound kind="file">
    <name>BoxShape.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d8/db4/BoxShape_8cpp</filename>
    <includes id="d9/d49/BoxShape_8h" name="BoxShape.h" local="yes" imported="no">dart/dynamics/BoxShape.h</includes>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">dart/renderer/RenderInterface.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>BoxShape.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d9/d49/BoxShape_8h</filename>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <class kind="class">dart::dynamics::BoxShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Branch.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d2/d4d/Branch_8cpp</filename>
    <includes id="d1/d9a/Branch_8h" name="Branch.h" local="yes" imported="no">dart/dynamics/Branch.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Branch.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d1/d9a/Branch_8h</filename>
    <includes id="d5/dc6/Linkage_8h" name="Linkage.h" local="yes" imported="no">dart/dynamics/Linkage.h</includes>
    <class kind="class">dart::dynamics::Branch</class>
    <class kind="struct">dart::dynamics::Branch::Criteria</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Chain.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>dc/d94/Chain_8cpp</filename>
    <includes id="de/da4/Chain_8h" name="Chain.h" local="yes" imported="no">dart/dynamics/Chain.h</includes>
    <includes id="db/da7/FreeJoint_8h" name="FreeJoint.h" local="yes" imported="no">dart/dynamics/FreeJoint.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Chain.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>de/da4/Chain_8h</filename>
    <includes id="d5/dc6/Linkage_8h" name="Linkage.h" local="yes" imported="no">dart/dynamics/Linkage.h</includes>
    <class kind="class">dart::dynamics::Chain</class>
    <class kind="struct">dart::dynamics::Chain::Criteria</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>CylinderShape.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d2/d9f/CylinderShape_8cpp</filename>
    <includes id="d2/d73/CylinderShape_8h" name="CylinderShape.h" local="yes" imported="no">dart/dynamics/CylinderShape.h</includes>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">dart/renderer/RenderInterface.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>CylinderShape.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d2/d73/CylinderShape_8h</filename>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <class kind="class">dart::dynamics::CylinderShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>DegreeOfFreedom.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d4/d56/DegreeOfFreedom_8cpp</filename>
    <includes id="d9/dc4/DegreeOfFreedom_8h" name="DegreeOfFreedom.h" local="yes" imported="no">DegreeOfFreedom.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">Joint.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">Skeleton.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>DegreeOfFreedom.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d9/dc4/DegreeOfFreedom_8h</filename>
    <includes id="db/de8/Subject_8h" name="Subject.h" local="yes" imported="no">dart/common/Subject.h</includes>
    <includes id="dd/d4a/SmartPointer_8h" name="SmartPointer.h" local="yes" imported="no">dart/dynamics/SmartPointer.h</includes>
    <class kind="class">dart::dynamics::MultiDofJoint</class>
    <class kind="class">dart::dynamics::DegreeOfFreedom</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>BodyNodePtr.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/detail/</path>
    <filename>d9/d0f/BodyNodePtr_8h</filename>
    <class kind="struct">dart::dynamics::MutexedWeakSkeletonPtr</class>
    <class kind="class">dart::dynamics::SkeletonRefCountingBase</class>
    <class kind="class">dart::dynamics::TemplateBodyNodePtr</class>
    <class kind="class">dart::dynamics::TemplateWeakBodyNodePtr</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>DegreeOfFreedomPtr.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/detail/</path>
    <filename>de/d2c/DegreeOfFreedomPtr_8h</filename>
    <includes id="d9/d0f/BodyNodePtr_8h" name="BodyNodePtr.h" local="yes" imported="no">dart/dynamics/detail/BodyNodePtr.h</includes>
    <includes id="d3/da4/InvalidIndex_8h" name="InvalidIndex.h" local="yes" imported="no">dart/dynamics/InvalidIndex.h</includes>
    <class kind="class">dart::dynamics::TemplateDegreeOfFreedomPtr</class>
    <class kind="class">dart::dynamics::TemplateWeakDegreeOfFreedomPtr</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>InverseKinematics.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/detail/</path>
    <filename>da/d83/detail_2InverseKinematics_8h</filename>
  </compound>
  <compound kind="file">
    <name>InverseKinematics.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d3/ded/InverseKinematics_8h</filename>
    <includes id="da/d07/sub__ptr_8h" name="sub_ptr.h" local="yes" imported="no">dart/common/sub_ptr.h</includes>
    <includes id="d0/def/Signal_8h" name="Signal.h" local="yes" imported="no">dart/common/Signal.h</includes>
    <includes id="db/de8/Subject_8h" name="Subject.h" local="yes" imported="no">dart/common/Subject.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="db/dc5/Solver_8h" name="Solver.h" local="yes" imported="no">dart/optimizer/Solver.h</includes>
    <includes id="d1/d4d/GradientDescentSolver_8h" name="GradientDescentSolver.h" local="yes" imported="no">dart/optimizer/GradientDescentSolver.h</includes>
    <includes id="d2/d40/Problem_8h" name="Problem.h" local="yes" imported="no">dart/optimizer/Problem.h</includes>
    <includes id="df/df5/Function_8h" name="Function.h" local="yes" imported="no">dart/optimizer/Function.h</includes>
    <includes id="dd/d4a/SmartPointer_8h" name="SmartPointer.h" local="yes" imported="no">dart/dynamics/SmartPointer.h</includes>
    <includes id="d6/dfd/JacobianNode_8h" name="JacobianNode.h" local="yes" imported="no">dart/dynamics/JacobianNode.h</includes>
    <includes id="da/d83/detail_2InverseKinematics_8h" name="InverseKinematics.h" local="yes" imported="no">dart/dynamics/detail/InverseKinematics.h</includes>
    <class kind="class">dart::dynamics::InverseKinematics</class>
    <class kind="class">dart::dynamics::InverseKinematics::Function</class>
    <class kind="class">dart::dynamics::InverseKinematics::ErrorMethod</class>
    <class kind="struct">dart::dynamics::InverseKinematics::ErrorMethod::Properties</class>
    <class kind="class">dart::dynamics::InverseKinematics::TaskSpaceRegion</class>
    <class kind="class">dart::dynamics::InverseKinematics::GradientMethod</class>
    <class kind="class">dart::dynamics::InverseKinematics::JacobianDLS</class>
    <class kind="class">dart::dynamics::InverseKinematics::JacobianTranspose</class>
    <class kind="class">dart::dynamics::InverseKinematics::Objective</class>
    <class kind="class">dart::dynamics::InverseKinematics::Constraint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKTolerance</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5e784e02b14816f6c3357797d342e321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKErrorClamp</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>afa5d93e10f876e3f4c019333c084772b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKGradientComponentClamp</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a06dc2b3d9522262637840806902b23e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKGradientComponentWeight</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>abbca53d13a176c5a3272364fc8e58e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKDLSCoefficient</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab121f3e4478bbcaadebce57698c1d8cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKAngularWeight</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a69e6c0a07f5cc5a0b94a7d8a48fa24f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKLinearWeight</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a705e6ff8260f78604f09fcefe7a164f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InverseKinematicsPtr.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/detail/</path>
    <filename>dc/d11/InverseKinematicsPtr_8h</filename>
    <includes id="dc/d21/NodePtr_8h" name="NodePtr.h" local="yes" imported="no">dart/dynamics/detail/NodePtr.h</includes>
    <class kind="class">dart::dynamics::TemplateInverseKinematicsPtr</class>
    <class kind="class">dart::dynamics::TemplateWeakInverseKinematicsPtr</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a374a7787cd9e06ac1bd8b90c56496959</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a90308c07aec0b5955d232f5bac673636</anchor>
      <arglist>(std::nullptr_t, const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa792f620923afd884f9e00973a30f960</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab908c35377add3ba671437a53a1c782a</anchor>
      <arglist>(std::nullptr_t, const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JointPtr.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/detail/</path>
    <filename>da/d4f/JointPtr_8h</filename>
    <includes id="d9/d0f/BodyNodePtr_8h" name="BodyNodePtr.h" local="yes" imported="no">dart/dynamics/detail/BodyNodePtr.h</includes>
    <class kind="class">dart::dynamics::TemplateJointPtr</class>
    <class kind="class">dart::dynamics::TemplateWeakJointPtr</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>MultiDofJoint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/detail/</path>
    <filename>db/dc9/detail_2MultiDofJoint_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MULTIDOFJOINT_REPORT_DIM_MISMATCH</name>
      <anchorfile>db/dc9/detail_2MultiDofJoint_8h.html</anchorfile>
      <anchor>a4270e747e44e84bbf6208ccb4879c6c2</anchor>
      <arglist>(func, arg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULTIDOFJOINT_REPORT_OUT_OF_RANGE</name>
      <anchorfile>db/dc9/detail_2MultiDofJoint_8h.html</anchorfile>
      <anchor>acd80d89c2baafe16258da7a274f89bec</anchor>
      <arglist>(func, index)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULTIDOFJOINT_REPORT_UNSUPPORTED_ACTUATOR</name>
      <anchorfile>db/dc9/detail_2MultiDofJoint_8h.html</anchorfile>
      <anchor>a668d9e2c67d5886e6dcc1b74f0d66b3e</anchor>
      <arglist>(func)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MultiDofJoint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d4/d92/MultiDofJoint_8h</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="d9/dc4/DegreeOfFreedom_8h" name="DegreeOfFreedom.h" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.h</includes>
    <includes id="db/dc9/detail_2MultiDofJoint_8h" name="MultiDofJoint.h" local="yes" imported="no">dart/dynamics/detail/MultiDofJoint.h</includes>
    <class kind="class">dart::dynamics::MultiDofJoint</class>
    <class kind="struct">dart::dynamics::MultiDofJoint::UniqueProperties</class>
    <class kind="struct">dart::dynamics::MultiDofJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>NodePtr.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/detail/</path>
    <filename>dc/d21/NodePtr_8h</filename>
    <includes id="d9/d0f/BodyNodePtr_8h" name="BodyNodePtr.h" local="yes" imported="no">dart/dynamics/detail/BodyNodePtr.h</includes>
    <class kind="class">dart::dynamics::TemplateNodePtr</class>
    <class kind="class">dart::dynamics::TemplateWeakNodePtr</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Skeleton.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/detail/</path>
    <filename>d5/d35/detail_2Skeleton_8h</filename>
  </compound>
  <compound kind="file">
    <name>Skeleton.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d1/ded/Skeleton_8h</filename>
    <includes id="db/d33/NameManager_8h" name="NameManager.h" local="yes" imported="no">dart/common/NameManager.h</includes>
    <includes id="d1/d5f/MetaSkeleton_8h" name="MetaSkeleton.h" local="yes" imported="no">dart/dynamics/MetaSkeleton.h</includes>
    <includes id="dd/d4a/SmartPointer_8h" name="SmartPointer.h" local="yes" imported="no">dart/dynamics/SmartPointer.h</includes>
    <includes id="d2/dc9/HierarchicalIK_8h" name="HierarchicalIK.h" local="yes" imported="no">dart/dynamics/HierarchicalIK.h</includes>
    <includes id="d5/d35/detail_2Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/detail/Skeleton.h</includes>
    <class kind="class">dart::dynamics::Skeleton</class>
    <class kind="struct">dart::dynamics::Skeleton::Properties</class>
    <class kind="struct">dart::dynamics::Skeleton::DirtyFlags</class>
    <class kind="struct">dart::dynamics::Skeleton::DataCache</class>
    <namespace>dart</namespace>
    <namespace>dart::renderer</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>TemplatedJacobianNode.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/detail/</path>
    <filename>db/d94/detail_2TemplatedJacobianNode_8h</filename>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>TemplatedJacobianNode.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d3/dc0/TemplatedJacobianNode_8h</filename>
    <includes id="d6/dfd/JacobianNode_8h" name="JacobianNode.h" local="yes" imported="no">dart/dynamics/JacobianNode.h</includes>
    <includes id="db/d94/detail_2TemplatedJacobianNode_8h" name="TemplatedJacobianNode.h" local="yes" imported="no">dart/dynamics/detail/TemplatedJacobianNode.h</includes>
    <class kind="class">dart::dynamics::TemplatedJacobianNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>EllipsoidShape.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d0/d4f/EllipsoidShape_8cpp</filename>
    <includes id="de/d25/EllipsoidShape_8h" name="EllipsoidShape.h" local="yes" imported="no">dart/dynamics/EllipsoidShape.h</includes>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">dart/renderer/RenderInterface.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>EllipsoidShape.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>de/d25/EllipsoidShape_8h</filename>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <class kind="class">dart::dynamics::EllipsoidShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>EndEffector.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d1/d4b/EndEffector_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d9/da1/EndEffector_8h" name="EndEffector.h" local="yes" imported="no">dart/dynamics/EndEffector.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>EndEffector.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d9/da1/EndEffector_8h</filename>
    <includes id="d1/d67/FixedFrame_8h" name="FixedFrame.h" local="yes" imported="no">dart/dynamics/FixedFrame.h</includes>
    <includes id="d3/dc0/TemplatedJacobianNode_8h" name="TemplatedJacobianNode.h" local="yes" imported="no">dart/dynamics/TemplatedJacobianNode.h</includes>
    <class kind="class">dart::dynamics::Support</class>
    <class kind="class">dart::dynamics::EndEffector</class>
    <class kind="struct">dart::dynamics::EndEffector::UniqueProperties</class>
    <class kind="struct">dart::dynamics::EndEffector::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Entity.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>df/de9/Entity_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d4/da0/Entity_8h" name="Entity.h" local="yes" imported="no">dart/dynamics/Entity.h</includes>
    <includes id="d7/db3/Frame_8h" name="Frame.h" local="yes" imported="no">dart/dynamics/Frame.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">dart/renderer/RenderInterface.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>getVectorObjectIfAvailable</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0a2112304a7478f4fab5881b08c0e5b5</anchor>
      <arglist>(size_t _index, const std::vector&lt; T &gt; &amp;_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::shared_ptr&lt; const T &gt; &gt; &amp;</type>
      <name>convertToConstSharedPtrVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a859f7b26735ca937d51e210c8c967782</anchor>
      <arglist>(const std::vector&lt; std::shared_ptr&lt; T &gt;&gt; &amp;vec, std::vector&lt; std::shared_ptr&lt; const T &gt;&gt; &amp;const_vec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Entity.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d4/da0/Entity_8h</filename>
    <includes id="db/de8/Subject_8h" name="Subject.h" local="yes" imported="no">dart/common/Subject.h</includes>
    <includes id="d0/def/Signal_8h" name="Signal.h" local="yes" imported="no">dart/common/Signal.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="dd/d4a/SmartPointer_8h" name="SmartPointer.h" local="yes" imported="no">dart/dynamics/SmartPointer.h</includes>
    <class kind="class">dart::dynamics::Entity</class>
    <class kind="struct">dart::dynamics::Entity::Properties</class>
    <class kind="class">dart::dynamics::Detachable</class>
    <namespace>dart</namespace>
    <namespace>dart::renderer</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>EulerJoint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d6/d32/EulerJoint_8cpp</filename>
    <includes id="d0/d40/EulerJoint_8h" name="EulerJoint.h" local="yes" imported="no">dart/dynamics/EulerJoint.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="d9/dc4/DegreeOfFreedom_8h" name="DegreeOfFreedom.h" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>EulerJoint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d0/d40/EulerJoint_8h</filename>
    <includes id="d4/d92/MultiDofJoint_8h" name="MultiDofJoint.h" local="yes" imported="no">dart/dynamics/MultiDofJoint.h</includes>
    <class kind="class">dart::dynamics::EulerJoint</class>
    <class kind="struct">dart::dynamics::EulerJoint::UniqueProperties</class>
    <class kind="struct">dart::dynamics::EulerJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>FixedFrame.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>df/dec/FixedFrame_8cpp</filename>
    <includes id="d1/d67/FixedFrame_8h" name="FixedFrame.h" local="yes" imported="no">FixedFrame.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>FixedFrame.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d1/d67/FixedFrame_8h</filename>
    <includes id="d7/db3/Frame_8h" name="Frame.h" local="yes" imported="no">Frame.h</includes>
    <class kind="class">dart::dynamics::FixedFrame</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Frame.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d5/de0/Frame_8cpp</filename>
    <includes id="d7/db3/Frame_8h" name="Frame.h" local="yes" imported="no">dart/dynamics/Frame.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">dart/renderer/RenderInterface.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="typedef">
      <type>std::set&lt; Frame * &gt;</type>
      <name>FramePtrSet</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a932d96e287e22d44ace7fe96aa2e4069</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::set&lt; const T * &gt;</type>
      <name>convertToConstSet</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8157d817e7cab6ecb1199a81666a2b58</anchor>
      <arglist>(const std::set&lt; T * &gt; &amp;_set)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Frame.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d7/db3/Frame_8h</filename>
    <includes id="d4/da0/Entity_8h" name="Entity.h" local="yes" imported="no">dart/dynamics/Entity.h</includes>
    <includes id="d5/d55/MathTypes_8h" name="MathTypes.h" local="yes" imported="no">dart/math/MathTypes.h</includes>
    <class kind="class">dart::dynamics::Frame</class>
    <class kind="class">dart::dynamics::WorldFrame</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>FreeJoint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>dd/d98/FreeJoint_8cpp</filename>
    <includes id="db/da7/FreeJoint_8h" name="FreeJoint.h" local="yes" imported="no">dart/dynamics/FreeJoint.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>FreeJoint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>db/da7/FreeJoint_8h</filename>
    <includes id="d4/d92/MultiDofJoint_8h" name="MultiDofJoint.h" local="yes" imported="no">dart/dynamics/MultiDofJoint.h</includes>
    <class kind="class">dart::dynamics::FreeJoint</class>
    <class kind="struct">dart::dynamics::FreeJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Group.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>de/d74/Group_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="de/d3d/Group_8h" name="Group.h" local="yes" imported="no">dart/dynamics/Group.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <includes id="d9/dc4/DegreeOfFreedom_8h" name="DegreeOfFreedom.h" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Group.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>de/d3d/Group_8h</filename>
    <includes id="d5/dcf/ReferentialSkeleton_8h" name="ReferentialSkeleton.h" local="yes" imported="no">dart/dynamics/ReferentialSkeleton.h</includes>
    <class kind="class">dart::dynamics::Group</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchicalIK.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d4/dfa/HierarchicalIK_8cpp</filename>
    <includes id="d9/dc4/DegreeOfFreedom_8h" name="DegreeOfFreedom.h" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.h</includes>
    <includes id="d2/dc9/HierarchicalIK_8h" name="HierarchicalIK.h" local="yes" imported="no">dart/dynamics/HierarchicalIK.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d9/da1/EndEffector_8h" name="EndEffector.h" local="yes" imported="no">dart/dynamics/EndEffector.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; optimizer::Function &gt;</type>
      <name>cloneIkFunc</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a18ebc4a3d3b183651b06c870144b2150</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_function, const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_ik)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HierarchicalIK.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d2/dc9/HierarchicalIK_8h</filename>
    <includes id="d3/ded/InverseKinematics_8h" name="InverseKinematics.h" local="yes" imported="no">dart/dynamics/InverseKinematics.h</includes>
    <class kind="class">dart::dynamics::HierarchicalIK</class>
    <class kind="class">dart::dynamics::HierarchicalIK::Function</class>
    <class kind="class">dart::dynamics::HierarchicalIK::Objective</class>
    <class kind="class">dart::dynamics::HierarchicalIK::Constraint</class>
    <class kind="class">dart::dynamics::CompositeIK</class>
    <class kind="class">dart::dynamics::WholeBodyIK</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="typedef">
      <type>std::vector&lt; std::vector&lt; std::shared_ptr&lt; InverseKinematics &gt; &gt; &gt;</type>
      <name>IKHierarchy</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a20a6cf4d8a08635e9bd0f74f415e8223</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Inertia.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>da/dbf/Inertia_8cpp</filename>
    <includes id="db/d17/Inertia_8h" name="Inertia.h" local="yes" imported="no">dart/dynamics/Inertia.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Inertia.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>db/d17/Inertia_8h</filename>
    <includes id="d5/d55/MathTypes_8h" name="MathTypes.h" local="yes" imported="no">dart/math/MathTypes.h</includes>
    <class kind="class">dart::dynamics::Inertia</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>InvalidIndex.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d3/da4/InvalidIndex_8h</filename>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="variable">
      <type>constexpr size_t</type>
      <name>INVALID_INDEX</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>afa9fde78f61dbc391c18c992d49c24be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InverseKinematics.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d7/d44/InverseKinematics_8cpp</filename>
    <includes id="d3/ded/InverseKinematics_8h" name="InverseKinematics.h" local="yes" imported="no">dart/dynamics/InverseKinematics.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d9/dc4/DegreeOfFreedom_8h" name="DegreeOfFreedom.h" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.h</includes>
    <includes id="d4/d97/SimpleFrame_8h" name="SimpleFrame.h" local="yes" imported="no">dart/dynamics/SimpleFrame.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>convertJacobianMethodOutputToGradient</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab2f709ecfe539120215266f1af5e251b</anchor>
      <arglist>(Eigen::VectorXd &amp;grad, const std::vector&lt; size_t &gt; &amp;dofs, InverseKinematics *mIK)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; optimizer::Function &gt;</type>
      <name>cloneIkFunc</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6db9fbab0ef1b3c1ebfb7942692d47a6</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_function, InverseKinematics *_ik)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JacobianNode.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d8/dbf/JacobianNode_8cpp</filename>
    <includes id="d6/dfd/JacobianNode_8h" name="JacobianNode.h" local="yes" imported="no">dart/dynamics/JacobianNode.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d3/ded/InverseKinematics_8h" name="InverseKinematics.h" local="yes" imported="no">dart/dynamics/InverseKinematics.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>JacobianNode.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d6/dfd/JacobianNode_8h</filename>
    <includes id="d7/db3/Frame_8h" name="Frame.h" local="yes" imported="no">dart/dynamics/Frame.h</includes>
    <includes id="db/d92/Node_8h" name="Node.h" local="yes" imported="no">dart/dynamics/Node.h</includes>
    <includes id="dd/d4a/SmartPointer_8h" name="SmartPointer.h" local="yes" imported="no">dart/dynamics/SmartPointer.h</includes>
    <class kind="class">dart::dynamics::JacobianNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Joint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d6/de6/Joint_8cpp</filename>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">dart/renderer/RenderInterface.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d9/dc4/DegreeOfFreedom_8h" name="DegreeOfFreedom.h" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Joint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>de/d50/Joint_8h</filename>
    <includes id="d9/db7/Deprecated_8h" name="Deprecated.h" local="yes" imported="no">dart/common/Deprecated.h</includes>
    <includes id="db/de8/Subject_8h" name="Subject.h" local="yes" imported="no">dart/common/Subject.h</includes>
    <includes id="d5/d55/MathTypes_8h" name="MathTypes.h" local="yes" imported="no">dart/math/MathTypes.h</includes>
    <includes id="dd/d4a/SmartPointer_8h" name="SmartPointer.h" local="yes" imported="no">dart/dynamics/SmartPointer.h</includes>
    <class kind="class">dart::dynamics::Joint</class>
    <class kind="struct">dart::dynamics::Joint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::renderer</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>LineSegmentShape.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d9/d14/LineSegmentShape_8cpp</filename>
    <includes id="da/d07/LineSegmentShape_8h" name="LineSegmentShape.h" local="yes" imported="no">dart/dynamics/LineSegmentShape.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">dart/renderer/RenderInterface.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>LineSegmentShape.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>da/d07/LineSegmentShape_8h</filename>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <class kind="class">dart::dynamics::LineSegmentShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Linkage.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d3/d21/Linkage_8cpp</filename>
    <includes id="d5/dc6/Linkage_8h" name="Linkage.h" local="yes" imported="no">dart/dynamics/Linkage.h</includes>
    <includes id="db/da7/FreeJoint_8h" name="FreeJoint.h" local="yes" imported="no">dart/dynamics/FreeJoint.h</includes>
    <class kind="struct">dart::dynamics::Recording</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function">
      <type>void</type>
      <name>stepToNextChild</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>acce1eec9363f7ec1c90586f0480f1caa</anchor>
      <arglist>(std::vector&lt; Recording &gt; &amp;_recorder, std::vector&lt; BodyNode * &gt; &amp;_bns, Recording &amp;_r, const std::unordered_map&lt; BodyNode *, bool &gt; &amp;_terminalMap, int _initValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stepToParent</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab59f5213bd9516b054afbb3407807fcc</anchor>
      <arglist>(std::vector&lt; Recording &gt; &amp;_recorder, std::vector&lt; BodyNode * &gt; &amp;_bns, Recording &amp;_r, const std::unordered_map&lt; BodyNode *, bool &gt; &amp;_terminalMap)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Linkage.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d5/dc6/Linkage_8h</filename>
    <includes id="d5/dcf/ReferentialSkeleton_8h" name="ReferentialSkeleton.h" local="yes" imported="no">ReferentialSkeleton.h</includes>
    <class kind="class">dart::dynamics::Linkage</class>
    <class kind="struct">dart::dynamics::Linkage::Criteria</class>
    <class kind="struct">dart::dynamics::Linkage::Criteria::Target</class>
    <class kind="struct">dart::dynamics::Linkage::Criteria::Terminal</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Marker.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d1/d5e/Marker_8cpp</filename>
    <includes id="dc/dab/Marker_8h" name="Marker.h" local="yes" imported="no">dart/dynamics/Marker.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">dart/renderer/RenderInterface.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Marker.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>dc/dab/Marker_8h</filename>
    <class kind="class">dart::dynamics::Marker</class>
    <class kind="struct">dart::dynamics::Marker::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::renderer</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>MeshShape.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d4/d6a/MeshShape_8cpp</filename>
    <includes id="d0/d7e/MeshShape_8h" name="MeshShape.h" local="yes" imported="no">dart/dynamics/MeshShape.h</includes>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">dart/renderer/RenderInterface.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="de/dbe/AssimpInputResourceAdaptor_8h" name="AssimpInputResourceAdaptor.h" local="yes" imported="no">dart/dynamics/AssimpInputResourceAdaptor.h</includes>
    <includes id="d5/d13/LocalResourceRetriever_8h" name="LocalResourceRetriever.h" local="yes" imported="no">dart/common/LocalResourceRetriever.h</includes>
    <includes id="da/d26/Uri_8h" name="Uri.h" local="yes" imported="no">dart/common/Uri.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>MeshShape.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d0/d7e/MeshShape_8h</filename>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="d3/d14/ResourceRetriever_8h" name="ResourceRetriever.h" local="yes" imported="no">dart/common/ResourceRetriever.h</includes>
    <class kind="class">dart::dynamics::MeshShape</class>
    <namespace>Assimp</namespace>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>MetaSkeleton.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d1/de4/MetaSkeleton_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d1/d5f/MetaSkeleton_8h" name="MetaSkeleton.h" local="yes" imported="no">dart/dynamics/MetaSkeleton.h</includes>
    <includes id="d9/dc4/DegreeOfFreedom_8h" name="DegreeOfFreedom.h" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkIndexArrayValidity</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>afdb12b7745ad3009e95ad7263a0ea84b</anchor>
      <arglist>(const MetaSkeleton *skel, const std::vector&lt; size_t &gt; &amp;_indices, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkIndexArrayAgreement</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a12211b1dd8236d580e530fa43a1616b6</anchor>
      <arglist>(const MetaSkeleton *skel, const std::vector&lt; size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_values, const std::string &amp;_fname, const std::string &amp;_vname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setValuesFromVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a17c99ede432d2ad8fac279bc3d2ab2b2</anchor>
      <arglist>(MetaSkeleton *skel, const std::vector&lt; size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_values, const std::string &amp;_fname, const std::string &amp;_vname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setAllValuesFromVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a61cbc6ea951344563de318c5d171c779</anchor>
      <arglist>(MetaSkeleton *skel, const Eigen::VectorXd &amp;_values, const std::string &amp;_fname, const std::string &amp;_vname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::VectorXd</type>
      <name>getValuesFromVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a022b50b8c62e0143fb0e3510de3985f6</anchor>
      <arglist>(const MetaSkeleton *skel, const std::vector&lt; size_t &gt; &amp;_indices, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::VectorXd</type>
      <name>getValuesFromAllDofs</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aeec6fec6649364d7d6b4c7133d7e3023</anchor>
      <arglist>(const MetaSkeleton *skel, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>applyToAllDofs</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6d722984d4bd1f183d0d7dce473a1fb5</anchor>
      <arglist>(MetaSkeleton *skel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setValueFromIndex</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a1d88aa31085ec93f4a87b5950d5fdbb5</anchor>
      <arglist>(MetaSkeleton *skel, size_t _index, double _value, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getValueFromIndex</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab773f9daf740b68d97e2cc9207d0ae4e</anchor>
      <arglist>(const MetaSkeleton *skel, size_t _index, const std::string &amp;_fname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MetaSkeleton.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d1/d5f/MetaSkeleton_8h</filename>
    <includes id="d0/def/Signal_8h" name="Signal.h" local="yes" imported="no">dart/common/Signal.h</includes>
    <includes id="db/de8/Subject_8h" name="Subject.h" local="yes" imported="no">dart/common/Subject.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="d7/db3/Frame_8h" name="Frame.h" local="yes" imported="no">dart/dynamics/Frame.h</includes>
    <includes id="d3/da4/InvalidIndex_8h" name="InvalidIndex.h" local="yes" imported="no">dart/dynamics/InvalidIndex.h</includes>
    <class kind="class">dart::dynamics::MetaSkeleton</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Node.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>dc/d73/Node_8cpp</filename>
    <includes id="db/d92/Node_8h" name="Node.h" local="yes" imported="no">dart/dynamics/Node.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>REPORT_INVALID_NODE</name>
      <anchorfile>dc/d73/Node_8cpp.html</anchorfile>
      <anchor>aa27ba2849f2c09b4895d72da2c8f75f1</anchor>
      <arglist>(func)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Node.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>db/d92/Node_8h</filename>
    <includes id="db/de8/Subject_8h" name="Subject.h" local="yes" imported="no">dart/common/Subject.h</includes>
    <includes id="dd/d4a/SmartPointer_8h" name="SmartPointer.h" local="yes" imported="no">dart/dynamics/SmartPointer.h</includes>
    <class kind="class">dart::dynamics::NodeDestructor</class>
    <class kind="class">dart::dynamics::Node</class>
    <class kind="class">dart::dynamics::AccessoryNode</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PlanarJoint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d5/d9e/PlanarJoint_8cpp</filename>
    <includes id="de/d0a/PlanarJoint_8h" name="PlanarJoint.h" local="yes" imported="no">dart/dynamics/PlanarJoint.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d9/dc4/DegreeOfFreedom_8h" name="DegreeOfFreedom.h" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PlanarJoint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>de/d0a/PlanarJoint_8h</filename>
    <includes id="d4/d92/MultiDofJoint_8h" name="MultiDofJoint.h" local="yes" imported="no">dart/dynamics/MultiDofJoint.h</includes>
    <class kind="class">dart::dynamics::PlanarJoint</class>
    <class kind="struct">dart::dynamics::PlanarJoint::UniqueProperties</class>
    <class kind="struct">dart::dynamics::PlanarJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PlaneShape.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d6/d48/PlaneShape_8cpp</filename>
    <includes id="de/d65/PlaneShape_8h" name="PlaneShape.h" local="yes" imported="no">dart/dynamics/PlaneShape.h</includes>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">dart/renderer/RenderInterface.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PlaneShape.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>de/d65/PlaneShape_8h</filename>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <class kind="class">dart::dynamics::PlaneShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PointMass.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>de/d03/PointMass_8cpp</filename>
    <includes id="db/d4c/PointMass_8h" name="PointMass.h" local="yes" imported="no">dart/dynamics/PointMass.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="de/d25/EllipsoidShape_8h" name="EllipsoidShape.h" local="yes" imported="no">dart/dynamics/EllipsoidShape.h</includes>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">dart/renderer/RenderInterface.h</includes>
    <includes id="d0/d9b/SoftBodyNode_8h" name="SoftBodyNode.h" local="yes" imported="no">dart/dynamics/SoftBodyNode.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PointMass.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>db/d4c/PointMass_8h</filename>
    <includes id="d4/da0/Entity_8h" name="Entity.h" local="yes" imported="no">dart/dynamics/Entity.h</includes>
    <class kind="class">dart::dynamics::PointMass</class>
    <class kind="struct">dart::dynamics::PointMass::Properties</class>
    <class kind="class">dart::dynamics::PointMassNotifier</class>
    <namespace>dart</namespace>
    <namespace>dart::renderer</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PrismaticJoint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>dd/d1b/PrismaticJoint_8cpp</filename>
    <includes id="d3/d7a/PrismaticJoint_8h" name="PrismaticJoint.h" local="yes" imported="no">dart/dynamics/PrismaticJoint.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>PrismaticJoint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d3/d7a/PrismaticJoint_8h</filename>
    <includes id="db/df8/SingleDofJoint_8h" name="SingleDofJoint.h" local="yes" imported="no">dart/dynamics/SingleDofJoint.h</includes>
    <class kind="class">dart::dynamics::PrismaticJoint</class>
    <class kind="struct">dart::dynamics::PrismaticJoint::UniqueProperties</class>
    <class kind="struct">dart::dynamics::PrismaticJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ReferentialSkeleton.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>db/d2f/ReferentialSkeleton_8cpp</filename>
    <includes id="d5/dcf/ReferentialSkeleton_8h" name="ReferentialSkeleton.h" local="yes" imported="no">dart/dynamics/ReferentialSkeleton.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <includes id="d9/dc4/DegreeOfFreedom_8h" name="DegreeOfFreedom.h" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>getVectorObjectIfAvailable</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac7b96401855672e112351544ed8bfc32</anchor>
      <arglist>(size_t _idx, const std::vector&lt; T &gt; &amp;_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; T2 &gt; &amp;</type>
      <name>convertVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a44efb6e764576cd42a718f6c8efe23c7</anchor>
      <arglist>(const std::vector&lt; T1 &gt; &amp;t1_vec, std::vector&lt; T2 &gt; &amp;t2_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isValidBodyNode</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>acdc21b49ade69175e14e82a9d8c37634</anchor>
      <arglist>(const ReferentialSkeleton *, const JacobianNode *_node, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a11d89a5d479b439acd934b0c09f58f95</anchor>
      <arglist>(JacobianType &amp;_J, const ReferentialSkeleton *_refSkel, const JacobianNode *_node, const JacobianType &amp;_JBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aeafbd1f0646cf8b8653313ffad705725</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetWorldJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6bc0da146d655196db0cce75525acadb</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ae51822c055651adf97a8dbbc51267d0f</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a2d6232c4b019551651cb66cad69192cb</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianSpatialDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a569dd6c528bd7b77541790e117e67a9f</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianClassicDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa1c701e2d1bf2a17376c59b040d8a911</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>accf08966c21ed703d6a978f2c58405c4</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5fcd78c264e693295537438a26ffc6f1</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>setMatrixFromSkeletonData</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a27632bed7583432d63949f1de70a1817</anchor>
      <arglist>(Eigen::MatrixXd &amp;M, const std::vector&lt; const DegreeOfFreedom * &gt; &amp;dofs)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>setVectorFromSkeletonData</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aea4199124d21f60d4f6c1a0c3dfa409f</anchor>
      <arglist>(Eigen::VectorXd &amp;V, const std::vector&lt; const DegreeOfFreedom * &gt; &amp;dofs)</arglist>
    </member>
    <member kind="function">
      <type>PropertyType</type>
      <name>getCOMPropertyTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0dafd76a5568876a927cfa778d8ea729</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const Frame *_relativeTo, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>JacType</type>
      <name>getCOMJacobianTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a78f04f14872e7db37d45f20a0a471361</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const Frame *_inCoordinatesOf)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ReferentialSkeleton.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d5/dcf/ReferentialSkeleton_8h</filename>
    <includes id="d1/d5f/MetaSkeleton_8h" name="MetaSkeleton.h" local="yes" imported="no">dart/dynamics/MetaSkeleton.h</includes>
    <includes id="dd/d4a/SmartPointer_8h" name="SmartPointer.h" local="yes" imported="no">dart/dynamics/SmartPointer.h</includes>
    <class kind="class">dart::dynamics::ReferentialSkeleton</class>
    <class kind="struct">dart::dynamics::ReferentialSkeleton::IndexMap</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>RevoluteJoint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>db/da2/RevoluteJoint_8cpp</filename>
    <includes id="d1/d44/RevoluteJoint_8h" name="RevoluteJoint.h" local="yes" imported="no">dart/dynamics/RevoluteJoint.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>RevoluteJoint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d1/d44/RevoluteJoint_8h</filename>
    <includes id="db/df8/SingleDofJoint_8h" name="SingleDofJoint.h" local="yes" imported="no">dart/dynamics/SingleDofJoint.h</includes>
    <class kind="class">dart::dynamics::RevoluteJoint</class>
    <class kind="struct">dart::dynamics::RevoluteJoint::UniqueProperties</class>
    <class kind="struct">dart::dynamics::RevoluteJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ScrewJoint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d0/de5/ScrewJoint_8cpp</filename>
    <includes id="d6/db8/ScrewJoint_8h" name="ScrewJoint.h" local="yes" imported="no">dart/dynamics/ScrewJoint.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ScrewJoint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d6/db8/ScrewJoint_8h</filename>
    <includes id="db/df8/SingleDofJoint_8h" name="SingleDofJoint.h" local="yes" imported="no">dart/dynamics/SingleDofJoint.h</includes>
    <class kind="class">dart::dynamics::ScrewJoint</class>
    <class kind="struct">dart::dynamics::ScrewJoint::UniqueProperties</class>
    <class kind="struct">dart::dynamics::ScrewJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Shape.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d6/dbd/Shape_8cpp</filename>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PRIMITIVE_MAGIC_NUMBER</name>
      <anchorfile>d6/dbd/Shape_8cpp.html</anchorfile>
      <anchor>acbc824e22045a51d87e7d4678e0f7eb1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Shape.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>de/d8f/Shape_8h</filename>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="db/de8/Subject_8h" name="Subject.h" local="yes" imported="no">dart/common/Subject.h</includes>
    <includes id="dd/d4a/SmartPointer_8h" name="SmartPointer.h" local="yes" imported="no">dart/dynamics/SmartPointer.h</includes>
    <class kind="class">dart::dynamics::Shape</class>
    <namespace>dart</namespace>
    <namespace>dart::renderer</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>SimpleFrame.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d4/d78/SimpleFrame_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="d4/d97/SimpleFrame_8h" name="SimpleFrame.h" local="yes" imported="no">dart/dynamics/SimpleFrame.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>SimpleFrame.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d4/d97/SimpleFrame_8h</filename>
    <includes id="d7/db3/Frame_8h" name="Frame.h" local="yes" imported="no">dart/dynamics/Frame.h</includes>
    <class kind="class">dart::dynamics::SimpleFrame</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>SingleDofJoint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>db/d32/SingleDofJoint_8cpp</filename>
    <includes id="db/df8/SingleDofJoint_8h" name="SingleDofJoint.h" local="yes" imported="no">dart/dynamics/SingleDofJoint.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="d9/dc4/DegreeOfFreedom_8h" name="DegreeOfFreedom.h" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SINGLEDOFJOINT_REPORT_DIM_MISMATCH</name>
      <anchorfile>db/d32/SingleDofJoint_8cpp.html</anchorfile>
      <anchor>ad60ef04d64f6a88229110dfd8957059e</anchor>
      <arglist>(func, arg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SINGLEDOFJOINT_REPORT_OUT_OF_RANGE</name>
      <anchorfile>db/d32/SingleDofJoint_8cpp.html</anchorfile>
      <anchor>ac4860b9dd6a0f8d453225824f70827b3</anchor>
      <arglist>(func, index)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SINGLEDOFJOINT_REPORT_UNSUPPORTED_ACTUATOR</name>
      <anchorfile>db/d32/SingleDofJoint_8cpp.html</anchorfile>
      <anchor>a69dae8e434dfcdbc239fe81ab3287646</anchor>
      <arglist>(func)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SingleDofJoint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>db/df8/SingleDofJoint_8h</filename>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <class kind="class">dart::dynamics::SingleDofJoint</class>
    <class kind="struct">dart::dynamics::SingleDofJoint::UniqueProperties</class>
    <class kind="struct">dart::dynamics::SingleDofJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>Skeleton.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d2/d7c/Skeleton_8cpp</filename>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d9/dc4/DegreeOfFreedom_8h" name="DegreeOfFreedom.h" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <includes id="d9/da1/EndEffector_8h" name="EndEffector.h" local="yes" imported="no">dart/dynamics/EndEffector.h</includes>
    <includes id="d3/ded/InverseKinematics_8h" name="InverseKinematics.h" local="yes" imported="no">dart/dynamics/InverseKinematics.h</includes>
    <includes id="dc/dab/Marker_8h" name="Marker.h" local="yes" imported="no">dart/dynamics/Marker.h</includes>
    <includes id="db/d4c/PointMass_8h" name="PointMass.h" local="yes" imported="no">dart/dynamics/PointMass.h</includes>
    <includes id="d0/d9b/SoftBodyNode_8h" name="SoftBodyNode.h" local="yes" imported="no">dart/dynamics/SoftBodyNode.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_ALL_FLAGS</name>
      <anchorfile>d2/d7c/Skeleton_8cpp.html</anchorfile>
      <anchor>ab070056e0c123283bd2468fe2f4ccef2</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET_FLAG</name>
      <anchorfile>d2/d7c/Skeleton_8cpp.html</anchorfile>
      <anchor>a55d0d715116e5d09c9a47c5bdb0a31b4</anchor>
      <arglist>(Y, X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ON_ALL_TREES</name>
      <anchorfile>d2/d7c/Skeleton_8cpp.html</anchorfile>
      <anchor>a942e04afdbc545b6dd31b615a1a137ed</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>getVectorObjectIfAvailable</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac7b96401855672e112351544ed8bfc32</anchor>
      <arglist>(size_t _idx, const std::vector&lt; T &gt; &amp;_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; const T * &gt; &amp;</type>
      <name>convertToConstPtrVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac87221859d0f539d865fc1966b22544e</anchor>
      <arglist>(const std::vector&lt; T * &gt; &amp;vec, std::vector&lt; const T * &gt; &amp;const_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>templatedGetIndexOf</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af82ed343a37706a6b114e26ac6e2c616</anchor>
      <arglist>(const Skeleton *_skel, const ObjectT *_obj, const std::string &amp;_type, bool _warning)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isValidBodyNode</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa8651d00389646e874adaec94a4bcfa3</anchor>
      <arglist>(const Skeleton *_skeleton, const JacobianNode *_node, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4306bf824fa8f4696a92ab1558e5a70c</anchor>
      <arglist>(JacobianType &amp;_J, const JacobianNode *_node, const JacobianType &amp;_JBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a277114afe56c75b8e5ce038a9941ba64</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetWorldJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a626a8cc5b7d8a86110d1028b0c011c23</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a70da7968bce560d07638306d4dbb3b57</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa6f759f85b89a1c6d56dcb2e3b55e34a</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianSpatialDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af1595ed12eebb5d91c5c2b1752a73589</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianClassicDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a3a9685dc77f11303d4c82359bfb5c5ef</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a495dd6ef2917f7397cd606035aa181ef</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a07d54b76c16e3597a6424d7f8e9bab6a</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>recursiveConstructBodyNodeTree</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a683db3338ffffeb0faba7e3c5d58274c</anchor>
      <arglist>(std::vector&lt; BodyNodeT * &gt; &amp;tree, BodyNodeT *_currentBodyNode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeSupportPolygon</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a64fcb9aed31efdcd2a48e0fadf30f05d</anchor>
      <arglist>(const Skeleton *skel, math::SupportPolygon &amp;polygon, math::SupportGeometry &amp;geometry, std::vector&lt; size_t &gt; &amp;ee_indices, Eigen::Vector3d &amp;axis1, Eigen::Vector3d &amp;axis2, Eigen::Vector2d &amp;centroid, size_t treeIndex)</arglist>
    </member>
    <member kind="function">
      <type>PropertyType</type>
      <name>getCOMPropertyTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a7ca835d48302d7cd9875cf948d522174</anchor>
      <arglist>(const Skeleton *_skel, const Frame *_relativeTo, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>JacType</type>
      <name>getCOMJacobianTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa6afa2bc9b0d14e17b499feaed8712fa</anchor>
      <arglist>(const Skeleton *_skel, const Frame *_inCoordinatesOf)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SmartPointer.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>dd/d4a/SmartPointer_8h</filename>
    <includes id="d9/d0f/BodyNodePtr_8h" name="BodyNodePtr.h" local="yes" imported="no">dart/dynamics/detail/BodyNodePtr.h</includes>
    <includes id="da/d4f/JointPtr_8h" name="JointPtr.h" local="yes" imported="no">dart/dynamics/detail/JointPtr.h</includes>
    <includes id="de/d2c/DegreeOfFreedomPtr_8h" name="DegreeOfFreedomPtr.h" local="yes" imported="no">dart/dynamics/detail/DegreeOfFreedomPtr.h</includes>
    <includes id="dc/d21/NodePtr_8h" name="NodePtr.h" local="yes" imported="no">dart/dynamics/detail/NodePtr.h</includes>
    <includes id="dc/d11/InverseKinematicsPtr_8h" name="InverseKinematicsPtr.h" local="yes" imported="no">dart/dynamics/detail/InverseKinematicsPtr.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_DYNAMICS_MAKE_SHARED_WEAK</name>
      <anchorfile>dd/d4a/SmartPointer_8h.html</anchorfile>
      <anchor>a3b88c4ed56a52f4428ebe193ef7a8f2e</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DYNAMICS_MAKE_BODYNODEPTR</name>
      <anchorfile>dd/d4a/SmartPointer_8h.html</anchorfile>
      <anchor>ab97cb6ca79847b58b9e862f916bb3a8a</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DYNAMICS_MAKE_BN_DEPENDENT_PTR</name>
      <anchorfile>dd/d4a/SmartPointer_8h.html</anchorfile>
      <anchor>a660a98f95ab4c939d746eeca7d873d09</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DYNAMICS_MAKE_NODEPTR</name>
      <anchorfile>dd/d4a/SmartPointer_8h.html</anchorfile>
      <anchor>a3e63e076d7030d20e90c41457294d90d</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DYNAMICS_MAKE_IK_PTR</name>
      <anchorfile>dd/d4a/SmartPointer_8h.html</anchorfile>
      <anchor>a6a7079f2f5fe96fc0d05f315fbdb0e79</anchor>
      <arglist>(X)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SoftBodyNode.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d0/d22/SoftBodyNode_8cpp</filename>
    <includes id="d0/d9b/SoftBodyNode_8h" name="SoftBodyNode.h" local="yes" imported="no">dart/dynamics/SoftBodyNode.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="dc/de7/LoadOpengl_8h" name="LoadOpengl.h" local="yes" imported="no">dart/renderer/LoadOpengl.h</includes>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">dart/renderer/RenderInterface.h</includes>
    <includes id="db/d4c/PointMass_8h" name="PointMass.h" local="yes" imported="no">dart/dynamics/PointMass.h</includes>
    <includes id="d6/db8/SoftMeshShape_8h" name="SoftMeshShape.h" local="yes" imported="no">dart/dynamics/SoftMeshShape.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>SoftBodyNode.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d0/d9b/SoftBodyNode_8h</filename>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="db/d4c/PointMass_8h" name="PointMass.h" local="yes" imported="no">dart/dynamics/PointMass.h</includes>
    <class kind="class">dart::dynamics::SoftBodyNode</class>
    <class kind="struct">dart::dynamics::SoftBodyNode::UniqueProperties</class>
    <class kind="struct">dart::dynamics::SoftBodyNode::Properties</class>
    <class kind="class">dart::dynamics::SoftBodyNodeHelper</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_VERTEX_STIFFNESS</name>
      <anchorfile>d0/d9b/SoftBodyNode_8h.html</anchorfile>
      <anchor>a7358e39e5226213a2605f0b1d913b60c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_EDGE_STIFNESS</name>
      <anchorfile>d0/d9b/SoftBodyNode_8h.html</anchorfile>
      <anchor>aa5416e545a7043002f402316c3ca9ec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DART_DEFAULT_DAMPING_COEFF</name>
      <anchorfile>d0/d9b/SoftBodyNode_8h.html</anchorfile>
      <anchor>abde107e6f50e8925f3e5a1a16e91b285</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SoftMeshShape.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d9/de2/SoftMeshShape_8cpp</filename>
    <includes id="d6/db8/SoftMeshShape_8h" name="SoftMeshShape.h" local="yes" imported="no">dart/dynamics/SoftMeshShape.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/d4c/PointMass_8h" name="PointMass.h" local="yes" imported="no">dart/dynamics/PointMass.h</includes>
    <includes id="d0/d9b/SoftBodyNode_8h" name="SoftBodyNode.h" local="yes" imported="no">dart/dynamics/SoftBodyNode.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>SoftMeshShape.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d6/db8/SoftMeshShape_8h</filename>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <class kind="class">dart::dynamics::SoftMeshShape</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>TranslationalJoint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>df/d58/TranslationalJoint_8cpp</filename>
    <includes id="db/dec/TranslationalJoint_8h" name="TranslationalJoint.h" local="yes" imported="no">dart/dynamics/TranslationalJoint.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>TranslationalJoint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>db/dec/TranslationalJoint_8h</filename>
    <includes id="d4/d92/MultiDofJoint_8h" name="MultiDofJoint.h" local="yes" imported="no">dart/dynamics/MultiDofJoint.h</includes>
    <class kind="class">dart::dynamics::TranslationalJoint</class>
    <class kind="struct">dart::dynamics::TranslationalJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>UniversalJoint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d9/dc8/UniversalJoint_8cpp</filename>
    <includes id="dd/d4c/UniversalJoint_8h" name="UniversalJoint.h" local="yes" imported="no">dart/dynamics/UniversalJoint.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>UniversalJoint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>dd/d4c/UniversalJoint_8h</filename>
    <includes id="d4/d92/MultiDofJoint_8h" name="MultiDofJoint.h" local="yes" imported="no">dart/dynamics/MultiDofJoint.h</includes>
    <class kind="class">dart::dynamics::UniversalJoint</class>
    <class kind="struct">dart::dynamics::UniversalJoint::UniqueProperties</class>
    <class kind="struct">dart::dynamics::UniversalJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>WeldJoint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d9/d32/WeldJoint_8cpp</filename>
    <includes id="db/d1a/WeldJoint_8h" name="WeldJoint.h" local="yes" imported="no">dart/dynamics/WeldJoint.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>WeldJoint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>db/d1a/WeldJoint_8h</filename>
    <includes id="da/d08/ZeroDofJoint_8h" name="ZeroDofJoint.h" local="yes" imported="no">dart/dynamics/ZeroDofJoint.h</includes>
    <class kind="class">dart::dynamics::WeldJoint</class>
    <class kind="struct">dart::dynamics::WeldJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ZeroDofJoint.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>d9/dd9/ZeroDofJoint_8cpp</filename>
    <includes id="da/d08/ZeroDofJoint_8h" name="ZeroDofJoint.h" local="yes" imported="no">dart/dynamics/ZeroDofJoint.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>ZeroDofJoint.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>da/d08/ZeroDofJoint_8h</filename>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <class kind="class">dart::dynamics::ZeroDofJoint</class>
    <class kind="struct">dart::dynamics::ZeroDofJoint::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
  </compound>
  <compound kind="file">
    <name>GLFuncs.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>db/dd2/GLFuncs_8cpp</filename>
    <includes id="d7/d09/GLFuncs_8h" name="GLFuncs.h" local="yes" imported="no">dart/gui/GLFuncs.h</includes>
    <includes id="d7/de5/LoadGlut_8h" name="LoadGlut.h" local="yes" imported="no">dart/gui/LoadGlut.h</includes>
    <includes id="dc/de7/LoadOpengl_8h" name="LoadOpengl.h" local="yes" imported="no">dart/renderer/LoadOpengl.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <member kind="function">
      <type>void</type>
      <name>drawStringOnScreen</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>aed01baef32d8b5e219071ebcdd9f8279</anchor>
      <arglist>(float _x, float _y, const std::string &amp;_s, bool _bigFont)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArrow3D</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a6737073c5dc3bbeca4c8c3fa02bcf57d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_pt, const Eigen::Vector3d &amp;_dir, const double _length, const double _thickness, const double _arrowThickness)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArrow2D</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a136a9ef3518f5e063d4b8f8b025723cc</anchor>
      <arglist>(const Eigen::Vector2d &amp;_pt, const Eigen::Vector2d &amp;_vec, double _thickness)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawProgressBar</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a2813fb1495c904db58809b2b7741614d</anchor>
      <arglist>(int _currFrame, int _totalFrame)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GLFuncs.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d7/d09/GLFuncs_8h</filename>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>GlutWindow.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d2/d3f/GlutWindow_8cpp</filename>
    <includes id="d6/daf/GlutWindow_8h" name="GlutWindow.h" local="yes" imported="no">dart/gui/GlutWindow.h</includes>
    <includes id="d7/de5/LoadGlut_8h" name="LoadGlut.h" local="yes" imported="no">dart/gui/LoadGlut.h</includes>
    <includes id="d7/d09/GLFuncs_8h" name="GLFuncs.h" local="yes" imported="no">dart/gui/GLFuncs.h</includes>
    <includes id="d2/d9a/OpenGLRenderInterface_8h" name="OpenGLRenderInterface.h" local="yes" imported="no">dart/renderer/OpenGLRenderInterface.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>GlutWindow.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d6/daf/GlutWindow_8h</filename>
    <includes id="dc/de7/LoadOpengl_8h" name="LoadOpengl.h" local="yes" imported="no">dart/renderer/LoadOpengl.h</includes>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">dart/renderer/RenderInterface.h</includes>
    <includes id="d2/ddf/lodepng_8h" name="lodepng.h" local="yes" imported="no">dart/gui/lodepng.h</includes>
    <class kind="class">dart::gui::GlutWindow</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>GraphWindow.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>de/d3b/GraphWindow_8cpp</filename>
    <includes id="d1/d55/GraphWindow_8h" name="GraphWindow.h" local="yes" imported="no">dart/gui/GraphWindow.h</includes>
    <includes id="d7/d09/GLFuncs_8h" name="GLFuncs.h" local="yes" imported="no">dart/gui/GLFuncs.h</includes>
    <includes id="d7/de5/LoadGlut_8h" name="LoadGlut.h" local="yes" imported="no">dart/gui/LoadGlut.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>GraphWindow.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d1/d55/GraphWindow_8h</filename>
    <includes id="d6/d2a/Win2D_8h" name="Win2D.h" local="yes" imported="no">dart/gui/Win2D.h</includes>
    <class kind="class">dart::gui::GraphWindow</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Jitter.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d0/dc2/Jitter_8cpp</filename>
    <includes id="df/d80/Jitter_8h" name="Jitter.h" local="yes" imported="no">Jitter.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Jitter.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>df/d80/Jitter_8h</filename>
    <includes id="dc/de7/LoadOpengl_8h" name="LoadOpengl.h" local="yes" imported="no">dart/renderer/LoadOpengl.h</includes>
    <class kind="struct">dart::gui::jitter_point</class>
    <class kind="class">dart::gui::Jitter</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAX_SAMPLES</name>
      <anchorfile>df/d80/Jitter_8h.html</anchorfile>
      <anchor>a78f316da3a87bf72cb1647786b64bf0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LoadGlut.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d7/de5/LoadGlut_8h</filename>
  </compound>
  <compound kind="file">
    <name>lodepng.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>dd/dc0/lodepng_8cpp</filename>
    <includes id="d2/ddf/lodepng_8h" name="lodepng.h" local="yes" imported="no">lodepng.h</includes>
    <class kind="struct">uivector</class>
    <class kind="struct">ucvector</class>
    <class kind="struct">HuffmanTree</class>
    <class kind="struct">Coin</class>
    <class kind="struct">Hash</class>
    <class kind="struct">ColorTree</class>
    <class kind="struct">ColorProfile</class>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_STRING</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a698acb89e1bf5837b33c30ef35c30044</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CERROR_BREAK</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>af803b1b42c6d252d173df9cd0b32725a</anchor>
      <arglist>(errorvar, code)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERROR_BREAK</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a691b23954341613b96b6d98ce67d339c</anchor>
      <arglist>(code)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CERROR_RETURN_ERROR</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a22b750f75293315981ee75cada129717</anchor>
      <arglist>(errorvar, code)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CERROR_TRY_RETURN</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a84c132ca96d56cac57db68734db152b0</anchor>
      <arglist>(call)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>READBIT</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a89f06ac9bcf1964fb4d663ad7a8dc4a1</anchor>
      <arglist>(bitpointer, bitstream)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FIRST_LENGTH_CODE_INDEX</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>acfb12caea990f92b3aed7c199f615213</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LAST_LENGTH_CODE_INDEX</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>adf9597781d7175fdee0b2466e6e462e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUM_DEFLATE_CODE_SYMBOLS</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a58feace6a0d109fc6bb2161504a3011e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUM_DISTANCE_SYMBOLS</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a5b48becc8f2653ba2bb90858d38fc9ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUM_CODE_LENGTH_CODES</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a22ed04d49e008cb4295a8b366c4f2f3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LAZY_MATCHING</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ab9517cd77a8f1e378aa5f33f0d22309e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_WINDOWSIZE</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a947faf188804eb1b43158cd836333a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct uivector</type>
      <name>uivector</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a358797f791102c447e2e895e8da46854</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ucvector</type>
      <name>ucvector</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a8ebce7aaef4f64e50d2ad2e3a383a505</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct HuffmanTree</type>
      <name>HuffmanTree</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ad705dca4fd163e14e555a6e2e3223af1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Coin</type>
      <name>Coin</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a4d2cd18166489c9373aad80d9036addb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Hash</type>
      <name>Hash</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a13e5b882d7ad0899c101d912bfb2dbf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ColorTree</type>
      <name>ColorTree</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>abb86a394dcbb7e752e39d174a0f20830</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ColorProfile</type>
      <name>ColorProfile</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aa4f95424b82e5a5eaa5b51e3d21c02d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>mymalloc</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ac64c2cc5229ba12acda614f7d2f107e1</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>myrealloc</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>abb4094e8df74287e03da354478cc3ef8</anchor>
      <arglist>(void *ptr, size_t new_size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>myfree</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a0014b6df552d60eae2c14092ef9023b1</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>uivector_cleanup</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a58616079535e14a89a469632d078d336</anchor>
      <arglist>(void *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>uivector_resize</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a348bbe51fbdd2881e2caabe468611a26</anchor>
      <arglist>(uivector *p, size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>uivector_resizev</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a2ceb381bbb52c2fc72946047b58ea11d</anchor>
      <arglist>(uivector *p, size_t size, unsigned value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>uivector_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aa03164e774d0dea9886ccdbb3f591f49</anchor>
      <arglist>(uivector *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>uivector_push_back</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a5cfb7c89e9f18896101fddb10786cbc2</anchor>
      <arglist>(uivector *p, unsigned c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>uivector_copy</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a4bcc3094b5e09464f3aa13130801a831</anchor>
      <arglist>(uivector *p, const uivector *q)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>uivector_swap</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a314deb71ac32a18bd09502d2f44936e9</anchor>
      <arglist>(uivector *p, uivector *q)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>ucvector_resize</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ae4e2da90ae4abb858852f211eb28d622</anchor>
      <arglist>(ucvector *p, size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ucvector_cleanup</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ad689bf84470238e26b01524631d778ec</anchor>
      <arglist>(void *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ucvector_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a1b58c07819eec4ff7e903138c08eb502</anchor>
      <arglist>(ucvector *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>ucvector_resizev</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a6d45cabb19ecce3c9fac8bf005fd2436</anchor>
      <arglist>(ucvector *p, size_t size, unsigned char value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ucvector_init_buffer</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a965dbd8125f0471f3e0d8206b4c91f22</anchor>
      <arglist>(ucvector *p, unsigned char *buffer, size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>ucvector_push_back</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a877b6a70493cb0b29f719ea48a26eadb</anchor>
      <arglist>(ucvector *p, unsigned char c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>string_resize</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aad5cf2301c0696db33d9cc22be775242</anchor>
      <arglist>(char **out, size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>string_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a881d50f3ee56daf1740cca36a0aa263e</anchor>
      <arglist>(char **out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>string_cleanup</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a9886d70ad5032ac8f25f5c1c7de03b58</anchor>
      <arglist>(char **out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>string_set</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a9f49527841de8cab3f6b8db185d4379f</anchor>
      <arglist>(char **out, const char *in)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_read32bitInt</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ae0cbc68bfc44dcf1f3186c076272113b</anchor>
      <arglist>(const unsigned char *buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>lodepng_set32bitInt</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a47e47531b3e88528764994ee5b1ec0f9</anchor>
      <arglist>(unsigned char *buffer, unsigned value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>lodepng_add32bitInt</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a4fc3164cfaabc5861f53a7cfb756b680</anchor>
      <arglist>(ucvector *buffer, unsigned value)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_load_file</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>af0b16abca7a6a20ff4980e9f04374c90</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_save_file</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a837bf136ff32ee3efed5df4105ccedf7</anchor>
      <arglist>(const unsigned char *buffer, size_t buffersize, const char *filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addBitToStream</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a4d700260c21794995cbc67d6dd00ce44</anchor>
      <arglist>(size_t *bitpointer, ucvector *bitstream, unsigned char bit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addBitsToStream</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aaee6011b88c8b394ccd9e868b01cafa6</anchor>
      <arglist>(size_t *bitpointer, ucvector *bitstream, unsigned value, size_t nbits)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addBitsToStreamReversed</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aef353b91f13641f94a9028ac84fb330c</anchor>
      <arglist>(size_t *bitpointer, ucvector *bitstream, unsigned value, size_t nbits)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned char</type>
      <name>readBitFromStream</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a2f08dd6df293eb1fdfdd193892a699ed</anchor>
      <arglist>(size_t *bitpointer, const unsigned char *bitstream)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>readBitsFromStream</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aa7fbb9c4282b81dee9596cf334c7e719</anchor>
      <arglist>(size_t *bitpointer, const unsigned char *bitstream, size_t nbits)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>HuffmanTree_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a37cb427b175e04defdc48569b76a375c</anchor>
      <arglist>(HuffmanTree *tree)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>HuffmanTree_cleanup</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a3228e11a4562c70c9fb78931eb6eb44a</anchor>
      <arglist>(HuffmanTree *tree)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>HuffmanTree_make2DTree</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aadc61a27e58bef1cc7722ea172bf58fd</anchor>
      <arglist>(HuffmanTree *tree)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>HuffmanTree_makeFromLengths2</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a6dd288bb82383b61cb04855b6a38680a</anchor>
      <arglist>(HuffmanTree *tree)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>HuffmanTree_makeFromLengths</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aba97231d47c3cb5538a30bb0cd4be7e9</anchor>
      <arglist>(HuffmanTree *tree, const unsigned *bitlen, size_t numcodes, unsigned maxbitlen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>coin_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a3cfe255ed4a1264dafcdb689a11cbe66</anchor>
      <arglist>(Coin *c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>coin_cleanup</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a3fc5367e3cc67ce8f9762a25c5938bbd</anchor>
      <arglist>(void *c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>coin_copy</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a1a2560a6973770089a30c744fa5caeec</anchor>
      <arglist>(Coin *c1, const Coin *c2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>add_coins</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ae2e5755cc6b42bc9e328e75f88a00789</anchor>
      <arglist>(Coin *c1, const Coin *c2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init_coins</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aff765df48d9145e6063b40ecc6473cd8</anchor>
      <arglist>(Coin *coins, size_t num)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>cleanup_coins</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ad70a4c2a32cbf53dae22a7d7bb7fd011</anchor>
      <arglist>(Coin *coins, size_t num)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sort_coins</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a78b4b7fec3a2da564339fd0a766fd86d</anchor>
      <arglist>(Coin *data, size_t amount)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>append_symbol_coins</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a132ff71873b39f439234f45828f9f038</anchor>
      <arglist>(Coin *coins, const unsigned *frequencies, unsigned numcodes, size_t sum)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_huffman_code_lengths</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a82c0c408213e5bbb4a8d0edbaeffc97f</anchor>
      <arglist>(unsigned *lengths, const unsigned *frequencies, size_t numcodes, unsigned maxbitlen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>HuffmanTree_makeFromFrequencies</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a10e6c6183aba33ac05dd184cd0898796</anchor>
      <arglist>(HuffmanTree *tree, const unsigned *frequencies, size_t numcodes, unsigned maxbitlen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>HuffmanTree_getCode</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a4a219535105aecc94ba9d4bccfbb66b8</anchor>
      <arglist>(const HuffmanTree *tree, unsigned index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>HuffmanTree_getLength</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a0b12e062127bf0b511165c7a14ca9a87</anchor>
      <arglist>(const HuffmanTree *tree, unsigned index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>generateFixedLitLenTree</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ae061b285397842660d714272df841c39</anchor>
      <arglist>(HuffmanTree *tree)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>generateFixedDistanceTree</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>afff6d2d37364f0329eba8b54c380b1ff</anchor>
      <arglist>(HuffmanTree *tree)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>huffmanDecodeSymbol</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>abf89fc00646f5514a9b1c4f69785e052</anchor>
      <arglist>(const unsigned char *in, size_t *bp, const HuffmanTree *codetree, size_t inbitlength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getTreeInflateFixed</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>abcd01b659a4a19a50aa61345cec2e89d</anchor>
      <arglist>(HuffmanTree *tree_ll, HuffmanTree *tree_d)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>getTreeInflateDynamic</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a83644e0bc7e164a26131b1b369907d3b</anchor>
      <arglist>(HuffmanTree *tree_ll, HuffmanTree *tree_d, const unsigned char *in, size_t *bp, size_t inlength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>inflateHuffmanBlock</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a81bb15a46d4af11cbc78bb671971b099</anchor>
      <arglist>(ucvector *out, const unsigned char *in, size_t *bp, size_t *pos, size_t inlength, unsigned btype)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>inflateNoCompression</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ab38930a2237fe8c8d4ac9af09a95a04b</anchor>
      <arglist>(ucvector *out, const unsigned char *in, size_t *bp, size_t *pos, size_t inlength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>lodepng_inflatev</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ab9bde96d8779ba938e3122c30f169c11</anchor>
      <arglist>(ucvector *out, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_inflate</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a9c2f61923ad2ce3d47354923ba6df62d</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>inflate</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a4fa266277c615d29050fa1f8fbbd04d3</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addHuffmanSymbol</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a8220b4fba74162202ac5294bde504252</anchor>
      <arglist>(size_t *bp, ucvector *compressed, unsigned code, unsigned bitlen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>searchCodeIndex</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a1be657e325355087ebe176d187d2c0a5</anchor>
      <arglist>(const unsigned *array, size_t array_size, size_t value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addLengthDistance</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aad409090a7949e79b1db4c3a34431712</anchor>
      <arglist>(uivector *values, size_t length, size_t distance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>hash_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>af0c3ddc6fb0114714f7e87a485f0403a</anchor>
      <arglist>(Hash *hash, unsigned windowsize)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>hash_cleanup</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a42a60458dc0338a8995e04eb17085291</anchor>
      <arglist>(Hash *hash)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>getHash</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a7a0f9762d3257497e827f8afde3d05fe</anchor>
      <arglist>(const unsigned char *data, size_t size, size_t pos)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>countZeros</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a92ccc314f19e1d89170fadb55b760464</anchor>
      <arglist>(const unsigned char *data, size_t size, size_t pos)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>updateHashChain</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a9e01303623f55ec44d4c865e82ae299b</anchor>
      <arglist>(Hash *hash, size_t pos, int hashval, unsigned windowsize)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>encodeLZ77</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>adabb98d976f0fca9ee1ca26a396c783b</anchor>
      <arglist>(uivector *out, Hash *hash, const unsigned char *in, size_t inpos, size_t insize, unsigned windowsize)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>deflateNoCompression</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a758e000aa92967d5916db08e815e6b1f</anchor>
      <arglist>(ucvector *out, const unsigned char *data, size_t datasize)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>writeLZ77data</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a6bcad159011eeb745922886cb9b72db4</anchor>
      <arglist>(size_t *bp, ucvector *out, const uivector *lz77_encoded, const HuffmanTree *tree_ll, const HuffmanTree *tree_d)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>deflateDynamic</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>abaf81e979241fbcf4716f605fd86e972</anchor>
      <arglist>(ucvector *out, size_t *bp, Hash *hash, const unsigned char *data, size_t datapos, size_t dataend, const LodePNGCompressSettings *settings, int final)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>deflateFixed</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a830a2af07ec44a766a6a0754e8017c49</anchor>
      <arglist>(ucvector *out, size_t *bp, Hash *hash, const unsigned char *data, size_t datapos, size_t dataend, const LodePNGCompressSettings *settings, int final)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>lodepng_deflatev</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a39ac60ba8b9972ab13c74559681c6346</anchor>
      <arglist>(ucvector *out, const unsigned char *in, size_t insize, const LodePNGCompressSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_deflate</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a6f5f070e236aaf9b1809e34b467f3225</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGCompressSettings *settings)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>deflate</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a1d17e3031a5892a1e34c43b1b3cdae36</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGCompressSettings *settings)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>update_adler32</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a6b8e3bf04ec5a378eabb8851728421dd</anchor>
      <arglist>(unsigned adler, const unsigned char *data, unsigned len)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>adler32</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aaff8570a8cd87fb288946c4465077c8d</anchor>
      <arglist>(const unsigned char *data, unsigned len)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_zlib_decompress</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ae66b9c1eeb9c44572bd381a94485e157</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>zlib_decompress</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ae06154c06600720b6c5727ba57519c36</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_zlib_compress</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a72d4240c44c9ba1814dae814c7d80eb1</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGCompressSettings *settings)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>zlib_compress</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a16b8b673224a932324a48890800a85b0</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGCompressSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_compress_settings_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a6fbd123f5a5f3abbf7149ad3ffba9e57</anchor>
      <arglist>(LodePNGCompressSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_decompress_settings_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ab752d2ce31fb7e6fe1a27b559d3097ad</anchor>
      <arglist>(LodePNGDecompressSettings *settings)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Crc32_make_crc_table</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a529a3f16b5cab45e0940809399e07c6f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>Crc32_update_crc</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ae3139a5e08b2fac48c38f2872c096202</anchor>
      <arglist>(const unsigned char *buf, unsigned crc, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_crc32</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a1608496525479b21a6faeaa69285156f</anchor>
      <arglist>(const unsigned char *buf, size_t len)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned char</type>
      <name>readBitFromReversedStream</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aa65d1743dade2919f44301461bde054d</anchor>
      <arglist>(size_t *bitpointer, const unsigned char *bitstream)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>readBitsFromReversedStream</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a25ac892793826b6ab7542b32dda29739</anchor>
      <arglist>(size_t *bitpointer, const unsigned char *bitstream, size_t nbits)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBitOfReversedStream0</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aa48d4f4da5470230ccf9813a94740a1f</anchor>
      <arglist>(size_t *bitpointer, unsigned char *bitstream, unsigned char bit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBitOfReversedStream</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>afab63835fa156b812c454a4a96b7b28b</anchor>
      <arglist>(size_t *bitpointer, unsigned char *bitstream, unsigned char bit)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_chunk_length</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ad52897a6aecee7dde053c468c6bedda2</anchor>
      <arglist>(const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_chunk_type</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a2ccd8bef4daad75002f72308a5cbd0dc</anchor>
      <arglist>(char type[5], const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>lodepng_chunk_type_equals</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a5153305d442f8332326ef332316b06be</anchor>
      <arglist>(const unsigned char *chunk, const char *type)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>lodepng_chunk_ancillary</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aabe8616184aa2adaa2a74ad989e6fb41</anchor>
      <arglist>(const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>lodepng_chunk_private</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a2695e1f9d3dee3f82a89f47a6dc7c517</anchor>
      <arglist>(const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>lodepng_chunk_safetocopy</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a2e09963fb4b4eb4ee7789d40b9080250</anchor>
      <arglist>(const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char *</type>
      <name>lodepng_chunk_data</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ac3512c7d71014c5b6a868573e8ccb23f</anchor>
      <arglist>(unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned char *</type>
      <name>lodepng_chunk_data_const</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a18062ec4da645562be021ec5ce09c117</anchor>
      <arglist>(const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_chunk_check_crc</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a02091d970921c7b94c4e63821785f97a</anchor>
      <arglist>(const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_chunk_generate_crc</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a5ea8918bcdd67d62af9735faa5d03b1b</anchor>
      <arglist>(unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char *</type>
      <name>lodepng_chunk_next</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>adad919b6dd09fb56cf285b3b46efb2cb</anchor>
      <arglist>(unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned char *</type>
      <name>lodepng_chunk_next_const</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a20eec77cd3ca77b9c55499846ea9595a</anchor>
      <arglist>(const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_chunk_append</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a865c89cf0456b876e3bd5698bc910336</anchor>
      <arglist>(unsigned char **out, size_t *outlength, const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_chunk_create</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a2659e18b691b087c3b8610f44d9be8b1</anchor>
      <arglist>(unsigned char **out, size_t *outlength, unsigned length, const char *type, const unsigned char *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>checkColorValidity</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a82fb69d46cd6a5fce5bc16e33187c463</anchor>
      <arglist>(LodePNGColorType colortype, unsigned bd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>getNumColorChannels</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ab9f52674eca30cc5cbedc379d43f7358</anchor>
      <arglist>(LodePNGColorType colortype)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>lodepng_get_bpp_lct</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a581d8244dd5d40176291672a3d323b0f</anchor>
      <arglist>(LodePNGColorType colortype, unsigned bitdepth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_color_mode_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a66345d4cdab130c6cbd3166d7a0a5257</anchor>
      <arglist>(LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_color_mode_cleanup</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ab1c7709a984d5842ab314cf5d2dc2dcc</anchor>
      <arglist>(LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_color_mode_copy</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a7801819a161b96f65259680126e270f1</anchor>
      <arglist>(LodePNGColorMode *dest, const LodePNGColorMode *source)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>lodepng_color_mode_equal</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aa2781df4d5704a3daa132056d411dbd5</anchor>
      <arglist>(const LodePNGColorMode *a, const LodePNGColorMode *b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_palette_clear</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a2aa729ce82079627789a0f8961c82f5e</anchor>
      <arglist>(LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_palette_add</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a05bf6fac7afc9025bbcb9f5f9f1b0027</anchor>
      <arglist>(LodePNGColorMode *info, unsigned char r, unsigned char g, unsigned char b, unsigned char a)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_get_bpp</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a83344b5c8c5839ca42858dd3578220ef</anchor>
      <arglist>(const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_get_channels</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>abca559f31bf69eabc23c09a8a4c80b93</anchor>
      <arglist>(const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_is_greyscale_type</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ae0e6996e4aa9ac225f228b2253269127</anchor>
      <arglist>(const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_is_alpha_type</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aa255d9a2e4054fc2888bf7670dac4107</anchor>
      <arglist>(const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_is_palette_type</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ad9b8eca971e9d01d55ced928b26a53c5</anchor>
      <arglist>(const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_has_palette_alpha</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a4e89e0d7e13e0f3c098c4cf326cc5014</anchor>
      <arglist>(const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_can_have_alpha</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a93f12a150968449f016fe93decc1e074</anchor>
      <arglist>(const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lodepng_get_raw_size</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a5861bf2c5a7c8976ea2dd6d21e8d58bd</anchor>
      <arglist>(unsigned w, unsigned h, const LodePNGColorMode *color)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lodepng_get_raw_size_lct</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aaf2e19ad3168294235bf3b16eeb56134</anchor>
      <arglist>(unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LodePNGUnknownChunks_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a8a9b8e191230b19ebb61a33c3681626a</anchor>
      <arglist>(LodePNGInfo *info)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LodePNGUnknownChunks_cleanup</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>af58b2200810536a52e78e16f79ffba97</anchor>
      <arglist>(LodePNGInfo *info)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>LodePNGUnknownChunks_copy</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a89c6d10b0fc0fb03189f972d2a8f8718</anchor>
      <arglist>(LodePNGInfo *dest, const LodePNGInfo *src)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LodePNGText_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a4f5e10653bafe3ae7f2f7d338901c56b</anchor>
      <arglist>(LodePNGInfo *info)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LodePNGText_cleanup</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ad38d63db1da8c6309032e9744d953327</anchor>
      <arglist>(LodePNGInfo *info)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>LodePNGText_copy</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ac7e37b231d112cf12cb4d56233dffea0</anchor>
      <arglist>(LodePNGInfo *dest, const LodePNGInfo *source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_clear_text</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a533d58c161de45096b83c44bbaa95e93</anchor>
      <arglist>(LodePNGInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_add_text</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a10c9cfd9edf86fc8e21d5f69d81238d0</anchor>
      <arglist>(LodePNGInfo *info, const char *key, const char *str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LodePNGIText_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aa429acf1f7fd6c5325c7c9f389494ccd</anchor>
      <arglist>(LodePNGInfo *info)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LodePNGIText_cleanup</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ae0c18287a11fa2fae4bcfb036461807a</anchor>
      <arglist>(LodePNGInfo *info)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>LodePNGIText_copy</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ac7b907dd103f69d071b83820aca55f90</anchor>
      <arglist>(LodePNGInfo *dest, const LodePNGInfo *source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_clear_itext</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aea7d8c2bb2adaf028ec143c08a53f815</anchor>
      <arglist>(LodePNGInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_add_itext</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aad7cb0e06093d0111bd599a279360f98</anchor>
      <arglist>(LodePNGInfo *info, const char *key, const char *langtag, const char *transkey, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_info_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ae50c1ddde2fa8004b46da433f3e20974</anchor>
      <arglist>(LodePNGInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_info_cleanup</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ad4b9dc33569e24062e077f5a69ead178</anchor>
      <arglist>(LodePNGInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_info_copy</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a14a4dc4c26e03acb5ab36880aacbd85a</anchor>
      <arglist>(LodePNGInfo *dest, const LodePNGInfo *source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_info_swap</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>afdd0744a52d08c2f28bf30f1f5de9af3</anchor>
      <arglist>(LodePNGInfo *a, LodePNGInfo *b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addColorBits</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a670570b2c0cb50686a4b891018c6a54b</anchor>
      <arglist>(unsigned char *out, size_t index, unsigned bits, unsigned in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>color_tree_make_next</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aad3d0d2d64902999625314bbec042235</anchor>
      <arglist>(ColorTree *tree)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>color_tree_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a67ae5eb3f73a84eeeafdf6ad44fdf41b</anchor>
      <arglist>(ColorTree *tree, int next)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>color_tree_cleanup</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a561706f2a518dd06d27bf0447ea3539d</anchor>
      <arglist>(ColorTree *tree)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>color_tree_get</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a202cdb563e7857e5a9fde1512902ba64</anchor>
      <arglist>(ColorTree *tree, unsigned char r, unsigned char g, unsigned char b, unsigned char a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>color_tree_has</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a04007da395d0d5346b6557100957e530</anchor>
      <arglist>(ColorTree *tree, unsigned char r, unsigned char g, unsigned char b, unsigned char a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>color_tree_add</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a6b29a37782da6f23b70f60f953a72191</anchor>
      <arglist>(ColorTree *tree, unsigned char r, unsigned char g, unsigned char b, unsigned char a, int index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>rgba8ToPixel</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aa0a383c090779fbb6553cf0f64c1ac16</anchor>
      <arglist>(unsigned char *out, size_t i, const LodePNGColorMode *mode, ColorTree *tree, unsigned char r, unsigned char g, unsigned char b, unsigned char a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>rgba16ToPixel</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a116eef7d152f1f8cdef0f485345be499</anchor>
      <arglist>(unsigned char *out, size_t i, const LodePNGColorMode *mode, unsigned short r, unsigned short g, unsigned short b, unsigned short a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>getPixelColorRGBA8</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a1f2ea58374344f9750883ba69572907e</anchor>
      <arglist>(unsigned char *r, unsigned char *g, unsigned char *b, unsigned char *a, const unsigned char *in, size_t i, const LodePNGColorMode *mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>getPixelColorRGBA16</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a3ebc1566244cc73e2517495ed7732b48</anchor>
      <arglist>(unsigned short *r, unsigned short *g, unsigned short *b, unsigned short *a, const unsigned char *in, size_t i, const LodePNGColorMode *mode)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_convert</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aac02808f6427a260a7603722b4d82294</anchor>
      <arglist>(unsigned char *out, const unsigned char *in, LodePNGColorMode *mode_out, LodePNGColorMode *mode_in, unsigned w, unsigned h)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>color_profile_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ac9bac526ff11a21bd54d4b100a202fef</anchor>
      <arglist>(ColorProfile *profile, LodePNGColorMode *mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>color_profile_cleanup</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>af331338f7fb1aa1c98e6527766f726dd</anchor>
      <arglist>(ColorProfile *profile)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>getValueRequiredBits</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a625053c52f9ad79299d2100959fdb67f</anchor>
      <arglist>(unsigned char value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>get_color_profile</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a05b17b4d178d261df077743d6b26ba06</anchor>
      <arglist>(ColorProfile *profile, const unsigned char *in, size_t numpixels, LodePNGColorMode *mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>doAutoChooseColor</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ab4ef21bfb40f0a14168a90dd7e5e6704</anchor>
      <arglist>(LodePNGColorMode *mode_out, const unsigned char *image, unsigned w, unsigned h, LodePNGColorMode *mode_in, LodePNGAutoConvert auto_convert)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned char</type>
      <name>paethPredictor</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ae45bdc7316a77f4271d818559b251027</anchor>
      <arglist>(short a, short b, short c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Adam7_getpassvalues</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a18aff167f1895955ac0f831555e9cff3</anchor>
      <arglist>(unsigned passw[7], unsigned passh[7], size_t filter_passstart[8], size_t padded_passstart[8], size_t passstart[8], unsigned w, unsigned h, unsigned bpp)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_inspect</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a0bee70fa0a93ca4463b35a3ceb9910e3</anchor>
      <arglist>(unsigned *w, unsigned *h, LodePNGState *state, const unsigned char *in, size_t insize)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>unfilterScanline</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a89921f11a4106a6174ce974e008b25a6</anchor>
      <arglist>(unsigned char *recon, const unsigned char *scanline, const unsigned char *precon, size_t bytewidth, unsigned char filterType, size_t length)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>unfilter</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a39d1622b642f0bc9d90900a8933d1da8</anchor>
      <arglist>(unsigned char *out, const unsigned char *in, unsigned w, unsigned h, unsigned bpp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Adam7_deinterlace</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>abc9c979fbcf3d9913e29a057a308aa7d</anchor>
      <arglist>(unsigned char *out, const unsigned char *in, unsigned w, unsigned h, unsigned bpp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removePaddingBits</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>af809f4954916e3a7aadf36374480907b</anchor>
      <arglist>(unsigned char *out, const unsigned char *in, size_t olinebits, size_t ilinebits, unsigned h)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>postProcessScanlines</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a0dd02ca1504cab05af1e059978fb5246</anchor>
      <arglist>(unsigned char *out, unsigned char *in, unsigned w, unsigned h, const LodePNGInfo *info_png)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>decodeGeneric</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a8a00ea9640614259d37a92c655219554</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, LodePNGState *state, const unsigned char *in, size_t insize)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_decode</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a70adabd588a9a27dcc9eb4322f6c3b3f</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, LodePNGState *state, const unsigned char *in, size_t insize)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_decode_memory</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a623138ad43ce7eae0346e4324ba1f14e</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, const unsigned char *in, size_t insize, LodePNGColorType colortype, unsigned bitdepth)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_decode32</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a67c3a7ee81836f6e5c9ba6487a1b38f5</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, const unsigned char *in, size_t insize)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_decode24</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ad7df6a47afc81f1854cf5a23471cf96b</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, const unsigned char *in, size_t insize)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_decode_file</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a6eec335315ecb6182292ebd37ef02b4a</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, const char *filename, LodePNGColorType colortype, unsigned bitdepth)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_decode32_file</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a3eca27e18f0e71cf1c21e1c1f5ff4aab</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_decode24_file</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aadc99e713f6408d391dfa140d8e95b96</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_decoder_settings_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a9220280c647e2a90a9b05d20038f1c6d</anchor>
      <arglist>(LodePNGDecoderSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_state_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ae3ee1eb944467fbbc1cf939328dd6a57</anchor>
      <arglist>(LodePNGState *state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_state_cleanup</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a74109bf9860e2eb4bfa872ab8cf0f000</anchor>
      <arglist>(LodePNGState *state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_state_copy</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a87514bea6f324553184e48794a0ec3fc</anchor>
      <arglist>(LodePNGState *dest, const LodePNGState *source)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>addChunk</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>af19f183e437b63f5fca48f26807bfa4a</anchor>
      <arglist>(ucvector *out, const char *chunkName, const unsigned char *data, size_t length)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>writeSignature</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a3ef7410c8765fdbed5e61e206c1b68a9</anchor>
      <arglist>(ucvector *out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>addChunk_IHDR</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a11ce54b0d8d578697bbf7d7e2dd09f1b</anchor>
      <arglist>(ucvector *out, unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth, unsigned interlace_method)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>addChunk_PLTE</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a3480b1501e21550d2410844b9f245351</anchor>
      <arglist>(ucvector *out, const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>addChunk_tRNS</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a927ece80cafee4b6272f129e8f0d3bec</anchor>
      <arglist>(ucvector *out, const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>addChunk_IDAT</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a666f5da34d12168555c2b8bf2c538806</anchor>
      <arglist>(ucvector *out, const unsigned char *data, size_t datasize, LodePNGCompressSettings *zlibsettings)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>addChunk_IEND</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aca4038c773ca0f7cdc7b324c3c3df167</anchor>
      <arglist>(ucvector *out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>addChunk_tEXt</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a4a091d10da524d1f15b46642e189ae00</anchor>
      <arglist>(ucvector *out, const char *keyword, const char *textstring)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>addChunk_zTXt</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a9623f7145f6ff3c5aeedfd904fc6127d</anchor>
      <arglist>(ucvector *out, const char *keyword, const char *textstring, LodePNGCompressSettings *zlibsettings)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>addChunk_iTXt</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a2d0e446a9081005e5dec2633f5ccae83</anchor>
      <arglist>(ucvector *out, unsigned compressed, const char *keyword, const char *langtag, const char *transkey, const char *textstring, LodePNGCompressSettings *zlibsettings)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>addChunk_bKGD</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a11d25b09c2ee94045ccc8671866b45c7</anchor>
      <arglist>(ucvector *out, const LodePNGInfo *info)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>addChunk_tIME</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a51c0f425a57b548959ec56a3a6809332</anchor>
      <arglist>(ucvector *out, const LodePNGTime *time)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>addChunk_pHYs</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a500457c22b230e0944c49e7f63a06c63</anchor>
      <arglist>(ucvector *out, const LodePNGInfo *info)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>filterScanline</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a8ca5670df4a17d12d10c63d21330c947</anchor>
      <arglist>(unsigned char *out, const unsigned char *scanline, const unsigned char *prevline, size_t length, size_t bytewidth, unsigned char filterType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>filter</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a5b54384906d446d1277a55ac2c443e8d</anchor>
      <arglist>(unsigned char *out, const unsigned char *in, unsigned w, unsigned h, const LodePNGColorMode *info, const LodePNGEncoderSettings *settings)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addPaddingBits</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a0ab19d681e279413b79074057ea80a3e</anchor>
      <arglist>(unsigned char *out, const unsigned char *in, size_t olinebits, size_t ilinebits, unsigned h)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Adam7_interlace</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a86f1534dd35f6da700dcb226bbfe2c57</anchor>
      <arglist>(unsigned char *out, const unsigned char *in, unsigned w, unsigned h, unsigned bpp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>preProcessScanlines</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a1a19edd9e11f7964566f21982ce6e224</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *in, unsigned w, unsigned h, const LodePNGInfo *info_png, const LodePNGEncoderSettings *settings)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>getPaletteTranslucency</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a09fadbf644bb104f0f497f21f00077d8</anchor>
      <arglist>(const unsigned char *palette, size_t palettesize)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned</type>
      <name>addUnknownChunks</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a83420cd98792658dfb854668a803b775</anchor>
      <arglist>(ucvector *out, unsigned char *data, size_t datasize)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_encode</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a90e82b0ccc75cfb27ccc9756c8d96f07</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h, LodePNGState *state)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_encode_memory</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ada7bc92db6e9f8906a1fc85caa0b17aa</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_encode32</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a75d7f3e4e388b74b7b5214c76c66382f</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_encode24</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a4100642d70071029967c16afd72193ff</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_encode_file</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a009ac38098765fcae32c9d91770b94df</anchor>
      <arglist>(const char *filename, const unsigned char *image, unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_encode32_file</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a018a3bd975fb886cdf1f6f544f2882e4</anchor>
      <arglist>(const char *filename, const unsigned char *image, unsigned w, unsigned h)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_encode24_file</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a4f8f383c22ceb7c22b1cc7e774f0bad2</anchor>
      <arglist>(const char *filename, const unsigned char *image, unsigned w, unsigned h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_encoder_settings_init</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a874763ad14a0c84d41d0819212407a5a</anchor>
      <arglist>(LodePNGEncoderSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>lodepng_error_text</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ab56bbf4d0a24238ef2d6fe125705a8ce</anchor>
      <arglist>(unsigned code)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>LENGTHBASE</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a6e921f21ce796d21b10a5602708356c9</anchor>
      <arglist>[29]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>LENGTHEXTRA</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a36f7494abb7d8fa1ed4c00495ccc69b9</anchor>
      <arglist>[29]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>DISTANCEBASE</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>acaf561f0c4e23840e58b49221ed4a39d</anchor>
      <arglist>[30]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>DISTANCEEXTRA</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ae2b6129cf7ecfc3c6bc1c15c0bf2eed0</anchor>
      <arglist>[30]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>CLCL_ORDER</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>acc740439d5937d68f23170f31ad1e189</anchor>
      <arglist>[NUM_CODE_LENGTH_CODES]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_t</type>
      <name>MAX_SUPPORTED_DEFLATE_LENGTH</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a2a7f7638619c00f79a4be22bcf5fadba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>HASH_NUM_VALUES</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a6138ec84bf29d2550a29a7cd835a9710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>HASH_NUM_CHARACTERS</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ab9fc5651753d370a740b2cef973a418b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>HASH_SHIFT</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ac95f3a26d39c863efabb2a9cc41923c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const LodePNGCompressSettings</type>
      <name>lodepng_default_compress_settings</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a0b5cf190f94f8f11ed5c0abb3504ad86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const LodePNGDecompressSettings</type>
      <name>lodepng_default_decompress_settings</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aab7a41a03154aa8d9ef65f2d434641b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static unsigned</type>
      <name>Crc32_crc_table_computed</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>ac961612365e0c5c5633e7b88d8ade52f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static unsigned</type>
      <name>Crc32_crc_table</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>aca8bfab1ea1377cbd8172773f56ab4d3</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>ADAM7_IX</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a85488c2cdadbed8c6ac4261a3922e186</anchor>
      <arglist>[7]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>ADAM7_IY</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a851ee080587d6fe775d09e376947c880</anchor>
      <arglist>[7]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>ADAM7_DX</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>af3ae20779df70d02c4a2d6195e72c976</anchor>
      <arglist>[7]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>ADAM7_DY</name>
      <anchorfile>dd/dc0/lodepng_8cpp.html</anchorfile>
      <anchor>a1e68ce500702fd59580e735e977b84f3</anchor>
      <arglist>[7]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lodepng.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d2/ddf/lodepng_8h</filename>
    <class kind="struct">LodePNGDecompressSettings</class>
    <class kind="struct">LodePNGCompressSettings</class>
    <class kind="struct">LodePNGColorMode</class>
    <class kind="struct">LodePNGTime</class>
    <class kind="struct">LodePNGInfo</class>
    <class kind="struct">LodePNGDecoderSettings</class>
    <class kind="struct">LodePNGEncoderSettings</class>
    <class kind="struct">LodePNGState</class>
    <member kind="define">
      <type>#define</type>
      <name>LODEPNG_COMPILE_ZLIB</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a66c036f5e0213ff2cc380bab4486738d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LODEPNG_COMPILE_PNG</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>af557b37dd9fcaed5be60c0b143e54b38</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LODEPNG_COMPILE_DECODER</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a823441da1dd5ddf7282d1f3bca124938</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LODEPNG_COMPILE_ENCODER</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a2285c1e239bc24607901ad98e8ebb7eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LODEPNG_COMPILE_DISK</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>af8e782a2a5642d12dba9aa38a7a00133</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LODEPNG_COMPILE_ANCILLARY_CHUNKS</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a32282377bca2e3e43bcf16aa9daa8554</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LODEPNG_COMPILE_ERROR_TEXT</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a17778a07a7c374034f826e359744cc5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum LodePNGColorType</type>
      <name>LodePNGColorType</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a2888cdb238a1564ca0044f431020a63a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LodePNGDecompressSettings</type>
      <name>LodePNGDecompressSettings</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a7d5d22aab76370293dd43cb348630f33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LodePNGCompressSettings</type>
      <name>LodePNGCompressSettings</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a0f335a24ea8c0500860d582fbfeb1c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LodePNGColorMode</type>
      <name>LodePNGColorMode</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a815663f247624b4de70b5233e68e7bd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LodePNGTime</type>
      <name>LodePNGTime</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ad5ea18abea187eb1a2b8e0480bf225a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LodePNGInfo</type>
      <name>LodePNGInfo</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a4dab659b9d6bbcf04a540efb7c8be803</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LodePNGDecoderSettings</type>
      <name>LodePNGDecoderSettings</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a4c18437d9fb98cc3e767c2435abb18a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum LodePNGFilterStrategy</type>
      <name>LodePNGFilterStrategy</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a1e1206fa06909df45beaf759d92bee14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum LodePNGAutoConvert</type>
      <name>LodePNGAutoConvert</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a7be96f8a9af2a32914c8abfcccc5aaaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LodePNGEncoderSettings</type>
      <name>LodePNGEncoderSettings</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a0a622b1ab56b6f1fb52b8d9219be2db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct LodePNGState</type>
      <name>LodePNGState</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ada25ccabb89bf38141e9dfa857cbcc93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LodePNGColorType</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a8f763b6ae712d9802dec37019dfa0102</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LCT_GREY</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a8f763b6ae712d9802dec37019dfa0102a57b93d657f1794967620870e03643a6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LCT_RGB</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a8f763b6ae712d9802dec37019dfa0102a47e389fe1e3e64ed4a22964d5e151894</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LCT_PALETTE</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a8f763b6ae712d9802dec37019dfa0102a002c3ac8ce7ee8560249f034a3949c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LCT_GREY_ALPHA</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a8f763b6ae712d9802dec37019dfa0102a61da4464d66b2f215f7fc03c20c2418c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LCT_RGBA</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a8f763b6ae712d9802dec37019dfa0102af31451c4b991a3b3c764e983c77fa26e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LodePNGFilterStrategy</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ad5215c95d5bedc9103d8e6490398254f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LFS_HEURISTIC</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ad5215c95d5bedc9103d8e6490398254faefe202d16ce789d516278678e1ef9034</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LFS_ZERO</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ad5215c95d5bedc9103d8e6490398254fa95592a70a6850eff5a730ab6cd0344d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LFS_MINSUM</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ad5215c95d5bedc9103d8e6490398254fac536539c215333def413f43c8b060b03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LFS_BRUTE_FORCE</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ad5215c95d5bedc9103d8e6490398254fa4cda3cf50239032689e5f5ec3c209531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LFS_PREDEFINED</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ad5215c95d5bedc9103d8e6490398254fa3cea29523d6a09283fec1c24ada6fd6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LodePNGAutoConvert</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a6c1234df37a6c1efb732d32d1cdb37a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LAC_NO</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a6c1234df37a6c1efb732d32d1cdb37a3af19251652ec489ea0a626b1d98a48396</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LAC_ALPHA</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a6c1234df37a6c1efb732d32d1cdb37a3a4c70d898e2d18aa86758f8d25a0e42ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LAC_AUTO</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a6c1234df37a6c1efb732d32d1cdb37a3a6f8a3e1ab9c544dca699cf22203ba619</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LAC_AUTO_NO_NIBBLES</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a6c1234df37a6c1efb732d32d1cdb37a3a6a799fca40a1fb61736b6daf01ed91d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_decode_memory</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a623138ad43ce7eae0346e4324ba1f14e</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, const unsigned char *in, size_t insize, LodePNGColorType colortype, unsigned bitdepth)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_decode32</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a67c3a7ee81836f6e5c9ba6487a1b38f5</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, const unsigned char *in, size_t insize)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_decode24</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ad7df6a47afc81f1854cf5a23471cf96b</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, const unsigned char *in, size_t insize)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_decode_file</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a6eec335315ecb6182292ebd37ef02b4a</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, const char *filename, LodePNGColorType colortype, unsigned bitdepth)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_decode32_file</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a3eca27e18f0e71cf1c21e1c1f5ff4aab</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_decode24_file</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>aadc99e713f6408d391dfa140d8e95b96</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_encode_memory</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ada7bc92db6e9f8906a1fc85caa0b17aa</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_encode32</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a75d7f3e4e388b74b7b5214c76c66382f</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_encode24</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a4100642d70071029967c16afd72193ff</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_encode_file</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a009ac38098765fcae32c9d91770b94df</anchor>
      <arglist>(const char *filename, const unsigned char *image, unsigned w, unsigned h, LodePNGColorType colortype, unsigned bitdepth)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_encode32_file</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a018a3bd975fb886cdf1f6f544f2882e4</anchor>
      <arglist>(const char *filename, const unsigned char *image, unsigned w, unsigned h)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_encode24_file</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a4f8f383c22ceb7c22b1cc7e774f0bad2</anchor>
      <arglist>(const char *filename, const unsigned char *image, unsigned w, unsigned h)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>lodepng_error_text</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ab56bbf4d0a24238ef2d6fe125705a8ce</anchor>
      <arglist>(unsigned code)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_decompress_settings_init</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ab752d2ce31fb7e6fe1a27b559d3097ad</anchor>
      <arglist>(LodePNGDecompressSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_compress_settings_init</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a6fbd123f5a5f3abbf7149ad3ffba9e57</anchor>
      <arglist>(LodePNGCompressSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_color_mode_init</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a66345d4cdab130c6cbd3166d7a0a5257</anchor>
      <arglist>(LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_color_mode_cleanup</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ab1c7709a984d5842ab314cf5d2dc2dcc</anchor>
      <arglist>(LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_color_mode_copy</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a7801819a161b96f65259680126e270f1</anchor>
      <arglist>(LodePNGColorMode *dest, const LodePNGColorMode *source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_palette_clear</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a2aa729ce82079627789a0f8961c82f5e</anchor>
      <arglist>(LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_palette_add</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a05bf6fac7afc9025bbcb9f5f9f1b0027</anchor>
      <arglist>(LodePNGColorMode *info, unsigned char r, unsigned char g, unsigned char b, unsigned char a)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_get_bpp</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a83344b5c8c5839ca42858dd3578220ef</anchor>
      <arglist>(const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_get_channels</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>abca559f31bf69eabc23c09a8a4c80b93</anchor>
      <arglist>(const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_is_greyscale_type</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ae0e6996e4aa9ac225f228b2253269127</anchor>
      <arglist>(const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_is_alpha_type</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>aa255d9a2e4054fc2888bf7670dac4107</anchor>
      <arglist>(const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_is_palette_type</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ad9b8eca971e9d01d55ced928b26a53c5</anchor>
      <arglist>(const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_has_palette_alpha</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a4e89e0d7e13e0f3c098c4cf326cc5014</anchor>
      <arglist>(const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_can_have_alpha</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a93f12a150968449f016fe93decc1e074</anchor>
      <arglist>(const LodePNGColorMode *info)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>lodepng_get_raw_size</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a5861bf2c5a7c8976ea2dd6d21e8d58bd</anchor>
      <arglist>(unsigned w, unsigned h, const LodePNGColorMode *color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_info_init</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ae50c1ddde2fa8004b46da433f3e20974</anchor>
      <arglist>(LodePNGInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_info_cleanup</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ad4b9dc33569e24062e077f5a69ead178</anchor>
      <arglist>(LodePNGInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_info_copy</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a14a4dc4c26e03acb5ab36880aacbd85a</anchor>
      <arglist>(LodePNGInfo *dest, const LodePNGInfo *source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_clear_text</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a533d58c161de45096b83c44bbaa95e93</anchor>
      <arglist>(LodePNGInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_add_text</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a10c9cfd9edf86fc8e21d5f69d81238d0</anchor>
      <arglist>(LodePNGInfo *info, const char *key, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_clear_itext</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>aea7d8c2bb2adaf028ec143c08a53f815</anchor>
      <arglist>(LodePNGInfo *info)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_add_itext</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>aad7cb0e06093d0111bd599a279360f98</anchor>
      <arglist>(LodePNGInfo *info, const char *key, const char *langtag, const char *transkey, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_convert</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>aac02808f6427a260a7603722b4d82294</anchor>
      <arglist>(unsigned char *out, const unsigned char *in, LodePNGColorMode *mode_out, LodePNGColorMode *mode_in, unsigned w, unsigned h)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_decoder_settings_init</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a9220280c647e2a90a9b05d20038f1c6d</anchor>
      <arglist>(LodePNGDecoderSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_encoder_settings_init</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a874763ad14a0c84d41d0819212407a5a</anchor>
      <arglist>(LodePNGEncoderSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_state_init</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ae3ee1eb944467fbbc1cf939328dd6a57</anchor>
      <arglist>(LodePNGState *state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_state_cleanup</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a74109bf9860e2eb4bfa872ab8cf0f000</anchor>
      <arglist>(LodePNGState *state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_state_copy</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a87514bea6f324553184e48794a0ec3fc</anchor>
      <arglist>(LodePNGState *dest, const LodePNGState *source)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_decode</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a70adabd588a9a27dcc9eb4322f6c3b3f</anchor>
      <arglist>(unsigned char **out, unsigned *w, unsigned *h, LodePNGState *state, const unsigned char *in, size_t insize)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_inspect</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a0bee70fa0a93ca4463b35a3ceb9910e3</anchor>
      <arglist>(unsigned *w, unsigned *h, LodePNGState *state, const unsigned char *in, size_t insize)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_encode</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a90e82b0ccc75cfb27ccc9756c8d96f07</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *image, unsigned w, unsigned h, LodePNGState *state)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_chunk_length</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ad52897a6aecee7dde053c468c6bedda2</anchor>
      <arglist>(const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_chunk_type</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a2ccd8bef4daad75002f72308a5cbd0dc</anchor>
      <arglist>(char type[5], const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>lodepng_chunk_type_equals</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a5153305d442f8332326ef332316b06be</anchor>
      <arglist>(const unsigned char *chunk, const char *type)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>lodepng_chunk_ancillary</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>aabe8616184aa2adaa2a74ad989e6fb41</anchor>
      <arglist>(const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>lodepng_chunk_private</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a2695e1f9d3dee3f82a89f47a6dc7c517</anchor>
      <arglist>(const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>lodepng_chunk_safetocopy</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a2e09963fb4b4eb4ee7789d40b9080250</anchor>
      <arglist>(const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char *</type>
      <name>lodepng_chunk_data</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ac3512c7d71014c5b6a868573e8ccb23f</anchor>
      <arglist>(unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned char *</type>
      <name>lodepng_chunk_data_const</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a18062ec4da645562be021ec5ce09c117</anchor>
      <arglist>(const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_chunk_check_crc</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a02091d970921c7b94c4e63821785f97a</anchor>
      <arglist>(const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lodepng_chunk_generate_crc</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a5ea8918bcdd67d62af9735faa5d03b1b</anchor>
      <arglist>(unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char *</type>
      <name>lodepng_chunk_next</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>adad919b6dd09fb56cf285b3b46efb2cb</anchor>
      <arglist>(unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>const unsigned char *</type>
      <name>lodepng_chunk_next_const</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a20eec77cd3ca77b9c55499846ea9595a</anchor>
      <arglist>(const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_chunk_append</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a865c89cf0456b876e3bd5698bc910336</anchor>
      <arglist>(unsigned char **out, size_t *outlength, const unsigned char *chunk)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_chunk_create</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a2659e18b691b087c3b8610f44d9be8b1</anchor>
      <arglist>(unsigned char **out, size_t *outlength, unsigned length, const char *type, const unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_crc32</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a1608496525479b21a6faeaa69285156f</anchor>
      <arglist>(const unsigned char *buf, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_inflate</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a9c2f61923ad2ce3d47354923ba6df62d</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_zlib_decompress</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>ae66b9c1eeb9c44572bd381a94485e157</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGDecompressSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_zlib_compress</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a72d4240c44c9ba1814dae814c7d80eb1</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGCompressSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_huffman_code_lengths</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a82c0c408213e5bbb4a8d0edbaeffc97f</anchor>
      <arglist>(unsigned *lengths, const unsigned *frequencies, size_t numcodes, unsigned maxbitlen)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_deflate</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a6f5f070e236aaf9b1809e34b467f3225</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const unsigned char *in, size_t insize, const LodePNGCompressSettings *settings)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_load_file</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>af0b16abca7a6a20ff4980e9f04374c90</anchor>
      <arglist>(unsigned char **out, size_t *outsize, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>lodepng_save_file</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a837bf136ff32ee3efed5df4105ccedf7</anchor>
      <arglist>(const unsigned char *buffer, size_t buffersize, const char *filename)</arglist>
    </member>
    <member kind="variable">
      <type>const LodePNGDecompressSettings</type>
      <name>lodepng_default_decompress_settings</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>aab7a41a03154aa8d9ef65f2d434641b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const LodePNGCompressSettings</type>
      <name>lodepng_default_compress_settings</name>
      <anchorfile>d2/ddf/lodepng_8h.html</anchorfile>
      <anchor>a0b5cf190f94f8f11ed5c0abb3504ad86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SimWindow.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d2/dc5/SimWindow_8cpp</filename>
    <includes id="d9/d43/SimWindow_8h" name="SimWindow.h" local="yes" imported="no">dart/gui/SimWindow.h</includes>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="da/db5/ConstraintSolver_8h" name="ConstraintSolver.h" local="yes" imported="no">dart/constraint/ConstraintSolver.h</includes>
    <includes id="d4/d58/CollisionDetector_8h" name="CollisionDetector.h" local="yes" imported="no">dart/collision/CollisionDetector.h</includes>
    <includes id="d7/de5/LoadGlut_8h" name="LoadGlut.h" local="yes" imported="no">dart/gui/LoadGlut.h</includes>
    <includes id="d7/d09/GLFuncs_8h" name="GLFuncs.h" local="yes" imported="no">dart/gui/GLFuncs.h</includes>
    <includes id="d7/d95/FileInfoWorld_8h" name="FileInfoWorld.h" local="yes" imported="no">dart/utils/FileInfoWorld.h</includes>
    <includes id="d1/d55/GraphWindow_8h" name="GraphWindow.h" local="yes" imported="no">dart/gui/GraphWindow.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>SimWindow.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d9/d43/SimWindow_8h</filename>
    <includes id="d6/d36/Win3D_8h" name="Win3D.h" local="yes" imported="no">dart/gui/Win3D.h</includes>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <class kind="class">dart::gui::SimWindow</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>SoftSimWindow.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d1/d9b/SoftSimWindow_8cpp</filename>
    <includes id="d0/dc0/SoftSimWindow_8h" name="SoftSimWindow.h" local="yes" imported="no">dart/gui/SoftSimWindow.h</includes>
    <includes id="d7/de5/LoadGlut_8h" name="LoadGlut.h" local="yes" imported="no">dart/gui/LoadGlut.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>SoftSimWindow.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d0/dc0/SoftSimWindow_8h</filename>
    <includes id="d9/d43/SimWindow_8h" name="SimWindow.h" local="yes" imported="no">dart/gui/SimWindow.h</includes>
    <class kind="class">dart::gui::SoftSimWindow</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Trackball.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>dd/d7f/Trackball_8cpp</filename>
    <includes id="da/d06/Trackball_8h" name="Trackball.h" local="yes" imported="no">dart/gui/Trackball.h</includes>
    <includes id="dc/de7/LoadOpengl_8h" name="LoadOpengl.h" local="yes" imported="no">dart/renderer/LoadOpengl.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Trackball.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>da/d06/Trackball_8h</filename>
    <class kind="class">dart::gui::Trackball</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Win2D.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d4/d12/Win2D_8cpp</filename>
    <includes id="d6/d2a/Win2D_8h" name="Win2D.h" local="yes" imported="no">dart/gui/Win2D.h</includes>
    <includes id="d7/de5/LoadGlut_8h" name="LoadGlut.h" local="yes" imported="no">dart/gui/LoadGlut.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Win2D.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d6/d2a/Win2D_8h</filename>
    <includes id="d6/daf/GlutWindow_8h" name="GlutWindow.h" local="yes" imported="no">dart/gui/GlutWindow.h</includes>
    <class kind="class">dart::gui::Win2D</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>Win3D.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d0/d46/Win3D_8cpp</filename>
    <includes id="d6/d36/Win3D_8h" name="Win3D.h" local="yes" imported="no">dart/gui/Win3D.h</includes>
    <includes id="d7/de5/LoadGlut_8h" name="LoadGlut.h" local="yes" imported="no">dart/gui/LoadGlut.h</includes>
    <includes id="df/d80/Jitter_8h" name="Jitter.h" local="yes" imported="no">dart/gui/Jitter.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
    <member kind="function">
      <type>void</type>
      <name>accFrustum</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a078416ecc6eaca1ef95264f1b20ddb19</anchor>
      <arglist>(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble nearPlane, GLdouble farPlane, GLdouble pixdx, GLdouble pixdy, GLdouble eyedx, GLdouble eyedy, GLdouble focus)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accPerspective</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a2c941c1d02febca8d5f9828e0eb7887d</anchor>
      <arglist>(GLdouble fovy, GLdouble aspect, GLdouble nearPlane, GLdouble farPlane, GLdouble pixdx, GLdouble pixdy, GLdouble eyedx, GLdouble eyedy, GLdouble focus)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Win3D.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>d6/d36/Win3D_8h</filename>
    <includes id="d9/db7/Deprecated_8h" name="Deprecated.h" local="yes" imported="no">dart/common/Deprecated.h</includes>
    <includes id="d6/daf/GlutWindow_8h" name="GlutWindow.h" local="yes" imported="no">dart/gui/GlutWindow.h</includes>
    <includes id="da/d06/Trackball_8h" name="Trackball.h" local="yes" imported="no">dart/gui/Trackball.h</includes>
    <class kind="class">dart::gui::Win3D</class>
    <namespace>dart</namespace>
    <namespace>dart::gui</namespace>
  </compound>
  <compound kind="file">
    <name>EulerIntegrator.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/integration/</path>
    <filename>d3/dc3/EulerIntegrator_8cpp</filename>
    <includes id="d2/d7d/EulerIntegrator_8h" name="EulerIntegrator.h" local="yes" imported="no">dart/integration/EulerIntegrator.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>EulerIntegrator.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/integration/</path>
    <filename>d2/d7d/EulerIntegrator_8h</filename>
    <includes id="d8/d97/Integrator_8h" name="Integrator.h" local="yes" imported="no">dart/integration/Integrator.h</includes>
    <class kind="class">dart::integration::EulerIntegrator</class>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>Integrator.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/integration/</path>
    <filename>d6/d08/Integrator_8cpp</filename>
    <includes id="d8/d97/Integrator_8h" name="Integrator.h" local="yes" imported="no">dart/integration/Integrator.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>Integrator.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/integration/</path>
    <filename>d8/d97/Integrator_8h</filename>
    <class kind="class">dart::integration::IntegrableSystem</class>
    <class kind="class">dart::integration::Integrator</class>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>RK4Integrator.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/integration/</path>
    <filename>dd/d3a/RK4Integrator_8cpp</filename>
    <includes id="d4/d8a/RK4Integrator_8h" name="RK4Integrator.h" local="yes" imported="no">dart/integration/RK4Integrator.h</includes>
    <includes id="d5/d55/MathTypes_8h" name="MathTypes.h" local="yes" imported="no">dart/math/MathTypes.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>RK4Integrator.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/integration/</path>
    <filename>d4/d8a/RK4Integrator_8h</filename>
    <includes id="d8/d97/Integrator_8h" name="Integrator.h" local="yes" imported="no">dart/integration/Integrator.h</includes>
    <class kind="class">dart::integration::RK4Integrator</class>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>SemiImplicitEulerIntegrator.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/integration/</path>
    <filename>d5/dd8/SemiImplicitEulerIntegrator_8cpp</filename>
    <includes id="da/db0/SemiImplicitEulerIntegrator_8h" name="SemiImplicitEulerIntegrator.h" local="yes" imported="no">dart/integration/SemiImplicitEulerIntegrator.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>SemiImplicitEulerIntegrator.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/integration/</path>
    <filename>da/db0/SemiImplicitEulerIntegrator_8h</filename>
    <includes id="d8/d97/Integrator_8h" name="Integrator.h" local="yes" imported="no">dart/integration/Integrator.h</includes>
    <class kind="class">dart::integration::SemiImplicitEulerIntegrator</class>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
  </compound>
  <compound kind="file">
    <name>common.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>dc/d54/common_8h</filename>
    <includes id="da/dd5/odeconfig_8h" name="odeconfig.h" local="yes" imported="no">dart/lcpsolver/odeconfig.h</includes>
    <includes id="da/d41/error_8h" name="error.h" local="yes" imported="no">dart/lcpsolver/error.h</includes>
    <class kind="struct">dJointFeedback</class>
    <member kind="define">
      <type>#define</type>
      <name>PURE_INLINE</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a2d763254996240e13aaec5162cd6b76a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>M_PI</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>ae71449b1cc6e6250b91f539153a7a0d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>M_SQRT1_2</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>acdbb2c2f9429f08916f03c8786d2d2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dIASSERT</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a7dba56807a1381b083ab3e0131294283</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dUASSERT</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a4416d515115bc5ba9049ce72bc0799b3</anchor>
      <arglist>(a, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dDEBUGMSG</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a0f8070373d7b8efee98e61e38f101540</anchor>
      <arglist>(msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dIVERIFY</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>aa2d14a2019dfd91129348e3a20fbb654</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dICHECK</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>af60f11a01658e1d6813590993ba5c04c</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dAASSERT</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a3c5f1df90821be8f5db7716ee69a8cf1</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dDOUBLE</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>aa036922b1299ba81a9e42631235f43c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dPAD</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a48db23bdd4db5c59bc365aa755a3b8ff</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REAL</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a0770da66a61096c0f88b79ac45cc523b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dRecip</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a8d68a516c6cf1719b4169ee9e8eba19f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dSqrt</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a20deff86a5d984882e52581b91c248c0</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dRecipSqrt</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a3afabe2db377f8fa3c488a2aadf6612a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dSin</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a11596e010e7437547f72f59d87637520</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dCos</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>ad9d2c208b6b83990e31ab868f23c8e93</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dFabs</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a9baa7f22fc020ac43e281c480ec743cb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dAtan2</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a4b9b464ba1ae1ae8292880006a0173fa</anchor>
      <arglist>(y, x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dFMod</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a78de938d4dacf2e47496fc9ef91bd7b6</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dFloor</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>ab6be7e9c0eec3fe0488a6b8381960a91</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dCeil</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>aae68287ec95d21cf5fc6f1b8b689286f</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dCopySign</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a9ebdf55068aed3d97ccba2910358084b</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dNextAfter</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>af5015d0b4c7fa75b941a4927ff8df85c</anchor>
      <arglist>(x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dIsNan</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a9a84eb6d8fac398dbe1b31c6b080e05e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>D_ALL_PARAM_NAMES</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>aa5d86ddd8fafae4c57f5740b443e49d4</anchor>
      <arglist>(start)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>D_ALL_PARAM_NAMES_X</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>aaa707161d8ddef708bee830b1c7b0674</anchor>
      <arglist>(start, x)</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dReal</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a973ec569e405922437be98473d2aa6f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>dTriIndex</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>aeb19e651cf6177612913ebda98f9a602</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>dReal</type>
      <name>dVector3</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a5096ea3ec8604e70924150084194e6a5</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="typedef">
      <type>dReal</type>
      <name>dVector4</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a2d352003389649fa4d9b52bd61db2bc9</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="typedef">
      <type>dReal</type>
      <name>dMatrix3</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a7df642a17fc01c939c1ecfb4604641fa</anchor>
      <arglist>[4 *3]</arglist>
    </member>
    <member kind="typedef">
      <type>dReal</type>
      <name>dMatrix4</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>abacc0b9dc96e0d17e27b0d65aad47a2c</anchor>
      <arglist>[4 *4]</arglist>
    </member>
    <member kind="typedef">
      <type>dReal</type>
      <name>dMatrix6</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>aea331bc373d9cd4a28fcd8c246617962</anchor>
      <arglist>[8 *6]</arglist>
    </member>
    <member kind="typedef">
      <type>dReal</type>
      <name>dQuaternion</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a738e05127b981cd16967d02eb9de11f5</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="typedef">
      <type>struct dxWorld *</type>
      <name>dWorldID</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>aa4479e9072683f90e0d0538d58705c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dxSpace *</type>
      <name>dSpaceID</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a3a73c3eaa32ee318ff50cc06cf72c847</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dxBody *</type>
      <name>dBodyID</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a5870d025ecb49f3ad9990100dc390b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dxGeom *</type>
      <name>dGeomID</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a9ab02797d3f6e2ed968e3ce5da5d7a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dxJoint *</type>
      <name>dJointID</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a08da8514973e5da93e78e6cff2725f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dxJointGroup *</type>
      <name>dJointGroupID</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a3db2a1f71425a6cb46ffbc047749e129</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dxWorldProcessThreadingManager *</type>
      <name>dWorldStepThreadingManagerID</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a1ae2f08622f510f431ad98848e488363</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dJointFeedback</type>
      <name>dJointFeedback</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>aeb511daca87fab5f07a235f23300d074</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>d_ERR_UNKNOWN</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a06fc87d81c62e9abb8790b6e5713c55baff3b7704d478868905c14b38249f7994</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>d_ERR_IASSERT</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a06fc87d81c62e9abb8790b6e5713c55ba400f64680832ca8ebc2704a224fcf095</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>d_ERR_UASSERT</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a06fc87d81c62e9abb8790b6e5713c55ba6accd1db4aadf63fd4b0120f81445c98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>d_ERR_LCP</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a06fc87d81c62e9abb8790b6e5713c55bad4f338102f03b3024c8c8a02a49315a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>dJointType</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypeNone</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597aa4cff67e3de038c6fe25060e7d563729</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypeBall</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597a1220316b0ab506d03c244d24d7f96bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypeHinge</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597add85713e0e42cfeb63cb99b1d43df56b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypeSlider</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597a65ca6fcf8e71979a8d1fd4d87b42c460</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypeContact</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597a7c22ea13cb5bafc85ae36580f00872e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypeUniversal</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597a7b5a079f8ec053ffc441b0d067a84a61</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypeHinge2</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597a8c624347d969d0bcdfe845bf799113fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypeFixed</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597ab5a807780d48a86de24a08589898e3c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypeNull</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597a770f2a659b59da7f4c9a085112df3ae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypeAMotor</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597adb005dac05a66c0a7896cee2fc99e172</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypeLMotor</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597a611ba78d8e9c55f0cc34eae9d159e8a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypePlane2D</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597a27983faf0a8f4ce9fb0e4e595d472c09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypePR</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597a9f0819f009970b4a094fd150221228b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypePU</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597aff4e559f846ab12790c0c29e19762d95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dJointTypePiston</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>afa2fa0e4fd7805e82407c0a3106e0597a415b89363fb49d91a8e7c301912097fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dParamsInGroup</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7ac48745dc58041e476045730017202f1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dParamGroup</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a16d61fe2b175c8da620096b997035c7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dAMotorUser</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5adec0ca9c7a56551558479410b7f1715f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>dAMotorEuler</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5ada3e9dfd44098d82206891fa7d868c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dGeomMoved</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a56f630539966a2724899dcfbbc2d1afa</anchor>
      <arglist>(dGeomID)</arglist>
    </member>
    <member kind="function">
      <type>dGeomID</type>
      <name>dGeomGetBodyNext</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a43470bf8991626db3175ffb6a25fdd99</anchor>
      <arglist>(dGeomID)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API const char *</type>
      <name>dGetConfiguration</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a96beff0e8fe8a51ccfa14c7d50255253</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API int</type>
      <name>dCheckConfiguration</name>
      <anchorfile>dc/d54/common_8h.html</anchorfile>
      <anchor>a89823c26e4f77ca1db2dbc4b6beade14</anchor>
      <arglist>(const char *token)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>error.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>dd/db1/error_8cpp</filename>
    <includes id="da/dd5/odeconfig_8h" name="odeconfig.h" local="yes" imported="no">dart/lcpsolver/odeconfig.h</includes>
    <includes id="da/d41/error_8h" name="error.h" local="yes" imported="no">dart/lcpsolver/error.h</includes>
    <member kind="function">
      <type>void</type>
      <name>dSetErrorHandler</name>
      <anchorfile>dd/db1/error_8cpp.html</anchorfile>
      <anchor>acb656dd8d417391b33da7e9698058ab0</anchor>
      <arglist>(dMessageFunction *fn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dSetDebugHandler</name>
      <anchorfile>dd/db1/error_8cpp.html</anchorfile>
      <anchor>a33d2c72558299fda7b2ddf8e6f687ccd</anchor>
      <arglist>(dMessageFunction *fn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dSetMessageHandler</name>
      <anchorfile>dd/db1/error_8cpp.html</anchorfile>
      <anchor>acef85e5273815d6dba40800c529e528d</anchor>
      <arglist>(dMessageFunction *fn)</arglist>
    </member>
    <member kind="function">
      <type>dMessageFunction *</type>
      <name>dGetErrorHandler</name>
      <anchorfile>dd/db1/error_8cpp.html</anchorfile>
      <anchor>ac85b04a44e877c4966512a393eb7310c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dMessageFunction *</type>
      <name>dGetDebugHandler</name>
      <anchorfile>dd/db1/error_8cpp.html</anchorfile>
      <anchor>a3ce685d3b7d04a4ce52d28c2773aa8b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dMessageFunction *</type>
      <name>dGetMessageHandler</name>
      <anchorfile>dd/db1/error_8cpp.html</anchorfile>
      <anchor>af87c7468faf749ce4beeaf0fd762f037</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printMessage</name>
      <anchorfile>dd/db1/error_8cpp.html</anchorfile>
      <anchor>afdf1bdf8c50e6abdd04d71ae3cba23dc</anchor>
      <arglist>(int num, const char *msg1, const char *msg2, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dError</name>
      <anchorfile>dd/db1/error_8cpp.html</anchorfile>
      <anchor>a272d253167aaedf308efe7dbe1ec0461</anchor>
      <arglist>(int num, const char *msg,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dDebug</name>
      <anchorfile>dd/db1/error_8cpp.html</anchorfile>
      <anchor>a0ce5ce3f8d43d74bad29c138fe07dda2</anchor>
      <arglist>(int num, const char *msg,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dMessage</name>
      <anchorfile>dd/db1/error_8cpp.html</anchorfile>
      <anchor>a5e90d8eb6ec81e72f49a80310a5a1191</anchor>
      <arglist>(int num, const char *msg,...)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static dMessageFunction *</type>
      <name>error_function</name>
      <anchorfile>dd/db1/error_8cpp.html</anchorfile>
      <anchor>a2af23e309f6e2699bd3efd828aeb3392</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static dMessageFunction *</type>
      <name>debug_function</name>
      <anchorfile>dd/db1/error_8cpp.html</anchorfile>
      <anchor>ae839ad6b9673ae300e48416a72baa37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static dMessageFunction *</type>
      <name>message_function</name>
      <anchorfile>dd/db1/error_8cpp.html</anchorfile>
      <anchor>a7cd4505b3db27d2db3b850497078c102</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>error.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>da/d41/error_8h</filename>
    <includes id="da/dd5/odeconfig_8h" name="odeconfig.h" local="yes" imported="no">dart/lcpsolver/odeconfig.h</includes>
    <member kind="typedef">
      <type>void</type>
      <name>dMessageFunction</name>
      <anchorfile>da/d41/error_8h.html</anchorfile>
      <anchor>a0c0ce9cb4f48118d0fea0b9bda6705ce</anchor>
      <arglist>(int errnum, const char *msg, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dSetErrorHandler</name>
      <anchorfile>da/d41/error_8h.html</anchorfile>
      <anchor>a3eb807e8012f5211bb74da6b5f108141</anchor>
      <arglist>(dMessageFunction *fn)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dSetDebugHandler</name>
      <anchorfile>da/d41/error_8h.html</anchorfile>
      <anchor>a21794b6d29291496b739a4dceeb62007</anchor>
      <arglist>(dMessageFunction *fn)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dSetMessageHandler</name>
      <anchorfile>da/d41/error_8h.html</anchorfile>
      <anchor>a2ad2144353d4e1f88dd40e1dc0890a30</anchor>
      <arglist>(dMessageFunction *fn)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API dMessageFunction *</type>
      <name>dGetErrorHandler</name>
      <anchorfile>da/d41/error_8h.html</anchorfile>
      <anchor>a81dad1af6d34cac1ef06540bce91427a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API dMessageFunction *</type>
      <name>dGetDebugHandler</name>
      <anchorfile>da/d41/error_8h.html</anchorfile>
      <anchor>ad71b43b73aebc0f37c2298d8cdd585f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API dMessageFunction *</type>
      <name>dGetMessageHandler</name>
      <anchorfile>da/d41/error_8h.html</anchorfile>
      <anchor>a16b727212e8cd37899846b2fda1837dc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dError</name>
      <anchorfile>da/d41/error_8h.html</anchorfile>
      <anchor>ad8b330627b1371adbd12d0b4c8b0a996</anchor>
      <arglist>(int num, const char *msg,...)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dDebug</name>
      <anchorfile>da/d41/error_8h.html</anchorfile>
      <anchor>aa20193c3156215629332d87c709e9def</anchor>
      <arglist>(int num, const char *msg,...)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dMessage</name>
      <anchorfile>da/d41/error_8h.html</anchorfile>
      <anchor>aa0a1f33cf5445295a01f2fd0415ad306</anchor>
      <arglist>(int num, const char *msg,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fastdot.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>d3/df0/fastdot_8cpp</filename>
    <includes id="dd/df4/matrix_8h" name="matrix.h" local="yes" imported="no">dart/lcpsolver/matrix.h</includes>
    <member kind="function">
      <type>dReal</type>
      <name>_dDot</name>
      <anchorfile>d3/df0/fastdot_8cpp.html</anchorfile>
      <anchor>a9383e149442f07aa49f7c85a50c0e8c3</anchor>
      <arglist>(const dReal *a, const dReal *b, int n)</arglist>
    </member>
    <member kind="function">
      <type>dReal</type>
      <name>dDot</name>
      <anchorfile>d3/df0/fastdot_8cpp.html</anchorfile>
      <anchor>a167aea02d2e61f14d2e08a2d15f9a093</anchor>
      <arglist>(const dReal *a, const dReal *b, int n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fastldlt.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>d9/d3d/fastldlt_8cpp</filename>
    <includes id="dd/df4/matrix_8h" name="matrix.h" local="yes" imported="no">dart/lcpsolver/matrix.h</includes>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>dSolveL1_1</name>
      <anchorfile>d9/d3d/fastldlt_8cpp.html</anchorfile>
      <anchor>a2d80f1fde2bd5f9fdb5b4b5476af21f1</anchor>
      <arglist>(const dReal *L, dReal *B, int n, int lskip1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>dSolveL1_2</name>
      <anchorfile>d9/d3d/fastldlt_8cpp.html</anchorfile>
      <anchor>a389dc8c02405a326b932ac5d9e30d503</anchor>
      <arglist>(const dReal *L, dReal *B, int n, int lskip1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dFactorLDLT</name>
      <anchorfile>d9/d3d/fastldlt_8cpp.html</anchorfile>
      <anchor>ab8061c5b20275fcc749ebd066ee2292c</anchor>
      <arglist>(dReal *A, dReal *d, int n, int nskip1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dFactorLDLT</name>
      <anchorfile>d9/d3d/fastldlt_8cpp.html</anchorfile>
      <anchor>a5482f5ba87af32692b1e662cca79ee70</anchor>
      <arglist>(dReal *A, dReal *d, int n, int nskip1)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fastlsolve.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>d0/dfb/fastlsolve_8cpp</filename>
    <includes id="dd/df4/matrix_8h" name="matrix.h" local="yes" imported="no">dart/lcpsolver/matrix.h</includes>
    <member kind="function">
      <type>void</type>
      <name>_dSolveL1</name>
      <anchorfile>d0/dfb/fastlsolve_8cpp.html</anchorfile>
      <anchor>a21f3dda48b5d50d09ec7dbc97be1a867</anchor>
      <arglist>(const dReal *L, dReal *B, int n, int lskip1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dSolveL1</name>
      <anchorfile>d0/dfb/fastlsolve_8cpp.html</anchorfile>
      <anchor>a678c1306ce31b0a7c17debde3f30dc15</anchor>
      <arglist>(const dReal *L, dReal *B, int n, int lskip1)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>fastltsolve.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>d4/d45/fastltsolve_8cpp</filename>
    <includes id="dd/df4/matrix_8h" name="matrix.h" local="yes" imported="no">dart/lcpsolver/matrix.h</includes>
    <member kind="function">
      <type>void</type>
      <name>_dSolveL1T</name>
      <anchorfile>d4/d45/fastltsolve_8cpp.html</anchorfile>
      <anchor>ad56b6d11fe56b6bc2177b6b5a95de2e1</anchor>
      <arglist>(const dReal *L, dReal *B, int n, int lskip1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dSolveL1T</name>
      <anchorfile>d4/d45/fastltsolve_8cpp.html</anchorfile>
      <anchor>aeffbc41179eb90012176d3b2e9bf49d9</anchor>
      <arglist>(const dReal *L, dReal *B, int n, int lskip1)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lcp.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>df/d8a/lcp_8cpp</filename>
    <includes id="da/dd5/odeconfig_8h" name="odeconfig.h" local="yes" imported="no">dart/lcpsolver/odeconfig.h</includes>
    <includes id="d8/df5/lcp_8h" name="lcp.h" local="yes" imported="no">dart/lcpsolver/lcp.h</includes>
    <includes id="dd/df4/matrix_8h" name="matrix.h" local="yes" imported="no">dart/lcpsolver/matrix.h</includes>
    <includes id="d4/d08/misc_8h" name="misc.h" local="yes" imported="no">dart/lcpsolver/misc.h</includes>
    <class kind="struct">dLCP</class>
    <member kind="define">
      <type>#define</type>
      <name>dLCP_FAST</name>
      <anchorfile>df/d8a/lcp_8cpp.html</anchorfile>
      <anchor>a6af264233150aee517da1fd85594a4ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROWPTRS</name>
      <anchorfile>df/d8a/lcp_8cpp.html</anchorfile>
      <anchor>afce8e5f4d4c25c05a0c748db0900d0d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ATYPE</name>
      <anchorfile>df/d8a/lcp_8cpp.html</anchorfile>
      <anchor>a924b06ed813775c6c8d7827f6e00a67f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AROW</name>
      <anchorfile>df/d8a/lcp_8cpp.html</anchorfile>
      <anchor>af7feb800ba319a71d57370d1590984f8</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUB_OPTIMIZATIONS</name>
      <anchorfile>df/d8a/lcp_8cpp.html</anchorfile>
      <anchor>ad150d46e772b5d2fa8dfe1aee8ef0b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>swapRowsAndCols</name>
      <anchorfile>df/d8a/lcp_8cpp.html</anchorfile>
      <anchor>abe8ecf7da74b1c15fd220dba3fde6fbe</anchor>
      <arglist>(ATYPE A, int n, int i1, int i2, int nskip, int do_fast_row_swaps)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>swapProblem</name>
      <anchorfile>df/d8a/lcp_8cpp.html</anchorfile>
      <anchor>adfa80dd071cf9db2aa94ba873a3b7b06</anchor>
      <arglist>(ATYPE A, dReal *x, dReal *b, dReal *w, dReal *lo, dReal *hi, int *p, bool *state, int *findex, int n, int i1, int i2, int nskip, int do_fast_row_swaps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dSolveLCP</name>
      <anchorfile>df/d8a/lcp_8cpp.html</anchorfile>
      <anchor>a77b428335c421ba0a213d31ea96afff6</anchor>
      <arglist>(int n, dReal *A, dReal *x, dReal *b, dReal *outer_w, int nub, dReal *lo, dReal *hi, int *findex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>dEstimateSolveLCPMemoryReq</name>
      <anchorfile>df/d8a/lcp_8cpp.html</anchorfile>
      <anchor>acbae00b50307c74a3e10f1243d95d9c0</anchor>
      <arglist>(int n, bool outer_w_avail)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API int</type>
      <name>dTestSolveLCP</name>
      <anchorfile>df/d8a/lcp_8cpp.html</anchorfile>
      <anchor>ad944c6df03fbbfdea992ed94884e610b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>lcp.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>d8/df5/lcp_8h</filename>
    <includes id="da/dd5/odeconfig_8h" name="odeconfig.h" local="yes" imported="no">dart/lcpsolver/odeconfig.h</includes>
    <includes id="dc/d54/common_8h" name="common.h" local="yes" imported="no">dart/lcpsolver/common.h</includes>
    <member kind="function">
      <type>void</type>
      <name>dSolveLCP</name>
      <anchorfile>d8/df5/lcp_8h.html</anchorfile>
      <anchor>aef9c4dc3b3e0b474ae06d37ead690d49</anchor>
      <arglist>(int n, dReal *A, dReal *x, dReal *b, dReal *w, int nub, dReal *lo, dReal *hi, int *findex)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>dEstimateSolveLCPMemoryReq</name>
      <anchorfile>d8/df5/lcp_8h.html</anchorfile>
      <anchor>acbae00b50307c74a3e10f1243d95d9c0</anchor>
      <arglist>(int n, bool outer_w_avail)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API int</type>
      <name>dTestSolveLCP</name>
      <anchorfile>d8/df5/lcp_8h.html</anchorfile>
      <anchor>ad944c6df03fbbfdea992ed94884e610b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Lemke.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>da/d13/Lemke_8cpp</filename>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d7/dde/Lemke_8h" name="Lemke.h" local="yes" imported="no">dart/lcpsolver/Lemke.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::lcpsolver</namespace>
    <member kind="define">
      <type>#define</type>
      <name>isnan</name>
      <anchorfile>da/d13/Lemke_8cpp.html</anchorfile>
      <anchor>a2e1baae9134e580910322362dc23290e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>isinf</name>
      <anchorfile>da/d13/Lemke_8cpp.html</anchorfile>
      <anchor>a2a266c767456556e5c0da234b602b18b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>isnan_f</name>
      <anchorfile>da/d13/Lemke_8cpp.html</anchorfile>
      <anchor>aaddfa6b583fd07db2fd34a7f04e9692a</anchor>
      <arglist>(float _x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>isnan_d</name>
      <anchorfile>da/d13/Lemke_8cpp.html</anchorfile>
      <anchor>a83a0204d8f41b39246e0048a01d73366</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>isnan_ld</name>
      <anchorfile>da/d13/Lemke_8cpp.html</anchorfile>
      <anchor>ad72364b131d59ba82b760e5f4b5549cc</anchor>
      <arglist>(long double _x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>isinf_f</name>
      <anchorfile>da/d13/Lemke_8cpp.html</anchorfile>
      <anchor>a9dea7c85ae05ea7a5abf49988f92fba8</anchor>
      <arglist>(float _x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>isinf_d</name>
      <anchorfile>da/d13/Lemke_8cpp.html</anchorfile>
      <anchor>a83883bfea2e76a67d826cdfe5fce62bc</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>isinf_ld</name>
      <anchorfile>da/d13/Lemke_8cpp.html</anchorfile>
      <anchor>a46c336f0304686018a573cad2d5f48b7</anchor>
      <arglist>(long double _x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Lemke</name>
      <anchorfile>d4/d05/namespacedart_1_1lcpsolver.html</anchorfile>
      <anchor>ab1b433bd881c42c773799c25053272bd</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_M, const Eigen::VectorXd &amp;_q, Eigen::VectorXd *_z)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validate</name>
      <anchorfile>d4/d05/namespacedart_1_1lcpsolver.html</anchorfile>
      <anchor>a9762b4ca0686aa114c73d7e8f951e6e1</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_M, const Eigen::VectorXd &amp;_z, const Eigen::VectorXd &amp;_q)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Lemke.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>d7/dde/Lemke_8h</filename>
    <namespace>dart</namespace>
    <namespace>dart::lcpsolver</namespace>
  </compound>
  <compound kind="file">
    <name>matrix.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>d5/d84/matrix_8cpp</filename>
    <includes id="dc/d54/common_8h" name="common.h" local="yes" imported="no">dart/lcpsolver/common.h</includes>
    <includes id="dd/df4/matrix_8h" name="matrix.h" local="yes" imported="no">dart/lcpsolver/matrix.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>EFFICIENT_ALIGNMENT</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>aad8c01c0844552239f009dc25f430208</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dEFFICIENT_SIZE</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a055beba0d5b881c82f06c73d0ab3cb33</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dEFFICIENT_PTR</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a7d97843b242c9b47c3b1a08c033f38c5</anchor>
      <arglist>(p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dOFFSET_EFFICIENTLY</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>adb5ce778d1595048b64a83f2c8f77861</anchor>
      <arglist>(p, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dALLOCA16</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a849f7976938a473ac530981fd5a5fd71</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALLOCA</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a8fadb30167c44c7d7266e796563820ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_GETA</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a662193bf1a21c471ae0d0f03769f6bb8</anchor>
      <arglist>(i, j)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GETA</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a989bb88df00e81f812793aab339a8196</anchor>
      <arglist>(i, j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dSetZero</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a4a663465b1c2f069b41eb2c3cae41102</anchor>
      <arglist>(dReal *a, size_t n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dSetValue</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>af072d2567a189c476a4cc89e12a6b87d</anchor>
      <arglist>(dReal *a, size_t n, dReal value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dMultiply0</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a63d752429d1017bc41fcc9f8301eb824</anchor>
      <arglist>(dReal *A, const dReal *B, const dReal *C, int p, int q, int r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dMultiply1</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a52a8c12898824f8d238d1027dca74ff3</anchor>
      <arglist>(dReal *A, const dReal *B, const dReal *C, int p, int q, int r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dMultiply2</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>af09d7072414c33ddeb00dd4f1b68682b</anchor>
      <arglist>(dReal *A, const dReal *B, const dReal *C, int p, int q, int r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_dFactorCholesky</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a15b1ad8db3b6354feadef169aaa01ccc</anchor>
      <arglist>(dReal *A, int n, void *tmpbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dSolveCholesky</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>abd343f58f5ecac941e85a99f36974a7b</anchor>
      <arglist>(const dReal *L, dReal *b, int n, void *tmpbuf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_dInvertPDMatrix</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a690161e1e4fd7db2491390efa16cdb42</anchor>
      <arglist>(const dReal *A, dReal *Ainv, int n, void *tmpbuf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_dIsPositiveDefinite</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a428b9797e4e55c3b7896f52e5a2fdd87</anchor>
      <arglist>(const dReal *A, int n, void *tmpbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dVectorScale</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>ac6764ef6053f9781e9f987164c826baa</anchor>
      <arglist>(dReal *a, const dReal *d, int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dSolveLDLT</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>aacf50c130f37a00c24873704fecee30f</anchor>
      <arglist>(const dReal *L, const dReal *d, dReal *b, int n, int nskip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dLDLTAddTL</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a8d4b12f7801bd70fa5e1fb003d87a9f7</anchor>
      <arglist>(dReal *L, dReal *d, const dReal *a, int n, int nskip, void *tmpbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dLDLTRemove</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>aa7dfb65596452f2c27368f5221b1115f</anchor>
      <arglist>(dReal **A, const int *p, dReal *L, dReal *d, int n1, int n2, int r, int nskip, void *tmpbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dRemoveRowCol</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a93b3012fcb78f768f2f0c3604c71718f</anchor>
      <arglist>(dReal *A, int n, int nskip, int r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dSetZero</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>acd978ea0b11a256614a91cd568246f9c</anchor>
      <arglist>(dReal *a, int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dSetValue</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>add067c18d3224aab698a933498ec7a4f</anchor>
      <arglist>(dReal *a, int n, dReal value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dMultiply0</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a78506c02dfe789fec581018876159424</anchor>
      <arglist>(dReal *A, const dReal *B, const dReal *C, int p, int q, int r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dMultiply1</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>abeda2497db2a8231839ffdc15c4597bf</anchor>
      <arglist>(dReal *A, const dReal *B, const dReal *C, int p, int q, int r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dMultiply2</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a842d675cc97adfdaedb1f956c69f005c</anchor>
      <arglist>(dReal *A, const dReal *B, const dReal *C, int p, int q, int r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dFactorCholesky</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a14d8fb38ebed2ba9c20348335f354009</anchor>
      <arglist>(dReal *A, int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dSolveCholesky</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>ad66c59cfddda3da7862f023257f68a81</anchor>
      <arglist>(const dReal *L, dReal *b, int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dInvertPDMatrix</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>af9fdc958f533cb3558154348bde88b64</anchor>
      <arglist>(const dReal *A, dReal *Ainv, int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dIsPositiveDefinite</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>ac242d385390aa615e8ee9eee68418cd0</anchor>
      <arglist>(const dReal *A, int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dVectorScale</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a0dca740b9acc4e2fe8a4a2f59c8a3dd9</anchor>
      <arglist>(dReal *a, const dReal *d, int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dSolveLDLT</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a2564807150e993368a8cca92580bce67</anchor>
      <arglist>(const dReal *L, const dReal *d, dReal *b, int n, int nskip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dLDLTAddTL</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a9a0237c6f6a2cb44fbdcd05fb88c95a4</anchor>
      <arglist>(dReal *L, dReal *d, const dReal *a, int n, int nskip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dLDLTRemove</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a168ae0ee95130aa375e9f64582b8a09f</anchor>
      <arglist>(dReal **A, const int *p, dReal *L, dReal *d, int n1, int n2, int r, int nskip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dRemoveRowCol</name>
      <anchorfile>d5/d84/matrix_8cpp.html</anchorfile>
      <anchor>a394534ef2da5827bc464f8e189edd9e5</anchor>
      <arglist>(dReal *A, int n, int nskip, int r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>matrix.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>dd/df4/matrix_8h</filename>
    <includes id="dc/d54/common_8h" name="common.h" local="yes" imported="no">dart/lcpsolver/common.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>dSetZero</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a0a7f1efe28ad003d34657dab5bf04b3d</anchor>
      <arglist>(a, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dSetValue</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a2d8ce74721daf1c266ac1648a869b420</anchor>
      <arglist>(a, n, value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dDot</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a8de3479c877bfe89bbe9fe91f27e750e</anchor>
      <arglist>(a, b, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dMultiply0</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a44b996c3b2b29b948ab3c18f826facb5</anchor>
      <arglist>(A, B, C, p, q, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dMultiply1</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a37eaec2d4f2305e714a640e847d1a744</anchor>
      <arglist>(A, B, C, p, q, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dMultiply2</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>abb69f0a2cc566e4b2a178b90dcda6468</anchor>
      <arglist>(A, B, C, p, q, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dFactorCholesky</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>ab43734b83ace50d7ef46e301a09658ab</anchor>
      <arglist>(A, n, tmpbuf)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dSolveCholesky</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a789913b4b2b26d6297b19b32d39d970c</anchor>
      <arglist>(L, b, n, tmpbuf)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dInvertPDMatrix</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>ab0085c8a682bab26290891f7a387a5a7</anchor>
      <arglist>(A, Ainv, n, tmpbuf)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dIsPositiveDefinite</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>ac2c8d609ff7bb68b62d705d53ce3d139</anchor>
      <arglist>(A, n, tmpbuf)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dFactorLDLT</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>acfb5e8645415c8319b9a551962e17f2c</anchor>
      <arglist>(A, d, n, nskip)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dSolveL1</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a5957b632071e41f2269e44a4e9ff9547</anchor>
      <arglist>(L, b, n, nskip)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dSolveL1T</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a99bd71aa2ab149fb53c737ef13622c97</anchor>
      <arglist>(L, b, n, nskip)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dVectorScale</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>ae63ea6b7ae615bcc8bed52294622b1ea</anchor>
      <arglist>(a, d, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dSolveLDLT</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a08e04002c2759546e297f1f9913b8d82</anchor>
      <arglist>(L, d, b, n, nskip)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dLDLTAddTL</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>ad4a41058fffb63646c797a065881cc57</anchor>
      <arglist>(L, d, a, n, nskip, tmpbuf)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dLDLTRemove</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>afec8d55fd90d61c206db791518858115</anchor>
      <arglist>(A, p, L, d, n1, n2, r, nskip, tmpbuf)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dRemoveRowCol</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a1a32d3cb5e94d83de0ca92937368c2da</anchor>
      <arglist>(A, n, nskip, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dEstimateFactorCholeskyTmpbufSize</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>aa1bc6854188ba14c2212e8cd45531c7e</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dEstimateSolveCholeskyTmpbufSize</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a417f8a235d37085e72d7be41cd38f556</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dEstimateInvertPDMatrixTmpbufSize</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>aa18e5a6af020a7ed31c8b0d02f73ec0d</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dEstimateIsPositiveDefiniteTmpbufSize</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a53847c11bb64396fed0103d99b2e43f7</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dEstimateLDLTAddTLTmpbufSize</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>aced0649853a48ffac571d1a4620730a4</anchor>
      <arglist>(nskip)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dEstimateLDLTRemoveTmpbufSize</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>af013fa61dfd4748403c1ea720455e04b</anchor>
      <arglist>(n2, nskip)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dSetZero</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a8b48847fbc6ae06110ca69471a9acb41</anchor>
      <arglist>(dReal *a, int n)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dSetValue</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a37c27609a049bfaf4fcec269eca52bc7</anchor>
      <arglist>(dReal *a, int n, dReal value)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API dReal</type>
      <name>dDot</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a07677c11b058679299959eca0175bdca</anchor>
      <arglist>(const dReal *a, const dReal *b, int n)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dMultiply0</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a6b70f2b263ac34fcc5001b0f9863559e</anchor>
      <arglist>(dReal *A, const dReal *B, const dReal *C, int p, int q, int r)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dMultiply1</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a52bddda3b23fe516e574ac8f17e7f1c3</anchor>
      <arglist>(dReal *A, const dReal *B, const dReal *C, int p, int q, int r)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dMultiply2</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a4668b2c38390e3ba6abf056efbdc1ad7</anchor>
      <arglist>(dReal *A, const dReal *B, const dReal *C, int p, int q, int r)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API int</type>
      <name>dFactorCholesky</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a424b370563c3daf7bf40a5a837dbb39b</anchor>
      <arglist>(dReal *A, int n)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dSolveCholesky</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>aa4c3f814dddc6d4478c187972daf43b6</anchor>
      <arglist>(const dReal *L, dReal *b, int n)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API int</type>
      <name>dInvertPDMatrix</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a726f3b4cf353674b69b35119e845310f</anchor>
      <arglist>(const dReal *A, dReal *Ainv, int n)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API int</type>
      <name>dIsPositiveDefinite</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>ab79e9009d0057fafe267ae8414b37ec0</anchor>
      <arglist>(const dReal *A, int n)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dFactorLDLT</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>aaa52002d04ca62b89c2015b8888f43c2</anchor>
      <arglist>(dReal *A, dReal *d, int n, int nskip)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dSolveL1</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a1ff2521159345cd6b918822d3dae1084</anchor>
      <arglist>(const dReal *L, dReal *b, int n, int nskip)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dSolveL1T</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>aea9a561a0de13d08c4bc16ef036dcd03</anchor>
      <arglist>(const dReal *L, dReal *b, int n, int nskip)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dVectorScale</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a8a8ebc2cb3c108886a550686ba7bbecb</anchor>
      <arglist>(dReal *a, const dReal *d, int n)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dSolveLDLT</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a8d8c9c1c760d62f5691b5cef2a78af99</anchor>
      <arglist>(const dReal *L, const dReal *d, dReal *b, int n, int nskip)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dLDLTAddTL</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>add0e90cbd14b48ea6379963f95e2ca98</anchor>
      <arglist>(dReal *L, dReal *d, const dReal *a, int n, int nskip)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dLDLTRemove</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a7ea99899c85fa7b0b1df472d1e23407b</anchor>
      <arglist>(dReal **A, const int *p, dReal *L, dReal *d, int n1, int n2, int r, int nskip)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dRemoveRowCol</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>ab893db8fd3c204c6794d7722374381e5</anchor>
      <arglist>(dReal *A, int n, int nskip, int r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dSetZero</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a4a663465b1c2f069b41eb2c3cae41102</anchor>
      <arglist>(dReal *a, size_t n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dSetValue</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>af072d2567a189c476a4cc89e12a6b87d</anchor>
      <arglist>(dReal *a, size_t n, dReal value)</arglist>
    </member>
    <member kind="function">
      <type>dReal</type>
      <name>_dDot</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a9383e149442f07aa49f7c85a50c0e8c3</anchor>
      <arglist>(const dReal *a, const dReal *b, int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dMultiply0</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a63d752429d1017bc41fcc9f8301eb824</anchor>
      <arglist>(dReal *A, const dReal *B, const dReal *C, int p, int q, int r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dMultiply1</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a52a8c12898824f8d238d1027dca74ff3</anchor>
      <arglist>(dReal *A, const dReal *B, const dReal *C, int p, int q, int r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dMultiply2</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>af09d7072414c33ddeb00dd4f1b68682b</anchor>
      <arglist>(dReal *A, const dReal *B, const dReal *C, int p, int q, int r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_dFactorCholesky</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a15b1ad8db3b6354feadef169aaa01ccc</anchor>
      <arglist>(dReal *A, int n, void *tmpbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dSolveCholesky</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>abd343f58f5ecac941e85a99f36974a7b</anchor>
      <arglist>(const dReal *L, dReal *b, int n, void *tmpbuf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_dInvertPDMatrix</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a690161e1e4fd7db2491390efa16cdb42</anchor>
      <arglist>(const dReal *A, dReal *Ainv, int n, void *tmpbuf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_dIsPositiveDefinite</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a428b9797e4e55c3b7896f52e5a2fdd87</anchor>
      <arglist>(const dReal *A, int n, void *tmpbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dFactorLDLT</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>ad09acfbe10cd191ca24fef82f7741540</anchor>
      <arglist>(dReal *A, dReal *d, int n, int nskip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dSolveL1</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a1b0d10e68939b7d3e15e892f8defbdf7</anchor>
      <arglist>(const dReal *L, dReal *b, int n, int nskip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dSolveL1T</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>aec651649c25eb8e2bd45af8c6f5333f3</anchor>
      <arglist>(const dReal *L, dReal *b, int n, int nskip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dVectorScale</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>ac6764ef6053f9781e9f987164c826baa</anchor>
      <arglist>(dReal *a, const dReal *d, int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dSolveLDLT</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>aacf50c130f37a00c24873704fecee30f</anchor>
      <arglist>(const dReal *L, const dReal *d, dReal *b, int n, int nskip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dLDLTAddTL</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a8d4b12f7801bd70fa5e1fb003d87a9f7</anchor>
      <arglist>(dReal *L, dReal *d, const dReal *a, int n, int nskip, void *tmpbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dLDLTRemove</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>aa7dfb65596452f2c27368f5221b1115f</anchor>
      <arglist>(dReal **A, const int *p, dReal *L, dReal *d, int n1, int n2, int r, int nskip, void *tmpbuf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_dRemoveRowCol</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a93b3012fcb78f768f2f0c3604c71718f</anchor>
      <arglist>(dReal *A, int n, int nskip, int r)</arglist>
    </member>
    <member kind="function">
      <type>PURE_INLINE size_t</type>
      <name>_dEstimateFactorCholeskyTmpbufSize</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>aa2decd3e949493b6833858b79b88d500</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>PURE_INLINE size_t</type>
      <name>_dEstimateSolveCholeskyTmpbufSize</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a2e853a7a1e6ccaf0e9658adaab20b324</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>PURE_INLINE size_t</type>
      <name>_dEstimateInvertPDMatrixTmpbufSize</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>ae256b17161d59921d3a38dce5894eb73</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>PURE_INLINE size_t</type>
      <name>_dEstimateIsPositiveDefiniteTmpbufSize</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>ae1f04ef04ec78790d70b9a6f004a9c38</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>PURE_INLINE size_t</type>
      <name>_dEstimateLDLTAddTLTmpbufSize</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a74b06a79504db667b26093b2601900a4</anchor>
      <arglist>(int nskip)</arglist>
    </member>
    <member kind="function">
      <type>PURE_INLINE size_t</type>
      <name>_dEstimateLDLTRemoveTmpbufSize</name>
      <anchorfile>dd/df4/matrix_8h.html</anchorfile>
      <anchor>a1586cc6be856d2ec06b8d50bc23a210d</anchor>
      <arglist>(int n2, int nskip)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>misc.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>d7/d5f/misc_8cpp</filename>
    <includes id="da/dd5/odeconfig_8h" name="odeconfig.h" local="yes" imported="no">dart/lcpsolver/odeconfig.h</includes>
    <includes id="d4/d08/misc_8h" name="misc.h" local="yes" imported="no">dart/lcpsolver/misc.h</includes>
    <includes id="dd/df4/matrix_8h" name="matrix.h" local="yes" imported="no">dart/lcpsolver/matrix.h</includes>
    <member kind="function">
      <type>unsigned long</type>
      <name>dRand</name>
      <anchorfile>d7/d5f/misc_8cpp.html</anchorfile>
      <anchor>ab12962e05e6430f4d61a8d4304a7f533</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned long</type>
      <name>dRandGetSeed</name>
      <anchorfile>d7/d5f/misc_8cpp.html</anchorfile>
      <anchor>a42c9bdc5bc28e650ddff9b0d13246c31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dRandSetSeed</name>
      <anchorfile>d7/d5f/misc_8cpp.html</anchorfile>
      <anchor>aa4c173c0117b4407b797140cfbf81353</anchor>
      <arglist>(unsigned long s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dTestRand</name>
      <anchorfile>d7/d5f/misc_8cpp.html</anchorfile>
      <anchor>a99653257340e4e1520653a475d4e52ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dRandInt</name>
      <anchorfile>d7/d5f/misc_8cpp.html</anchorfile>
      <anchor>a6c509fb4e134251f819453542517f345</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>dReal</type>
      <name>dRandReal</name>
      <anchorfile>d7/d5f/misc_8cpp.html</anchorfile>
      <anchor>a6ce48054965eab1eb27eb99c669618a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dPrintMatrix</name>
      <anchorfile>d7/d5f/misc_8cpp.html</anchorfile>
      <anchor>a4d55fa1bb0ffa9a19dc53b6bc2a1d00e</anchor>
      <arglist>(const dReal *A, int n, int m, char *fmt, FILE *f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dMakeRandomVector</name>
      <anchorfile>d7/d5f/misc_8cpp.html</anchorfile>
      <anchor>af009c7b7e59be0c05ccb9e2415591847</anchor>
      <arglist>(dReal *A, int n, dReal range)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dMakeRandomMatrix</name>
      <anchorfile>d7/d5f/misc_8cpp.html</anchorfile>
      <anchor>a1af15a3d6cdfafcd00d1d4c796d33651</anchor>
      <arglist>(dReal *A, int n, int m, dReal range)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dClearUpperTriangle</name>
      <anchorfile>d7/d5f/misc_8cpp.html</anchorfile>
      <anchor>a88a704773380f9e68e225f179c267d0d</anchor>
      <arglist>(dReal *A, int n)</arglist>
    </member>
    <member kind="function">
      <type>dReal</type>
      <name>dMaxDifference</name>
      <anchorfile>d7/d5f/misc_8cpp.html</anchorfile>
      <anchor>acd0caf6538de1390b18916a55ca51f66</anchor>
      <arglist>(const dReal *A, const dReal *B, int n, int m)</arglist>
    </member>
    <member kind="function">
      <type>dReal</type>
      <name>dMaxDifferenceLowerTriangle</name>
      <anchorfile>d7/d5f/misc_8cpp.html</anchorfile>
      <anchor>a6b54c2fb1ef1b99b475604e4f9198b00</anchor>
      <arglist>(const dReal *A, const dReal *B, int n)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static unsigned long</type>
      <name>seed</name>
      <anchorfile>d7/d5f/misc_8cpp.html</anchorfile>
      <anchor>a3344d180ef0d8b232915ee92d9e43b12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>misc.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>d4/d08/misc_8h</filename>
    <includes id="dc/d54/common_8h" name="common.h" local="yes" imported="no">dart/lcpsolver/common.h</includes>
    <member kind="function">
      <type>ODE_API int</type>
      <name>dTestRand</name>
      <anchorfile>d4/d08/misc_8h.html</anchorfile>
      <anchor>adf75cd82dd2111edcd6adcf219ec1978</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API unsigned long</type>
      <name>dRand</name>
      <anchorfile>d4/d08/misc_8h.html</anchorfile>
      <anchor>a498d4cb7dc0fd0253898a63c0a707dfa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API unsigned long</type>
      <name>dRandGetSeed</name>
      <anchorfile>d4/d08/misc_8h.html</anchorfile>
      <anchor>a387f4c40265912a1edff05a470e71bcf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dRandSetSeed</name>
      <anchorfile>d4/d08/misc_8h.html</anchorfile>
      <anchor>a3755efe03d43f651592abfeb233c5d79</anchor>
      <arglist>(unsigned long s)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API int</type>
      <name>dRandInt</name>
      <anchorfile>d4/d08/misc_8h.html</anchorfile>
      <anchor>a83726f03eecb8a05fd3e07624730320c</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API dReal</type>
      <name>dRandReal</name>
      <anchorfile>d4/d08/misc_8h.html</anchorfile>
      <anchor>a0fbeccabc14b8366c3d6dab66432ef60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dPrintMatrix</name>
      <anchorfile>d4/d08/misc_8h.html</anchorfile>
      <anchor>ae5b3b57ffa2c6cb4f39030038c71ee27</anchor>
      <arglist>(const dReal *A, int n, int m, char *fmt, FILE *f)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dMakeRandomVector</name>
      <anchorfile>d4/d08/misc_8h.html</anchorfile>
      <anchor>aeaa51c08580f407f38b1aab7bcfbe921</anchor>
      <arglist>(dReal *A, int n, dReal range)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dMakeRandomMatrix</name>
      <anchorfile>d4/d08/misc_8h.html</anchorfile>
      <anchor>a0a9c4e3d86180ebce75317dd3dda4ad7</anchor>
      <arglist>(dReal *A, int n, int m, dReal range)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API void</type>
      <name>dClearUpperTriangle</name>
      <anchorfile>d4/d08/misc_8h.html</anchorfile>
      <anchor>aa7566468d3cdacfe0b950d2db23463e7</anchor>
      <arglist>(dReal *A, int n)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API dReal</type>
      <name>dMaxDifference</name>
      <anchorfile>d4/d08/misc_8h.html</anchorfile>
      <anchor>a93cdbd6b3a827a76588c008ed03fdae9</anchor>
      <arglist>(const dReal *A, const dReal *B, int n, int m)</arglist>
    </member>
    <member kind="function">
      <type>ODE_API dReal</type>
      <name>dMaxDifferenceLowerTriangle</name>
      <anchorfile>d4/d08/misc_8h.html</anchorfile>
      <anchor>a1d55c82aa8cbe85e52f64b65f2cdcabd</anchor>
      <arglist>(const dReal *A, const dReal *B, int n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>odeconfig.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>da/dd5/odeconfig_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>ODE_API</name>
      <anchorfile>da/dd5/odeconfig_8h.html</anchorfile>
      <anchor>aa8eb0c361c9f9028200e6e496b809229</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ODE_API_DEPRECATED</name>
      <anchorfile>da/dd5/odeconfig_8h.html</anchorfile>
      <anchor>ad1082fc83530c93a07e96ad395db0683</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>dInfinity</name>
      <anchorfile>da/dd5/odeconfig_8h.html</anchorfile>
      <anchor>aea12cb583fadeeb9ebb21de90eb2057f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>int32</name>
      <anchorfile>da/dd5/odeconfig_8h.html</anchorfile>
      <anchor>a56f1a81c92849566ae864511088eb7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>uint32</name>
      <anchorfile>da/dd5/odeconfig_8h.html</anchorfile>
      <anchor>a1134b580f8da4de94ca6b1de4d37975e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short</type>
      <name>int16</name>
      <anchorfile>da/dd5/odeconfig_8h.html</anchorfile>
      <anchor>a4355d16fcf9f644c9ac84293f0b1801f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short</type>
      <name>uint16</name>
      <anchorfile>da/dd5/odeconfig_8h.html</anchorfile>
      <anchor>a05f6b0ae8f6a6e135b0e290c25fe0e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>signed char</type>
      <name>int8</name>
      <anchorfile>da/dd5/odeconfig_8h.html</anchorfile>
      <anchor>a1b956fe1df85f3c132b21edb4e116458</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>uint8</name>
      <anchorfile>da/dd5/odeconfig_8h.html</anchorfile>
      <anchor>adde6aaee8457bee49c2a92621fe22b79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ODELCPSolver.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>da/d53/ODELCPSolver_8cpp</filename>
    <includes id="d0/d1a/ODELCPSolver_8h" name="ODELCPSolver.h" local="yes" imported="no">dart/lcpsolver/ODELCPSolver.h</includes>
    <includes id="d7/dde/Lemke_8h" name="Lemke.h" local="yes" imported="no">dart/lcpsolver/Lemke.h</includes>
    <includes id="d8/df5/lcp_8h" name="lcp.h" local="yes" imported="no">dart/lcpsolver/lcp.h</includes>
    <includes id="d4/d08/misc_8h" name="misc.h" local="yes" imported="no">dart/lcpsolver/misc.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::lcpsolver</namespace>
  </compound>
  <compound kind="file">
    <name>ODELCPSolver.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>d0/d1a/ODELCPSolver_8h</filename>
    <class kind="class">dart::lcpsolver::ODELCPSolver</class>
    <namespace>dart</namespace>
    <namespace>dart::lcpsolver</namespace>
  </compound>
  <compound kind="file">
    <name>Geometry.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/math/</path>
    <filename>d7/def/Geometry_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <class kind="struct">dart::math::HullAngle</class>
    <namespace>dart</namespace>
    <namespace>dart::math</namespace>
    <member kind="define">
      <type>#define</type>
      <name>EPSILON_EXPMAP_THETA</name>
      <anchorfile>d7/def/Geometry_8cpp.html</anchorfile>
      <anchor>a7d9d043fb287129f0d6c5087b93a3228</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Eigen::Quaterniond</type>
      <name>expToQuat</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af7d1a1edd8644935ddf7d40e7c39139a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>quatToExp</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a141d99b2112e9037173869b04db2f2f1</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerXYX</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a2cc210efedf46185991c7d7a48041302</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerXYZ</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a53e69e887f81c59d26779a25fbe6ea7d</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerZYX</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad2b40ea6672026a84497098ac5cb1397</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerXZY</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aba375c47a8f4c23887c774f919414394</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerYZX</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac6b7603b1f1331d7325d4f839d5b9f94</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerZXY</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a300bb57a417ec13fea861862d5fc515c</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerYXZ</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ab1e6567ea0da8425074d0aeaf33eccf4</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>quatDeriv</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abb994d2ee6ea73bb6cbe905cd1315b84</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q, int _el)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>quatSecondDeriv</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abe977fd6ccd95a05f68c80d4b33cdae7</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q, int _el1, int _el2)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>rotatePoint</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7ea25a547fac6b565c3648d4ff166015</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q, const Eigen::Vector3d &amp;_pt)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>rotatePoint</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abe4adfd592c2583df0a781858b2fb95e</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q, double _x, double _y, double _z)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapRot</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af297b066593714b7d7006d531c2328ac</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a412fc66129eb82f75db6583bdf92bee0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapJacDot</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a522cc1f979c523b9cc941314ef12617a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap, const Eigen::Vector3d &amp;_qdot)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapJacDeriv</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a34115fbab9140a00f3b487988af277a2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap, int _qi)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>logMap</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a91021e58843804e7ca334848ff9f0323</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>logMap</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ace4da4be316f9118106f4aacfe8f64f9</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae84a491564ace03bafae3c722aa34625</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_V)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix6d</type>
      <name>getAdTMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a19a4d72416c58021ea930b2abfd43bd8</anchor>
      <arglist>(const Eigen::Isometry3d &amp;T)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdR</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a94ee36ccaecf43cd56f76436a162c739</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_V)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdTAngular</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad93b6aeae970e23802f8414fd9e6a04a</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector3d &amp;_w)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdTLinear</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a74e4177978a837724e6e7a0cb245dbf2</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdInvT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9101a1475e595473ff3f10a4327c8298</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_V)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdInvRLinear</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7e6d60f0c41f72b7882c0d5284dad923</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>ad</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adff5879e39b18ee5960c5a08d5df2e4d</anchor>
      <arglist>(const Eigen::Vector6d &amp;_X, const Eigen::Vector6d &amp;_Y)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dAdT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adeb4234a66c0ed1421dcd29f93019ec6</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_F)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dAdInvT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9854a5049755e2a650b3991b6d3f5e7a</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_F)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dAdInvR</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af711369d6350070cfa4c77755a2ab7cd</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_F)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXYXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a20617208f9bbe866879599ec6dd9f786</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXYZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a1b38698e6201d7b0e4aaf2e6b911ca11</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXZXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a802f1b38213ae193e12a240bc62a9185</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXZYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a96f028b28d5e6a7b8cc5655b68a06742</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYXYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a39ba5e09917d711d74c2f8d0ec0479a7</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYXZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>acef3b0a3efc7e66ec7d15ca3bdd32fb2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYZXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa10f381ffdb7c81e65a9b774a745718e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYZYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae44c2d83cb238e105321c14fc7055ecf</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZXYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a3449f3b223c59177be45caff72055d9e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZYXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7666b356f04c3c164d5163941c9163d3</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZXZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a264c003134882cd1dfbd24b555e73ee3</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZYZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a33ad7519de3e0ea3ff49070cb670a191</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>expMap</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a941645eb9bd1432d03c8c1c895f61f22</anchor>
      <arglist>(const Eigen::Vector6d &amp;_S)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>expAngular</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a81ae793a0afa85624599fdde127531f2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_s)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dad</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a04344c560b26fbaa456dbb0ed4a09c21</anchor>
      <arglist>(const Eigen::Vector6d &amp;_s, const Eigen::Vector6d &amp;_t)</arglist>
    </member>
    <member kind="function">
      <type>Inertia</type>
      <name>transformInertia</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a729c89efdeb2557f1106bf89275e5b2a</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Inertia &amp;_I)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>parallelAxisTheorem</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a81735893e4f6d1cf950a0aa181db367e</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_original, const Eigen::Vector3d &amp;_comShift, double _mass)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyRotation</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a251a976dbb610f07df4ef5b3efba4f00</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyTransform</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a87b8aed61a081a0130e6e24759af13e4</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>fromSkewSymmetric</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a60ed1d87345d9718ff7f9a6cb337eac4</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_m)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>makeSkewSymmetric</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abc4b6c2f5202c6ee0d82ff84812dae6b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getFrameOriginAxisZ</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0f897dd4d484e992da657fcbabb0f919</anchor>
      <arglist>(const Eigen::Vector3d &amp;_origin, const Eigen::Vector3d &amp;_axisZ)</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeSupportPolgyon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a29ae6cceff278dcf8050c1d898d74ce6</anchor>
      <arglist>(const SupportGeometry &amp;_geometry, const Eigen::Vector3d &amp;_axis1=Eigen::Vector3d::UnitX(), const Eigen::Vector3d &amp;_axis2=Eigen::Vector3d::UnitY())</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeSupportPolgyon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad25b1327853655ca28f519a2022aca19</anchor>
      <arglist>(std::vector&lt; size_t &gt; &amp;_originalIndices, const SupportGeometry &amp;_geometry, const Eigen::Vector3d &amp;_axis1=Eigen::Vector3d::UnitX(), const Eigen::Vector3d &amp;_axis2=Eigen::Vector3d::UnitY())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>HullAngleComparison</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae49e071956594129e38963ee5658b352</anchor>
      <arglist>(const HullAngle &amp;a, const HullAngle &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeConvexHull</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa51acb5d0b72768b14d41d537f7491ce</anchor>
      <arglist>(const SupportPolygon &amp;_points)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeCentroidOfHull</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7428be3f6b672574f5d88ab0b151679e</anchor>
      <arglist>(const SupportPolygon &amp;_convexHull)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isLeftTurn</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aedf772d885972a89cdfb838ba4ed7d30</anchor>
      <arglist>(const Eigen::Vector2d &amp;p1, const Eigen::Vector2d &amp;p2, const Eigen::Vector2d &amp;p3)</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeConvexHull</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a8c967c0907e41ffb974db2bfddf4c1a6</anchor>
      <arglist>(std::vector&lt; size_t &gt; &amp;_originalIndices, const SupportPolygon &amp;_points)</arglist>
    </member>
    <member kind="function">
      <type>Intersection_t</type>
      <name>computeIntersection</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7df4e6c71a322095e4265d1bc286d42a</anchor>
      <arglist>(Eigen::Vector2d &amp;_intersectionPoint, const Eigen::Vector2d &amp;a1, const Eigen::Vector2d &amp;a2, const Eigen::Vector2d &amp;b1, const Eigen::Vector2d &amp;b2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>cross</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a95a0f98be589c708f9506e634eb5df77</anchor>
      <arglist>(const Eigen::Vector2d &amp;_v1, const Eigen::Vector2d &amp;_v2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInsideSupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a797012fe8e744db0d506962babc459e9</anchor>
      <arglist>(const Eigen::Vector2d &amp;_p, const SupportPolygon &amp;_support, bool _includeEdge=true)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeClosestPointOnLineSegment</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a691f20bdcabbd8698298956308e2d161</anchor>
      <arglist>(const Eigen::Vector2d &amp;_p, const Eigen::Vector2d &amp;_s1, const Eigen::Vector2d &amp;_s2)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeClosestPointOnSupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae496bd6bc2539f04e3d896beea4ca076</anchor>
      <arglist>(const Eigen::Vector2d &amp;_p, const SupportPolygon &amp;_support)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeClosestPointOnSupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac46b22dbd6e5d93f6bce17632d20fe79</anchor>
      <arglist>(size_t &amp;_index1, size_t &amp;_index2, const Eigen::Vector2d &amp;_p, const SupportPolygon &amp;_support)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Geometry.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/math/</path>
    <filename>d3/d8b/Geometry_8h</filename>
    <includes id="d5/d55/MathTypes_8h" name="MathTypes.h" local="yes" imported="no">dart/math/MathTypes.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::math</namespace>
    <member kind="typedef">
      <type>std::vector&lt; Eigen::Vector3d &gt;</type>
      <name>SupportGeometry</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae600b44172da50dfaf79a6bb02493e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::aligned_vector&lt; Eigen::Vector2d &gt;</type>
      <name>SupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a179187b12bcf5f46512c64ee1b0585a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Intersection_t</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a6738b54f0224620743ddb50c386dfaf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INTERSECTING</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a6738b54f0224620743ddb50c386dfaf9a092c53833ef135d6d824e61467ac63cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PARALLEL</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a6738b54f0224620743ddb50c386dfaf9ae0bd9f4a8d9f0863eafccd58ed9dd75e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BEYOND_ENDPOINTS</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a6738b54f0224620743ddb50c386dfaf9ad29cba0b7fcfeffda98892d6ac27fa83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdTJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adcd54cb5639a2593346270b2c53db123</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdTJacFixed</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aabbaeab2e1963d804100e12d8074c721</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdRJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a1b9e504bac01072086e0c5b193977471</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdRInvJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a8f0824887c01f56cb9fcaa1c378c6e97</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>adJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad451eb0dab3653087e5c4a2796142fcd</anchor>
      <arglist>(const Eigen::Vector6d &amp;_V, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdInvTJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0a8894d3fc25851007d2e017e72bbbb7</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdInvTJacFixed</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a131e114a83953cf9d09ef1f2023b3a72</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractNullSpace</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aabe11a905af9d37de0be1d8ef240e5f9</anchor>
      <arglist>(const Eigen::JacobiSVD&lt; MatrixType &gt; &amp;_SVD, ReturnType &amp;_NS)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeNullSpace</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abdcb569c37a9d5877249411ec09b8975</anchor>
      <arglist>(const MatrixType &amp;_M, ReturnType &amp;_NS)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Helpers.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/math/</path>
    <filename>db/df1/Helpers_8h</filename>
    <includes id="d9/db7/Deprecated_8h" name="Deprecated.h" local="yes" imported="no">dart/common/Deprecated.h</includes>
    <includes id="d5/d55/MathTypes_8h" name="MathTypes.h" local="yes" imported="no">dart/math/MathTypes.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::math</namespace>
    <namespace>dart::Color</namespace>
    <member kind="function">
      <type>const Eigen::Matrix2d</type>
      <name>CR</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a016887264359b2adec638f50b2f521d9</anchor>
      <arglist>((Eigen::Matrix2d()&lt;&lt; 0.0,-1.0, 1.0, 0.0).finished())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>delta</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae6aede87f5eb5a1e43f0c8421dc237fa</anchor>
      <arglist>(int _i, int _j)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>sign</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9eef8bbcf51caedb89883c2379e3f1bd</anchor>
      <arglist>(T x, std::false_type)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>sign</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac8163ea1c30b0bea0518b73f3a64bad1</anchor>
      <arglist>(T x, std::true_type)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>sign</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abc6974b0afdc5c38c0d708ac527a9e94</anchor>
      <arglist>(T x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sgn</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af3299a641f96393c7bc2dddf6a442452</anchor>
      <arglist>(double _a)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sqr</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aaf35aa090d0b6f33e81c40697334df61</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tsinc</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9f15082c7168daabbfddd223e1fe0158</anchor>
      <arglist>(double _theta)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0ad9bb6d4eb0eeaa2f5d8181da7a0fb3</anchor>
      <arglist>(double _theta)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>asinh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adbdd4d2bd45b418902a972396060ab83</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>acosh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a5c44bf9370aa09e62340dd61475c11be</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>atanh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a607feabb775dd93e2b935cb0fef3f712</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>asech</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad24a2a30d51d65525d2214ef57cb01e7</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>acosech</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a4d0c4511a8ead15fb3b6ddc00b474b80</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>acotanh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad7e59127fc4e27b67a6851eb785591c7</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>round</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa69de55cf8cae77bea99419a278bf436</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>round2</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a897a62e960b3fe0f95a529fe911eff7d</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>clip</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a245be608b49628752ed042179cd818fc</anchor>
      <arglist>(const T &amp;val, const T &amp;lower, const T &amp;upper)</arglist>
    </member>
    <member kind="function">
      <type>DerivedA::PlainObject</type>
      <name>clip</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac03ac59520bf6338921471e34af439bb</anchor>
      <arglist>(const Eigen::MatrixBase&lt; DerivedA &gt; &amp;val, const Eigen::MatrixBase&lt; DerivedB &gt; &amp;lower, const Eigen::MatrixBase&lt; DerivedB &gt; &amp;upper)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a3660a2b791e39ec186f8632c94ba0dbb</anchor>
      <arglist>(double _x, double _y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInt</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aecdb589c0ea301a4d55e79780479b0b3</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNan</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af5b30515f57b6a7eea27ace602bb346b</anchor>
      <arglist>(double _v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNan</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a17ab5a7cba3e8f0f27e6b5f300c290ed</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInf</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac722257c75263b69e7997d672ffe0126</anchor>
      <arglist>(double _v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInf</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af1b073e98b687a9aa406af54ad68d3d2</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aca0a14a88fdfa483185ffa5fe66feeba</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_m, double _tol=1e-6)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>seedRand</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0f60c93c6ccddec2989611956bce69bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>random</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aaebe9dfa697cd24a66650059b1bc743a</anchor>
      <arglist>(double _min, double _max)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, N, 1 &gt;</type>
      <name>randomVector</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a5133c95e7c1213b2af0de0696047c5f3</anchor>
      <arglist>(double _min, double _max)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, N, 1 &gt;</type>
      <name>randomVector</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adfee9c8e11ec79925fefa99e527dd781</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>randomVectorXd</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>afb42517351767562eb4243b51ca017b7</anchor>
      <arglist>(size_t size, double min, double max)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>randomVectorXd</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a80a0dbf8770bf38fe58b8fb76029c632</anchor>
      <arglist>(size_t size, double limit)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Red</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a4d3ab5b883e6b4acf99db77b646d5da0</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Red</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a40c325dd75125cb0ba7277a867483803</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Fuschia</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a83fcb93f2c424e8730a11b466d3dfa76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Fuschia</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a5320f9fccb6f5761d28d46223a01a58c</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Orange</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>aa1817741b56722a3f2a8eb77280bd01f</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Orange</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>ac7590f97cfe8ec52c79464f8ee6dea90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Green</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a1902c703d717eebe4d4f6a16d01cdeee</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Green</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>ad96afa4f4d8ec8978b290fd523808370</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Blue</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a506bd8873182731f88cb7e1c7821b79b</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Blue</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a57f3def52e94e339f925a8e201ff19aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>White</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a95baa2baa822a5e60a40f0fdc71755f4</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>White</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a605d2515b7418b0dc9f35692848b7205</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Black</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>afdebec5b20247f3710cdaf5b0a6ba557</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Black</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>ad94ba7c65abc6fd92af64a0db7df6f35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Gray</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a04e0e028617699c7bef41185553f647f</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Gray</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a739634da0225a64ff91934c5c6dfc61b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Random</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>abf40261d480d1df44618b7c87b02a4dc</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Random</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>afaca5d4bbd8610cdd766bfa9a922134a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MathTypes.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/math/</path>
    <filename>d5/d55/MathTypes_8h</filename>
    <namespace>Eigen</namespace>
    <namespace>dart</namespace>
    <namespace>dart::math</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DART_EPSILON</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>a965dd71b99bacf40a89e0acf48b2e6e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_PI</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>a287d06e106f061038e753293db502c42</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_2PI</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>aa6595a65fbb4a5d7344de8f48c207e66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_PI_HALF</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>a22667ed403070f423866bafe66e3f659</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_PI_SQR</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>a766f93ef25be94beec0d504d3cf213d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_RADIAN</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>ae0d1c778a3c37257476ed9cf97407af6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DEGREE</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>ad73b3c93777ad9c2531c1f0430729367</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_1_3</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>aa681e6c62bc86b57439c224cd9c86f77</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_1_6</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>a95bbdda6ad44e089f0643c759cd99702</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_1_12</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>a31d4fee3e563dcde8b4e1d7d66c10b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_1_24</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>a27c9176e9db7425addda9f6a83fbf421</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_1_30</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>a01cb5bcc29472c9b1983d0397126394c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_1_60</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>aeadb754b6b8dc81fe91f88f872fa3409</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_1_120</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>ae8b5af3a8b9ff9fe33e54cff105b95f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_1_180</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>a42b8956c05cadf801e0ae99cf310b06e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_1_720</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>a00fb465a057fb31840f4d02d39868585</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_1_1260</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>aa999783b9b561e9631afbb0d3992cde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_4_3</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>afe3c4bd49c273853486200ae4953c283</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DART_DBL_INF</name>
      <anchorfile>d5/d55/MathTypes_8h.html</anchorfile>
      <anchor>a87228501f1def0dd3e72a24d05edd9a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; double, 6, 1 &gt;</type>
      <name>Vector6d</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>ac27ace7c50a658d3a07238110fa51a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; double, 6, 6 &gt;</type>
      <name>Matrix6d</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a1690c3b787f33c899925ec8ed093dfdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Eigen::Vector3d &gt;</type>
      <name>EIGEN_V_VEC3D</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a425d7eb71fbda74251b39a56d77483a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::vector&lt; Eigen::Vector3d &gt; &gt;</type>
      <name>EIGEN_VV_VEC3D</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a375d47fcb4f2d2215ba09c82fcc8f23c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; _Tp, Eigen::aligned_allocator&lt; _Tp &gt;&gt;</type>
      <name>aligned_vector</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a8dfe4f733de0543cf4067932f2ce7efa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; _Key, _Tp, _Compare, Eigen::aligned_allocator&lt; std::pair&lt; const _Key, _Tp &gt;&gt;&gt;</type>
      <name>aligned_map</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>ac7d9b3d70dd2fee4a4e69d3328060c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix6d</type>
      <name>Inertia</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7603ceb33198e1ae9b1b6ba8bb6d2581</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 3, Eigen::Dynamic &gt;</type>
      <name>LinearJacobian</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>acaf385e0537db2db2df04bf8baf7543b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 3, Eigen::Dynamic &gt;</type>
      <name>AngularJacobian</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abd5ac0d14d2fd0c60fa633b16723f71a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 6, Eigen::Dynamic &gt;</type>
      <name>Jacobian</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>acc30f8840c232e09c8dbaed44de40742</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Vector6d</type>
      <name>compose</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a5ddf9ce6ff40e8e0a562b80953064149</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angular, const Eigen::Vector3d &amp;_linear)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; _Tp &gt;</type>
      <name>make_aligned_shared</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>ab5662ca881d3d41dc8716964a2a9f5ac</anchor>
      <arglist>(_Args &amp;&amp;...__args)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Function.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/</path>
    <filename>dc/dd4/Function_8cpp</filename>
    <includes id="df/df5/Function_8h" name="Function.h" local="yes" imported="no">dart/optimizer/Function.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>Function.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/</path>
    <filename>df/df5/Function_8h</filename>
    <includes id="d9/db7/Deprecated_8h" name="Deprecated.h" local="yes" imported="no">dart/common/Deprecated.h</includes>
    <class kind="class">dart::optimizer::Function</class>
    <class kind="class">dart::optimizer::ModularFunction</class>
    <class kind="class">dart::optimizer::NullFunction</class>
    <class kind="class">dart::optimizer::MultiFunction</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Function &gt;</type>
      <name>FunctionPtr</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a091d108c3f5c8ca77baeae7abe86c31c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; double(const Eigen::VectorXd &amp;)&gt;</type>
      <name>CostFunction</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>af80afcab7fabba4d4448dda1c1dc67a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const Eigen::VectorXd &amp;, Eigen::Map&lt; Eigen::VectorXd &gt;)&gt;</type>
      <name>GradientFunction</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a0b89e9da6eecfd2bddffa178f9c2e9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const Eigen::VectorXd &amp;, Eigen::Map&lt; Eigen::VectorXd, Eigen::RowMajor &gt;)&gt;</type>
      <name>HessianFunction</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a5655d552729d314fa9ed6e1674c0b10e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GradientDescentSolver.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/</path>
    <filename>d5/da5/GradientDescentSolver_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="d1/d4d/GradientDescentSolver_8h" name="GradientDescentSolver.h" local="yes" imported="no">dart/optimizer/GradientDescentSolver.h</includes>
    <includes id="d2/d40/Problem_8h" name="Problem.h" local="yes" imported="no">dart/optimizer/Problem.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>GradientDescentSolver.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/</path>
    <filename>d1/d4d/GradientDescentSolver_8h</filename>
    <includes id="db/dc5/Solver_8h" name="Solver.h" local="yes" imported="no">dart/optimizer/Solver.h</includes>
    <class kind="class">dart::optimizer::GradientDescentSolver</class>
    <class kind="struct">dart::optimizer::GradientDescentSolver::UniqueProperties</class>
    <class kind="struct">dart::optimizer::GradientDescentSolver::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>IpoptSolver.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/ipopt/</path>
    <filename>d7/d7b/IpoptSolver_8cpp</filename>
    <includes id="d6/de7/IpoptSolver_8h" name="IpoptSolver.h" local="yes" imported="no">dart/optimizer/ipopt/IpoptSolver.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="df/df5/Function_8h" name="Function.h" local="yes" imported="no">dart/optimizer/Function.h</includes>
    <includes id="d2/d40/Problem_8h" name="Problem.h" local="yes" imported="no">dart/optimizer/Problem.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>IpoptSolver.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/ipopt/</path>
    <filename>d6/de7/IpoptSolver_8h</filename>
    <includes id="db/dc5/Solver_8h" name="Solver.h" local="yes" imported="no">dart/optimizer/Solver.h</includes>
    <class kind="class">dart::optimizer::IpoptSolver</class>
    <class kind="class">dart::optimizer::DartTNLP</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HAVE_CSTDDEF</name>
      <anchorfile>d6/de7/IpoptSolver_8h.html</anchorfile>
      <anchor>af858cc42aa54f0d70f119d478538357a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NloptSolver.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/nlopt/</path>
    <filename>de/d13/NloptSolver_8cpp</filename>
    <includes id="dd/d9d/NloptSolver_8h" name="NloptSolver.h" local="yes" imported="no">dart/optimizer/nlopt/NloptSolver.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d2/d40/Problem_8h" name="Problem.h" local="yes" imported="no">dart/optimizer/Problem.h</includes>
    <includes id="df/df5/Function_8h" name="Function.h" local="yes" imported="no">dart/optimizer/Function.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <member kind="function" static="yes">
      <type>static std::vector&lt; double &gt;</type>
      <name>convertToStd</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a36ec915bdf1142fda333b8f9097897fb</anchor>
      <arglist>(const Eigen::VectorXd &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::VectorXd</type>
      <name>convertToEigen</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>af02d36b8a16c293b1f7f3d8e3cff14e3</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;_v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NloptSolver.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/nlopt/</path>
    <filename>dd/d9d/NloptSolver_8h</filename>
    <includes id="d9/db7/Deprecated_8h" name="Deprecated.h" local="yes" imported="no">dart/common/Deprecated.h</includes>
    <includes id="db/dc5/Solver_8h" name="Solver.h" local="yes" imported="no">dart/optimizer/Solver.h</includes>
    <class kind="class">dart::optimizer::NloptSolver</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>Problem.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/</path>
    <filename>d9/dfd/Problem_8cpp</filename>
    <includes id="d2/d40/Problem_8h" name="Problem.h" local="yes" imported="no">dart/optimizer/Problem.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="db/df1/Helpers_8h" name="Helpers.h" local="yes" imported="no">dart/math/Helpers.h</includes>
    <includes id="df/df5/Function_8h" name="Function.h" local="yes" imported="no">dart/optimizer/Function.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>getVectorObjectIfAvailable</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a34c1b2dba6d4b86e50f4ef125d0286a0</anchor>
      <arglist>(size_t _idx, const std::vector&lt; T &gt; &amp;_vec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Problem.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/</path>
    <filename>d2/d40/Problem_8h</filename>
    <includes id="df/df5/Function_8h" name="Function.h" local="no" imported="no">dart/optimizer/Function.h</includes>
    <class kind="class">dart::optimizer::Problem</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>SnoptInterface.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/snopt/</path>
    <filename>db/d66/SnoptInterface_8cpp</filename>
    <includes id="df/d9e/SnoptInterface_8h" name="SnoptInterface.h" local="yes" imported="no">SnoptInterface.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <namespace>dart::optimizer::snopt</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SNINIT</name>
      <anchorfile>db/d66/SnoptInterface_8cpp.html</anchorfile>
      <anchor>ace499e9d5ccf3b8a02700efa7a948a93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SNOPT</name>
      <anchorfile>db/d66/SnoptInterface_8cpp.html</anchorfile>
      <anchor>ad2aabc8dadd750c21ca26279c90a769f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SNSPEC</name>
      <anchorfile>db/d66/SnoptInterface_8cpp.html</anchorfile>
      <anchor>a42cfe33b64ecd00f3c6667618562e94e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>S1USER</name>
      <anchorfile>db/d66/SnoptInterface_8cpp.html</anchorfile>
      <anchor>a5c68d30c35116f078e569160c24882c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SNINIT</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>a60fdb40aaa96d031f09511a039979053</anchor>
      <arglist>(int *iprint, int *isum, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SNOPT</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>a7a442c132dea18c4e34eecef12c71a3f</anchor>
      <arglist>(char *start, int *m, int *n, int *ne, int *nName, int *nnCon, int *nnObj, int *nnJac, int *iObj, double *ObjAdd, char *Prob, void(*funCon)(int *mode, int *nnCon, int *nnJac, int *neJac, double *x, double *fCon, double *gCon, int *nState, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru), void(*funObj)(int *mode, int *nnObj, double *x, double *fObj, double *gObj, int *nState, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru), double *a, int *ha, int *ka, double *bl, double *bu, char *Names, int *hs, double *xs, double *pi, double *rc, int *inform, int *mincw, int *miniw, int *minrw, int *nS, int *nInf, double *sInf, double *Obj, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw, int start_len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SNSPEC</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>a8d28ca58a2a54564821e65a53e3768f0</anchor>
      <arglist>(int *ispecs, int *inform, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>S1USER</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>a5ffdd19cada10a014eea34e3fe48779d</anchor>
      <arglist>(int *iAbort, char *MjrMsg, int *KTcond, int *m, int *n, int *nb, int *nR, int *nS, int *nMajor, int *nMinor, int *nSwap, double *condHz, double *duInf, double *emaxS, double *fObj, double *fMrt, double gMrt, double *PenNrm, double *prInf, double *step, double *vimax, double *dxnrm, double *dxrel, int *ne, int *nka, double *a, int *ha, int *ka, int *hs, double *bl, double *bu, double *pi, double *rc, double *xs, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SnoptInterface.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/snopt/</path>
    <filename>df/d9e/SnoptInterface_8h</filename>
    <class kind="class">dart::optimizer::snopt::SnoptInterface</class>
    <class kind="struct">dart::optimizer::snopt::SnoptInterface::Slack</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <namespace>dart::optimizer::snopt</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ZERO</name>
      <anchorfile>df/d9e/SnoptInterface_8h.html</anchorfile>
      <anchor>ac328e551bde3d39b6d7b8cc9e048d941</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SnoptSolver.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/snopt/</path>
    <filename>de/d84/SnoptSolver_8cpp</filename>
    <includes id="dd/d41/SnoptSolver_8h" name="SnoptSolver.h" local="yes" imported="no">SnoptSolver.h</includes>
    <includes id="d2/d40/Problem_8h" name="Problem.h" local="yes" imported="no">optimizer/Problem.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <namespace>dart::optimizer::snopt</namespace>
  </compound>
  <compound kind="file">
    <name>SnoptSolver.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/snopt/</path>
    <filename>dd/d41/SnoptSolver_8h</filename>
    <includes id="df/d9e/SnoptInterface_8h" name="SnoptInterface.h" local="yes" imported="no">dart/optimizer/snopt/SnoptInterface.h</includes>
    <includes id="db/dc5/Solver_8h" name="Solver.h" local="yes" imported="no">dart/optimizer/Solver.h</includes>
    <class kind="class">dart::optimizer::snopt::SnoptSolver</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
    <namespace>dart::optimizer::snopt</namespace>
  </compound>
  <compound kind="file">
    <name>Solver.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/</path>
    <filename>d4/d01/Solver_8cpp</filename>
    <includes id="db/dc5/Solver_8h" name="Solver.h" local="yes" imported="no">dart/optimizer/Solver.h</includes>
    <includes id="d2/d40/Problem_8h" name="Problem.h" local="yes" imported="no">dart/optimizer/Problem.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>Solver.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/</path>
    <filename>db/dc5/Solver_8h</filename>
    <class kind="class">dart::optimizer::Solver</class>
    <class kind="struct">dart::optimizer::Solver::Properties</class>
    <namespace>dart</namespace>
    <namespace>dart::optimizer</namespace>
  </compound>
  <compound kind="file">
    <name>Path.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/planning/</path>
    <filename>d5/dbb/Path_8cpp</filename>
    <includes id="df/d6f/Path_8h" name="Path.h" local="yes" imported="no">Path.h</includes>
    <class kind="class">dart::planning::LinearPathSegment</class>
    <class kind="class">dart::planning::CircularPathSegment</class>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>Path.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/planning/</path>
    <filename>df/d6f/Path_8h</filename>
    <class kind="class">dart::planning::PathSegment</class>
    <class kind="class">dart::planning::Path</class>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>PathFollowingTrajectory.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/planning/</path>
    <filename>de/d40/PathFollowingTrajectory_8cpp</filename>
    <includes id="d2/d74/PathFollowingTrajectory_8h" name="PathFollowingTrajectory.h" local="yes" imported="no">PathFollowingTrajectory.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>PathFollowingTrajectory.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/planning/</path>
    <filename>d2/d74/PathFollowingTrajectory_8h</filename>
    <includes id="df/d6f/Path_8h" name="Path.h" local="yes" imported="no">Path.h</includes>
    <includes id="d7/db7/Trajectory_8h" name="Trajectory.h" local="yes" imported="no">Trajectory.h</includes>
    <class kind="class">dart::planning::PathFollowingTrajectory</class>
    <class kind="struct">dart::planning::PathFollowingTrajectory::TrajectoryStep</class>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>PathPlanner.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/planning/</path>
    <filename>d4/d7c/PathPlanner_8h</filename>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <includes id="d0/d5e/RRT_8h" name="RRT.h" local="yes" imported="no">RRT.h</includes>
    <class kind="class">dart::planning::PathPlanner</class>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>PathShortener.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/planning/</path>
    <filename>d9/db9/PathShortener_8cpp</filename>
    <includes id="dd/d27/PathShortener_8h" name="PathShortener.h" local="yes" imported="no">PathShortener.h</includes>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <includes id="d0/d5e/RRT_8h" name="RRT.h" local="yes" imported="no">RRT.h</includes>
    <includes id="d4/d58/CollisionDetector_8h" name="CollisionDetector.h" local="yes" imported="no">dart/collision/CollisionDetector.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
    <member kind="define">
      <type>#define</type>
      <name>RAND12</name>
      <anchorfile>d9/db9/PathShortener_8cpp.html</anchorfile>
      <anchor>ab38e69aa0434552e8205bd1796061a03</anchor>
      <arglist>(N1, N2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PathShortener.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/planning/</path>
    <filename>dd/d27/PathShortener_8h</filename>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <class kind="class">dart::planning::PathShortener</class>
    <namespace>dart</namespace>
    <namespace>dart::simulation</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>RRT.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/planning/</path>
    <filename>de/d46/RRT_8cpp</filename>
    <includes id="d0/d5e/RRT_8h" name="RRT.h" local="yes" imported="no">RRT.h</includes>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>RRT.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/planning/</path>
    <filename>d0/d5e/RRT_8h</filename>
    <includes id="dd/d4a/SmartPointer_8h" name="SmartPointer.h" local="yes" imported="no">dart/dynamics/SmartPointer.h</includes>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <class kind="class">flann::L2</class>
    <class kind="class">flann::Index</class>
    <class kind="class">dart::planning::RRT</class>
    <namespace>flann</namespace>
    <namespace>dart</namespace>
    <namespace>dart::simulation</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>Trajectory.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/planning/</path>
    <filename>d7/db7/Trajectory_8h</filename>
    <class kind="class">dart::planning::Trajectory</class>
    <namespace>dart</namespace>
    <namespace>dart::planning</namespace>
  </compound>
  <compound kind="file">
    <name>Camera.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/renderer/</path>
    <filename>dd/de4/Camera_8h</filename>
    <class kind="class">dart::renderer::Camera</class>
    <namespace>dart</namespace>
    <namespace>dart::renderer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_NEAR_PLANE</name>
      <anchorfile>dd/de4/Camera_8h.html</anchorfile>
      <anchor>a85f7f594f32c1eb0630ab93306cd4e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT_FAR_PLANE</name>
      <anchorfile>dd/de4/Camera_8h.html</anchorfile>
      <anchor>ac32036c1d9808a033d448114e10102a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AXIS</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>af6a99067870ecb5696a8eaf5709d1f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AXIS_X</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>af6a99067870ecb5696a8eaf5709d1f09a4ff3a2cd2c824b0dd3b2c1b2a221a071</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AXIS_Y</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>af6a99067870ecb5696a8eaf5709d1f09ac98ff74589d89d0265331a29a403ef69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AXIS_Z</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>af6a99067870ecb5696a8eaf5709d1f09ab7d421c5a1a8ebfc5efb89d61fcaab70</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Light.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/renderer/</path>
    <filename>d4/d73/Light_8h</filename>
    <class kind="class">dart::renderer::Light</class>
    <namespace>dart</namespace>
    <namespace>dart::renderer</namespace>
    <member kind="enumeration">
      <type></type>
      <name>LightType</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac132458d777d97036b5d17e5515ec703</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LT_PointLight</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac132458d777d97036b5d17e5515ec703a3c2dd6eb0e1e724770737f1665f6c96c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LT_DirectionLight</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac132458d777d97036b5d17e5515ec703a96b896dbf84941c8f3ee0bb756461aca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LoadOpengl.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/renderer/</path>
    <filename>dc/de7/LoadOpengl_8h</filename>
  </compound>
  <compound kind="file">
    <name>OpenGLCamera.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/renderer/</path>
    <filename>db/db0/OpenGLCamera_8h</filename>
    <includes id="dd/de4/Camera_8h" name="Camera.h" local="yes" imported="no">dart/renderer/Camera.h</includes>
    <class kind="class">dart::renderer::OpenGLCamera</class>
    <namespace>dart</namespace>
    <namespace>dart::renderer</namespace>
  </compound>
  <compound kind="file">
    <name>OpenGLRenderInterface.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/renderer/</path>
    <filename>d1/d1c/OpenGLRenderInterface_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="d9/d49/BoxShape_8h" name="BoxShape.h" local="yes" imported="no">dart/dynamics/BoxShape.h</includes>
    <includes id="d2/d73/CylinderShape_8h" name="CylinderShape.h" local="yes" imported="no">dart/dynamics/CylinderShape.h</includes>
    <includes id="de/d25/EllipsoidShape_8h" name="EllipsoidShape.h" local="yes" imported="no">dart/dynamics/EllipsoidShape.h</includes>
    <includes id="d0/d7e/MeshShape_8h" name="MeshShape.h" local="yes" imported="no">dart/dynamics/MeshShape.h</includes>
    <includes id="da/d07/LineSegmentShape_8h" name="LineSegmentShape.h" local="yes" imported="no">dart/dynamics/LineSegmentShape.h</includes>
    <includes id="dc/de7/LoadOpengl_8h" name="LoadOpengl.h" local="yes" imported="no">dart/renderer/LoadOpengl.h</includes>
    <includes id="d2/d9a/OpenGLRenderInterface_8h" name="OpenGLRenderInterface.h" local="yes" imported="no">dart/renderer/OpenGLRenderInterface.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::renderer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>QUAD_OBJ_INIT</name>
      <anchorfile>d1/d1c/OpenGLRenderInterface_8cpp.html</anchorfile>
      <anchor>ac0622674f5e3b0eb0bb851ca8d546b34</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initQuadObj</name>
      <anchorfile>d1/d1c/OpenGLRenderInterface_8cpp.html</anchorfile>
      <anchor>a1a38f46db4dfb742a0e7a1e348c2de17</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static GLUquadricObj *</type>
      <name>quadObj</name>
      <anchorfile>d1/d1c/OpenGLRenderInterface_8cpp.html</anchorfile>
      <anchor>a9c21aafe8a5cb6e9c2c39ee114289e9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OpenGLRenderInterface.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/renderer/</path>
    <filename>d2/d9a/OpenGLRenderInterface_8h</filename>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">RenderInterface.h</includes>
    <includes id="dc/de7/LoadOpengl_8h" name="LoadOpengl.h" local="yes" imported="no">dart/renderer/LoadOpengl.h</includes>
    <class kind="class">dart::renderer::OpenGLRenderInterface</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::renderer</namespace>
  </compound>
  <compound kind="file">
    <name>RenderInterface.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/renderer/</path>
    <filename>d9/d2d/RenderInterface_8cpp</filename>
    <includes id="d0/dc0/RenderInterface_8h" name="RenderInterface.h" local="yes" imported="no">RenderInterface.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::renderer</namespace>
  </compound>
  <compound kind="file">
    <name>RenderInterface.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/renderer/</path>
    <filename>d0/dc0/RenderInterface_8h</filename>
    <includes id="d4/d73/Light_8h" name="Light.h" local="yes" imported="no">Light.h</includes>
    <includes id="dd/de4/Camera_8h" name="Camera.h" local="yes" imported="no">Camera.h</includes>
    <includes id="d5/d55/MathTypes_8h" name="MathTypes.h" local="yes" imported="no">dart/math/MathTypes.h</includes>
    <class kind="class">dart::renderer::RenderInterface</class>
    <namespace>dart</namespace>
    <namespace>dart::renderer</namespace>
    <member kind="enumeration">
      <type></type>
      <name>DecoBufferType</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>acf87eb7802dde6a39804b3bb9665971a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BT_Front</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>acf87eb7802dde6a39804b3bb9665971aad22b58a789a682f3de7bd2fb305f5c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BT_Back</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>acf87eb7802dde6a39804b3bb9665971aa004ccfd3677ad920358336e6d79f2666</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DecoColorChannel</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>a906b07495de2d463f0d43f0addb79ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_R</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>a906b07495de2d463f0d43f0addb79ae5a38372d2ebb1dd3b09a77924b0971728a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_G</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>a906b07495de2d463f0d43f0addb79ae5aac7702d39cdcd66566fd5cb56379a63d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_B</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>a906b07495de2d463f0d43f0addb79ae5a571c7d2d59c97d16c67538d83c5ce8df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_A</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>a906b07495de2d463f0d43f0addb79ae5a47aee9a3eb7847044d4f92fb704686ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_RGB</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>a906b07495de2d463f0d43f0addb79ae5ab50693fd5cfb3986c5ea5d10285e79c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_RGBA</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>a906b07495de2d463f0d43f0addb79ae5a8d0a2375bc6fb5ba7f5df0f9b314690a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DecoDrawType</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac61641b5f1f95dab6b3d3cac2477dc60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_WireFrame</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac61641b5f1f95dab6b3d3cac2477dc60a87c3cdbf00b1f42d35b4ef23276f4e81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_SolidPolygon</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac61641b5f1f95dab6b3d3cac2477dc60a9d52823b3675ea04276f6a091310e542</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_FrontPolygon</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac61641b5f1f95dab6b3d3cac2477dc60a0acfa65117e0fe59c608580620268429</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_BackPolygon</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac61641b5f1f95dab6b3d3cac2477dc60af1b8b2fe0e51df7abb11b98b7728ab8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_Max</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac61641b5f1f95dab6b3d3cac2477dc60a197f480e6d50c4c39f92d70bd652c5b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Recording.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/simulation/</path>
    <filename>d5/de0/Recording_8cpp</filename>
    <includes id="d7/dde/Recording_8h" name="Recording.h" local="yes" imported="no">dart/simulation/Recording.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::simulation</namespace>
  </compound>
  <compound kind="file">
    <name>Recording.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/simulation/</path>
    <filename>d7/dde/Recording_8h</filename>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <class kind="class">dart::simulation::Recording</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::simulation</namespace>
  </compound>
  <compound kind="file">
    <name>World.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/simulation/</path>
    <filename>d7/dfe/World_8cpp</filename>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="da/db0/SemiImplicitEulerIntegrator_8h" name="SemiImplicitEulerIntegrator.h" local="yes" imported="no">dart/integration/SemiImplicitEulerIntegrator.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="da/db5/ConstraintSolver_8h" name="ConstraintSolver.h" local="yes" imported="no">dart/constraint/ConstraintSolver.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::simulation</namespace>
  </compound>
  <compound kind="file">
    <name>World.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/simulation/</path>
    <filename>dd/d5b/World_8h</filename>
    <includes id="dd/d27/Timer_8h" name="Timer.h" local="yes" imported="no">dart/common/Timer.h</includes>
    <includes id="db/d33/NameManager_8h" name="NameManager.h" local="yes" imported="no">dart/common/NameManager.h</includes>
    <includes id="db/de8/Subject_8h" name="Subject.h" local="yes" imported="no">dart/common/Subject.h</includes>
    <includes id="d7/dde/Recording_8h" name="Recording.h" local="yes" imported="no">dart/simulation/Recording.h</includes>
    <includes id="d4/d97/SimpleFrame_8h" name="SimpleFrame.h" local="yes" imported="no">dart/dynamics/SimpleFrame.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <class kind="class">dart::simulation::World</class>
    <namespace>dart</namespace>
    <namespace>dart::integration</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::constraint</namespace>
    <namespace>dart::simulation</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; World &gt;</type>
      <name>WorldPtr</name>
      <anchorfile>d4/d0b/namespacedart_1_1simulation.html</anchorfile>
      <anchor>a1db1abe159f77736177ead5172d44206</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>C3D.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>d3/d01/C3D_8cpp</filename>
    <includes id="d6/d6b/C3D_8h" name="C3D.h" local="yes" imported="no">C3D.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="function">
      <type>float</type>
      <name>ConvertDecToFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1a57a1c34d5570d6f29ea403dda63bda</anchor>
      <arglist>(char _bytes[4])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConvertFloatToDec</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a382485bd8b4a45bf55dc17c6a3cfbc25</anchor>
      <arglist>(float _f, char *_bytes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadC3DFile</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a5586cfbff35b11bd8149efbf7f20930a</anchor>
      <arglist>(const char *_fileName, Eigen::EIGEN_VV_VEC3D &amp;_pointData, int *_nFrame, int *_nMarker, double *_freq)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveC3DFile</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad4eded9eaef066f1a4fe617e940af2a5</anchor>
      <arglist>(const char *_fileName, Eigen::EIGEN_VV_VEC3D &amp;_pointData, int _nFrame, int _nMarker, double _freq)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>C3D.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>d6/d6b/C3D_8h</filename>
    <includes id="d5/d55/MathTypes_8h" name="MathTypes.h" local="yes" imported="no">dart/math/MathTypes.h</includes>
    <class kind="struct">dart::utils::c3d_head_t</class>
    <class kind="struct">dart::utils::c3d_param_t</class>
    <class kind="struct">dart::utils::c3d_frameSI_t</class>
    <class kind="struct">dart::utils::c3d_frame_t</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="define">
      <type>#define</type>
      <name>C3D_REC_SIZE</name>
      <anchorfile>d6/d6b/C3D_8h.html</anchorfile>
      <anchor>aece2b00ed4219fdc32901411f506138d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dart::utils::c3d_head_t</type>
      <name>c3d_head</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a3def68c5794a81e2309c716b523c6fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dart::utils::c3d_param_t</type>
      <name>c3d_param</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad95ee720fe5a2e7f47f18ad92593990c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dart::utils::c3d_frameSI_t</type>
      <name>c3d_frameSI</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a3d23a7d5dab1c15d3db9070bc56da5ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dart::utils::c3d_frame_t</type>
      <name>c3d_frame</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a79fae4bb8e83049b9ba12b3c4be507bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>convertDecToFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aee22589a8d85518529348c2db8f2763e</anchor>
      <arglist>(char _bytes[4])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertFloatToDec</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1cb5c82f6b3724ff3b2023dc5d9d9f29</anchor>
      <arglist>(float _f, char *_bytes)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxElem</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a5dbbb30d1a7a53f8a3e26a7499835cc5</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;_arr, int &amp;_index)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minElem</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac2f5aa6f573bb22953845671feb6a70c</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;_arr, int &amp;_index)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CompositeResourceRetriever.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>d6/df4/CompositeResourceRetriever_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="da/d26/Uri_8h" name="Uri.h" local="yes" imported="no">dart/common/Uri.h</includes>
    <includes id="d4/d15/CompositeResourceRetriever_8h" name="CompositeResourceRetriever.h" local="yes" imported="no">dart/utils/CompositeResourceRetriever.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>CompositeResourceRetriever.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>d4/d15/CompositeResourceRetriever_8h</filename>
    <includes id="d3/d14/ResourceRetriever_8h" name="ResourceRetriever.h" local="yes" imported="no">dart/common/ResourceRetriever.h</includes>
    <class kind="class">dart::utils::CompositeResourceRetriever</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; CompositeResourceRetriever &gt;</type>
      <name>CompositeResourceRetrieverPtr</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a02b215ff0eb5b6981a9effd2e3b121b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FileInfoC3D.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>d8/d90/FileInfoC3D_8cpp</filename>
    <includes id="da/d8c/FileInfoC3D_8h" name="FileInfoC3D.h" local="yes" imported="no">dart/utils/FileInfoC3D.h</includes>
    <includes id="d6/d6b/C3D_8h" name="C3D.h" local="yes" imported="no">dart/utils/C3D.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>FileInfoC3D.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>da/d8c/FileInfoC3D_8h</filename>
    <includes id="d5/d55/MathTypes_8h" name="MathTypes.h" local="yes" imported="no">dart/math/MathTypes.h</includes>
    <class kind="class">dart::utils::FileInfoC3D</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>FileInfoDof.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>db/dab/FileInfoDof_8cpp</filename>
    <includes id="d5/d6e/FileInfoDof_8h" name="FileInfoDof.h" local="yes" imported="no">dart/utils/FileInfoDof.h</includes>
    <includes id="d9/dc4/DegreeOfFreedom_8h" name="DegreeOfFreedom.h" local="yes" imported="no">dart/dynamics/DegreeOfFreedom.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <includes id="d7/dde/Recording_8h" name="Recording.h" local="yes" imported="no">dart/simulation/Recording.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>FileInfoDof.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>d5/d6e/FileInfoDof_8h</filename>
    <class kind="class">dart::utils::FileInfoDof</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>FileInfoWorld.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>d7/d88/FileInfoWorld_8cpp</filename>
    <includes id="d7/d95/FileInfoWorld_8h" name="FileInfoWorld.h" local="yes" imported="no">dart/utils/FileInfoWorld.h</includes>
    <includes id="d7/dde/Recording_8h" name="Recording.h" local="yes" imported="no">dart/simulation/Recording.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>FileInfoWorld.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>d7/d95/FileInfoWorld_8h</filename>
    <class kind="class">dart::utils::FileInfoWorld</class>
    <namespace>dart</namespace>
    <namespace>dart::simulation</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>PackageResourceRetriever.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>de/dff/PackageResourceRetriever_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d5/d13/LocalResourceRetriever_8h" name="LocalResourceRetriever.h" local="yes" imported="no">dart/common/LocalResourceRetriever.h</includes>
    <includes id="da/d26/Uri_8h" name="Uri.h" local="yes" imported="no">dart/common/Uri.h</includes>
    <includes id="d4/d4f/PackageResourceRetriever_8h" name="PackageResourceRetriever.h" local="yes" imported="no">dart/utils/PackageResourceRetriever.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>PackageResourceRetriever.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>d4/d4f/PackageResourceRetriever_8h</filename>
    <includes id="d3/d14/ResourceRetriever_8h" name="ResourceRetriever.h" local="yes" imported="no">dart/common/ResourceRetriever.h</includes>
    <class kind="class">dart::utils::PackageResourceRetriever</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="typedef">
      <type>std::shared_ptr&lt; PackageResourceRetriever &gt;</type>
      <name>PackageResourceRetrieverPtr</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a8192795044e4474bdecb0daf5c3a3b71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Parser.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>dc/df5/Parser_8cpp</filename>
    <includes id="d6/d0c/Parser_8h" name="Parser.h" local="yes" imported="no">dart/utils/Parser.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d3/d8b/Geometry_8h" name="Geometry.h" local="yes" imported="no">dart/math/Geometry.h</includes>
    <includes id="d5/d13/LocalResourceRetriever_8h" name="LocalResourceRetriever.h" local="yes" imported="no">dart/common/LocalResourceRetriever.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1b34e2266484324f1417d4226c70457a</anchor>
      <arglist>(bool _v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac0045163e6de06687392492b76a90982</anchor>
      <arglist>(int _v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a98951cf43149ae7e2a780f4ff03b64ea</anchor>
      <arglist>(unsigned int _v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>abf01e253eed36523fe8d72505b35dd44</anchor>
      <arglist>(float _v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a6833939c2b3b0f7d2304209a37769e2c</anchor>
      <arglist>(double _v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a9d37bf27a103909e5abece14bdd8c735</anchor>
      <arglist>(char _v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a2995c2dcb0f83bbd270ba163a02a89f4</anchor>
      <arglist>(const Eigen::Vector2d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a45e2e9d3aee166ab6914032c778eff5d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ab0de436afc4afd5a9f82557404960dad</anchor>
      <arglist>(const Eigen::Vector3i &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1b933aa8f1988ba5bf6a23d46e069464</anchor>
      <arglist>(const Eigen::Vector6d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>af43136bbba82d5dbac5034cb2ae4f12e</anchor>
      <arglist>(const Eigen::VectorXd &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>acf5a708e849fa6d3e94dba3bf6e4324f</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toBool</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a659485a1e300a826fd942f2c70682cc9</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>toInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aac4984790c39bd7c49a2fda9584cb398</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>toUInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a0c535789d981d0d0d9ddea672a2e86d7</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>toFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a345fabff8db80bc5130069426c9526d1</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>toDouble</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a8898ea95454124450617bda816c964bf</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>toChar</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad6613a320b48e190f6964bbb09ae1bd8</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>toVector2d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>abe18b26db9233ea027ea3bef776d075d</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>toVector3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae1a82cacfc9f1c91a8d28b360bb64997</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3i</type>
      <name>toVector3i</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a731b2fc422c1638869b2b50d5fcba9a7</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>toVector6d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a608ad2461cdb0be1e3f77e39993c268c</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>toVectorXd</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad2d09deadaca7d83fd72068a37c5a97b</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>toIsometry3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a7901ddc3932b7b4d847698ccb9125da0</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>toIsometry3dWithExtrinsicRotation</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae24cc400455d583e84c5ab0f09bfffb4</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getValueString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa5c6dc25de48775a0de17de7653c2150</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getValueBool</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a214157be76b325dcd17f80f8f519d040</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getValueInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a479495b1b62c7bdda0e33ee5ebf4fa76</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getValueUInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac3e3d86d2bf91164bd9d143aacc1c4e1</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getValueFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae5ef0da98367024869ce7da46dc1eca3</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getValueDouble</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4577abba1d81021d32185340af6f5c7c</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getValueChar</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac744a2c7501213d7bb39327df4032fcf</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>getValueVector2d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ab06779013a1a43649d6acbce93b9f7a7</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getValueVector3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a481966f03ae3e71fdc05b780ffbc1290</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3i</type>
      <name>getValueVector3i</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa3c7147db1299ae932ef30f4be0604a6</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getValueVector6d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac27f0a57398cc8c5bab9370d9ef8e326</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getValueVectorXd</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aff0f194e5ccc3ec7612d96a8b9f574a4</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getValueVec3</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a9a95a42e3c601efbeb109689c5e58168</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getValueIsometry3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>abf9d85028e23e7509fe4cf943f4a76bb</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getValueIsometry3dWithExtrinsicRotation</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa7d9f73f3951f82f5c7f4b112829d4cf</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a0ae82898f2f145b583baf7ed0685fd08</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>tinyxml2::XMLElement *</type>
      <name>getElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a22b3f522f35d1ab54d19d1c83a35874d</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>openXMLFile</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>afe1120e09bf0b63fc36534111a78aef7</anchor>
      <arglist>(tinyxml2::XMLDocument &amp;doc, const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAttribute</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a026d75f4787ac5d023b0bcca062005c2</anchor>
      <arglist>(tinyxml2::XMLElement *element, const char *const name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getAttribute</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a58942c589535c4d34afdc5458dbb105b</anchor>
      <arglist>(tinyxml2::XMLElement *element, const char *const name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAttribute</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>acc1b51980d8ca734760d0e92cb419cc6</anchor>
      <arglist>(tinyxml2::XMLElement *element, const char *const name, double *d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Parser.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>d6/d0c/Parser_8h</filename>
    <includes id="d3/d14/ResourceRetriever_8h" name="ResourceRetriever.h" local="yes" imported="no">dart/common/ResourceRetriever.h</includes>
    <includes id="d5/d55/MathTypes_8h" name="MathTypes.h" local="yes" imported="no">dart/math/MathTypes.h</includes>
    <class kind="class">dart::utils::ElementEnumerator</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>SdfParser.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/sdf/</path>
    <filename>d6/d24/SdfParser_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d9/d49/BoxShape_8h" name="BoxShape.h" local="yes" imported="no">dart/dynamics/BoxShape.h</includes>
    <includes id="d2/d73/CylinderShape_8h" name="CylinderShape.h" local="yes" imported="no">dart/dynamics/CylinderShape.h</includes>
    <includes id="de/d25/EllipsoidShape_8h" name="EllipsoidShape.h" local="yes" imported="no">dart/dynamics/EllipsoidShape.h</includes>
    <includes id="d0/d7e/MeshShape_8h" name="MeshShape.h" local="yes" imported="no">dart/dynamics/MeshShape.h</includes>
    <includes id="db/d1a/WeldJoint_8h" name="WeldJoint.h" local="yes" imported="no">dart/dynamics/WeldJoint.h</includes>
    <includes id="d3/d7a/PrismaticJoint_8h" name="PrismaticJoint.h" local="yes" imported="no">dart/dynamics/PrismaticJoint.h</includes>
    <includes id="d1/d44/RevoluteJoint_8h" name="RevoluteJoint.h" local="yes" imported="no">dart/dynamics/RevoluteJoint.h</includes>
    <includes id="d6/db8/ScrewJoint_8h" name="ScrewJoint.h" local="yes" imported="no">dart/dynamics/ScrewJoint.h</includes>
    <includes id="db/dec/TranslationalJoint_8h" name="TranslationalJoint.h" local="yes" imported="no">dart/dynamics/TranslationalJoint.h</includes>
    <includes id="d3/ddc/BallJoint_8h" name="BallJoint.h" local="yes" imported="no">dart/dynamics/BallJoint.h</includes>
    <includes id="db/da7/FreeJoint_8h" name="FreeJoint.h" local="yes" imported="no">dart/dynamics/FreeJoint.h</includes>
    <includes id="d0/d40/EulerJoint_8h" name="EulerJoint.h" local="yes" imported="no">dart/dynamics/EulerJoint.h</includes>
    <includes id="dd/d4c/UniversalJoint_8h" name="UniversalJoint.h" local="yes" imported="no">dart/dynamics/UniversalJoint.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <includes id="de/ded/SkelParser_8h" name="SkelParser.h" local="yes" imported="no">dart/utils/SkelParser.h</includes>
    <includes id="d5/d13/LocalResourceRetriever_8h" name="LocalResourceRetriever.h" local="yes" imported="no">dart/common/LocalResourceRetriever.h</includes>
    <includes id="da/d26/Uri_8h" name="Uri.h" local="yes" imported="no">dart/common/Uri.h</includes>
    <includes id="d2/d3d/SdfParser_8h" name="SdfParser.h" local="yes" imported="no">dart/utils/sdf/SdfParser.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>reportMissingElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aefcc208cfca7633c72f311da0e4c1ec2</anchor>
      <arglist>(const std::string &amp;functionName, const std::string &amp;elementName, const std::string &amp;objectType, const std::string &amp;objectName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>readAxisElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aaa451b1fb5fb5ee8d0b494e70d77f247</anchor>
      <arglist>(tinyxml2::XMLElement *axisElement, const Eigen::Isometry3d &amp;_parentModelFrame, Eigen::Vector3d &amp;axis, double &amp;lower, double &amp;upper, double &amp;initial, double &amp;rest, double &amp;damping)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SdfParser.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/sdf/</path>
    <filename>d2/d3d/SdfParser_8h</filename>
    <includes id="d9/db7/Deprecated_8h" name="Deprecated.h" local="yes" imported="no">dart/common/Deprecated.h</includes>
    <includes id="d6/d0c/Parser_8h" name="Parser.h" local="yes" imported="no">dart/utils/Parser.h</includes>
    <includes id="d3/d14/ResourceRetriever_8h" name="ResourceRetriever.h" local="yes" imported="no">dart/common/ResourceRetriever.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="db/d1a/WeldJoint_8h" name="WeldJoint.h" local="yes" imported="no">dart/dynamics/WeldJoint.h</includes>
    <includes id="d1/d44/RevoluteJoint_8h" name="RevoluteJoint.h" local="yes" imported="no">dart/dynamics/RevoluteJoint.h</includes>
    <includes id="d3/d7a/PrismaticJoint_8h" name="PrismaticJoint.h" local="yes" imported="no">dart/dynamics/PrismaticJoint.h</includes>
    <includes id="d6/db8/ScrewJoint_8h" name="ScrewJoint.h" local="yes" imported="no">dart/dynamics/ScrewJoint.h</includes>
    <includes id="dd/d4c/UniversalJoint_8h" name="UniversalJoint.h" local="yes" imported="no">dart/dynamics/UniversalJoint.h</includes>
    <includes id="d3/ddc/BallJoint_8h" name="BallJoint.h" local="yes" imported="no">dart/dynamics/BallJoint.h</includes>
    <includes id="db/dec/TranslationalJoint_8h" name="TranslationalJoint.h" local="yes" imported="no">dart/dynamics/TranslationalJoint.h</includes>
    <includes id="db/da7/FreeJoint_8h" name="FreeJoint.h" local="yes" imported="no">dart/dynamics/FreeJoint.h</includes>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <class kind="class">dart::utils::SdfParser</class>
    <class kind="struct">dart::utils::SdfParser::SDFBodyNode</class>
    <class kind="struct">dart::utils::SdfParser::SDFJoint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::simulation</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>SoftSdfParser.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/sdf/</path>
    <filename>d7/dfa/SoftSdfParser_8cpp</filename>
    <includes id="d4/da2/SoftSdfParser_8h" name="SoftSdfParser.h" local="yes" imported="no">dart/utils/sdf/SoftSdfParser.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d4/dc0/DARTCollisionDetector_8h" name="DARTCollisionDetector.h" local="yes" imported="no">dart/collision/dart/DARTCollisionDetector.h</includes>
    <includes id="d9/dd0/FCLCollisionDetector_8h" name="FCLCollisionDetector.h" local="yes" imported="no">dart/collision/fcl/FCLCollisionDetector.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="d9/d49/BoxShape_8h" name="BoxShape.h" local="yes" imported="no">dart/dynamics/BoxShape.h</includes>
    <includes id="d2/d73/CylinderShape_8h" name="CylinderShape.h" local="yes" imported="no">dart/dynamics/CylinderShape.h</includes>
    <includes id="de/d25/EllipsoidShape_8h" name="EllipsoidShape.h" local="yes" imported="no">dart/dynamics/EllipsoidShape.h</includes>
    <includes id="db/d1a/WeldJoint_8h" name="WeldJoint.h" local="yes" imported="no">dart/dynamics/WeldJoint.h</includes>
    <includes id="d1/d44/RevoluteJoint_8h" name="RevoluteJoint.h" local="yes" imported="no">dart/dynamics/RevoluteJoint.h</includes>
    <includes id="d3/d7a/PrismaticJoint_8h" name="PrismaticJoint.h" local="yes" imported="no">dart/dynamics/PrismaticJoint.h</includes>
    <includes id="db/dec/TranslationalJoint_8h" name="TranslationalJoint.h" local="yes" imported="no">dart/dynamics/TranslationalJoint.h</includes>
    <includes id="d3/ddc/BallJoint_8h" name="BallJoint.h" local="yes" imported="no">dart/dynamics/BallJoint.h</includes>
    <includes id="db/da7/FreeJoint_8h" name="FreeJoint.h" local="yes" imported="no">dart/dynamics/FreeJoint.h</includes>
    <includes id="d6/db8/ScrewJoint_8h" name="ScrewJoint.h" local="yes" imported="no">dart/dynamics/ScrewJoint.h</includes>
    <includes id="dd/d4c/UniversalJoint_8h" name="UniversalJoint.h" local="yes" imported="no">dart/dynamics/UniversalJoint.h</includes>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <includes id="de/ded/SkelParser_8h" name="SkelParser.h" local="yes" imported="no">dart/utils/SkelParser.h</includes>
    <includes id="db/dd5/FCLMeshCollisionDetector_8h" name="FCLMeshCollisionDetector.h" local="yes" imported="no">dart/collision/fcl_mesh/FCLMeshCollisionDetector.h</includes>
    <includes id="d6/db8/SoftMeshShape_8h" name="SoftMeshShape.h" local="yes" imported="no">dart/dynamics/SoftMeshShape.h</includes>
    <includes id="d0/d9b/SoftBodyNode_8h" name="SoftBodyNode.h" local="yes" imported="no">dart/dynamics/SoftBodyNode.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="function">
      <type>common::ResourceRetrieverPtr</type>
      <name>getResourceRetriever</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac76519a694525c123544da68f21e7f50</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SoftSdfParser.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/sdf/</path>
    <filename>d4/da2/SoftSdfParser_8h</filename>
    <includes id="d2/d3d/SdfParser_8h" name="SdfParser.h" local="yes" imported="no">dart/utils/sdf/SdfParser.h</includes>
    <class kind="class">dart::utils::SoftSdfParser</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::simulation</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>SkelParser.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>d8/d35/SkelParser_8cpp</filename>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <includes id="d4/dc0/DARTCollisionDetector_8h" name="DARTCollisionDetector.h" local="yes" imported="no">dart/collision/dart/DARTCollisionDetector.h</includes>
    <includes id="d9/dd0/FCLCollisionDetector_8h" name="FCLCollisionDetector.h" local="yes" imported="no">dart/collision/fcl/FCLCollisionDetector.h</includes>
    <includes id="db/dd5/FCLMeshCollisionDetector_8h" name="FCLMeshCollisionDetector.h" local="yes" imported="no">dart/collision/fcl_mesh/FCLMeshCollisionDetector.h</includes>
    <includes id="da/db5/ConstraintSolver_8h" name="ConstraintSolver.h" local="yes" imported="no">dart/constraint/ConstraintSolver.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="d0/d9b/SoftBodyNode_8h" name="SoftBodyNode.h" local="yes" imported="no">dart/dynamics/SoftBodyNode.h</includes>
    <includes id="d9/d49/BoxShape_8h" name="BoxShape.h" local="yes" imported="no">dart/dynamics/BoxShape.h</includes>
    <includes id="d2/d73/CylinderShape_8h" name="CylinderShape.h" local="yes" imported="no">dart/dynamics/CylinderShape.h</includes>
    <includes id="de/d25/EllipsoidShape_8h" name="EllipsoidShape.h" local="yes" imported="no">dart/dynamics/EllipsoidShape.h</includes>
    <includes id="de/d65/PlaneShape_8h" name="PlaneShape.h" local="yes" imported="no">dart/dynamics/PlaneShape.h</includes>
    <includes id="d0/d7e/MeshShape_8h" name="MeshShape.h" local="yes" imported="no">dart/dynamics/MeshShape.h</includes>
    <includes id="d6/db8/SoftMeshShape_8h" name="SoftMeshShape.h" local="yes" imported="no">dart/dynamics/SoftMeshShape.h</includes>
    <includes id="db/d1a/WeldJoint_8h" name="WeldJoint.h" local="yes" imported="no">dart/dynamics/WeldJoint.h</includes>
    <includes id="d3/d7a/PrismaticJoint_8h" name="PrismaticJoint.h" local="yes" imported="no">dart/dynamics/PrismaticJoint.h</includes>
    <includes id="d1/d44/RevoluteJoint_8h" name="RevoluteJoint.h" local="yes" imported="no">dart/dynamics/RevoluteJoint.h</includes>
    <includes id="d6/db8/ScrewJoint_8h" name="ScrewJoint.h" local="yes" imported="no">dart/dynamics/ScrewJoint.h</includes>
    <includes id="db/dec/TranslationalJoint_8h" name="TranslationalJoint.h" local="yes" imported="no">dart/dynamics/TranslationalJoint.h</includes>
    <includes id="d3/ddc/BallJoint_8h" name="BallJoint.h" local="yes" imported="no">dart/dynamics/BallJoint.h</includes>
    <includes id="db/da7/FreeJoint_8h" name="FreeJoint.h" local="yes" imported="no">dart/dynamics/FreeJoint.h</includes>
    <includes id="d0/d40/EulerJoint_8h" name="EulerJoint.h" local="yes" imported="no">dart/dynamics/EulerJoint.h</includes>
    <includes id="dd/d4c/UniversalJoint_8h" name="UniversalJoint.h" local="yes" imported="no">dart/dynamics/UniversalJoint.h</includes>
    <includes id="de/d0a/PlanarJoint_8h" name="PlanarJoint.h" local="yes" imported="no">dart/dynamics/PlanarJoint.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="dc/dab/Marker_8h" name="Marker.h" local="yes" imported="no">dart/dynamics/Marker.h</includes>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <includes id="de/ded/SkelParser_8h" name="SkelParser.h" local="yes" imported="no">dart/utils/SkelParser.h</includes>
    <includes id="d5/d13/LocalResourceRetriever_8h" name="LocalResourceRetriever.h" local="yes" imported="no">dart/common/LocalResourceRetriever.h</includes>
    <includes id="da/d26/Uri_8h" name="Uri.h" local="yes" imported="no">dart/common/Uri.h</includes>
    <class kind="struct">dart::utils::DofProxy</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="enumeration">
      <type></type>
      <name>NextResult</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4615d94670cb9a8340ba253911c9584a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>VALID</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4615d94670cb9a8340ba253911c9584aac2971741cb0cd9f48cff28f70e970c10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONTINUE</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4615d94670cb9a8340ba253911c9584aa5559cfc6a9e39c00e71c65ab5d1ebf52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BREAK</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4615d94670cb9a8340ba253911c9584aac31e12ac7858cf846123437330409641</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CREATE_FREEJOINT_ROOT</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4615d94670cb9a8340ba253911c9584aa02ebbbb0881979114d75b6ae9e3a1693</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tinyxml2::XMLElement *</type>
      <name>checkFormatAndGetWorldElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a751d65746eeed6b73b6cd96508eda14b</anchor>
      <arglist>(tinyxml2::XMLDocument &amp;_document)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NextResult</type>
      <name>getNextJointAndNodePair</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ab275d434d55b631fd43f3926e1cf9b20</anchor>
      <arglist>(SkelParser::JointMap::iterator &amp;it, SkelParser::BodyMap::const_iterator &amp;child, dynamics::BodyNode *&amp;parent, const dynamics::SkeletonPtr skeleton, SkelParser::JointMap &amp;joints, const SkelParser::BodyMap &amp;bodyNodes)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; dynamics::Joint *, dynamics::BodyNode * &gt;</type>
      <name>createJointAndNodePair</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a6975963546d4f1e242bfa800132b52ad</anchor>
      <arglist>(dynamics::SkeletonPtr skeleton, dynamics::BodyNode *parent, const SkelParser::SkelJoint &amp;joint, const typename BodyType::Properties &amp;body)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createJointAndNodePair</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a42e0b608e37761de56ed4043f271479c</anchor>
      <arglist>(dynamics::SkeletonPtr skeleton, dynamics::BodyNode *parent, const SkelParser::SkelJoint &amp;joint, const SkelParser::SkelBodyNode &amp;body)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getDofAttributeIfItExists</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a7b853441bc656ba4cc49855258fce8ff</anchor>
      <arglist>(const std::string &amp;_attribute, double *_value, const std::string &amp;_element_type, const tinyxml2::XMLElement *_xmlElement, const std::string &amp;_jointName, size_t _index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDofLimitAttributes</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>adc0a25784ec5728c93b4db6946dd3594</anchor>
      <arglist>(tinyxml2::XMLElement *_dofElement, const std::string &amp;_element_type, const std::string &amp;_jointName, size_t _index, double *lower, double *upper, double *initial)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>readAllDegreesOfFreedom</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a47aeb94703b27e22cf583e7076217f43</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, PropertyType &amp;_properties, SkelParser::SkelJoint &amp;_joint, const std::string &amp;_jointName, size_t _numDofs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>readDegreeOfFreedom</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1d2fceeca840fef69524ae18e03f6466</anchor>
      <arglist>(tinyxml2::XMLElement *_dofElement, PropertyType &amp;properties, SkelParser::SkelJoint &amp;joint, const std::string &amp;jointName, size_t numDofs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>readJointDynamicsAndLimit</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ab74efd6dcce1cf638c59dda90a041623</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, PropertyType &amp;_properties, SkelParser::SkelJoint &amp;_joint, const std::string &amp;_name, size_t _numAxis)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SkelParser.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>de/ded/SkelParser_8h</filename>
    <includes id="d9/db7/Deprecated_8h" name="Deprecated.h" local="yes" imported="no">dart/common/Deprecated.h</includes>
    <includes id="d6/d0c/Parser_8h" name="Parser.h" local="yes" imported="no">dart/utils/Parser.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <includes id="db/df8/SingleDofJoint_8h" name="SingleDofJoint.h" local="yes" imported="no">dart/dynamics/SingleDofJoint.h</includes>
    <includes id="d4/d92/MultiDofJoint_8h" name="MultiDofJoint.h" local="yes" imported="no">dart/dynamics/MultiDofJoint.h</includes>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <class kind="class">dart::utils::SkelParser</class>
    <class kind="struct">dart::utils::SkelParser::SkelBodyNode</class>
    <class kind="struct">dart::utils::SkelParser::SkelJoint</class>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::simulation</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>DartLoader.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/urdf/</path>
    <filename>dd/d4c/DartLoader_8cpp</filename>
    <includes id="dc/dff/DartLoader_8h" name="DartLoader.h" local="yes" imported="no">DartLoader.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <includes id="d1/d44/RevoluteJoint_8h" name="RevoluteJoint.h" local="yes" imported="no">dart/dynamics/RevoluteJoint.h</includes>
    <includes id="d3/d7a/PrismaticJoint_8h" name="PrismaticJoint.h" local="yes" imported="no">dart/dynamics/PrismaticJoint.h</includes>
    <includes id="db/d1a/WeldJoint_8h" name="WeldJoint.h" local="yes" imported="no">dart/dynamics/WeldJoint.h</includes>
    <includes id="db/da7/FreeJoint_8h" name="FreeJoint.h" local="yes" imported="no">dart/dynamics/FreeJoint.h</includes>
    <includes id="de/d0a/PlanarJoint_8h" name="PlanarJoint.h" local="yes" imported="no">dart/dynamics/PlanarJoint.h</includes>
    <includes id="de/d8f/Shape_8h" name="Shape.h" local="yes" imported="no">dart/dynamics/Shape.h</includes>
    <includes id="d9/d49/BoxShape_8h" name="BoxShape.h" local="yes" imported="no">dart/dynamics/BoxShape.h</includes>
    <includes id="de/d25/EllipsoidShape_8h" name="EllipsoidShape.h" local="yes" imported="no">dart/dynamics/EllipsoidShape.h</includes>
    <includes id="d2/d73/CylinderShape_8h" name="CylinderShape.h" local="yes" imported="no">dart/dynamics/CylinderShape.h</includes>
    <includes id="d0/d7e/MeshShape_8h" name="MeshShape.h" local="yes" imported="no">dart/dynamics/MeshShape.h</includes>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <includes id="dc/daa/urdf__world__parser_8h" name="urdf_world_parser.h" local="yes" imported="no">dart/utils/urdf/urdf_world_parser.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; urdf::ModelInterface &gt;</type>
      <name>ModelInterfacePtr</name>
      <anchorfile>dd/d4c/DartLoader_8cpp.html</anchorfile>
      <anchor>aaaf4c5ad7bf28325973ac11490a88da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaterial</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a320bbecab2e2cd9add2ccec54405cb99</anchor>
      <arglist>(dynamics::ShapePtr _shape, const urdf::Visual *_viz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaterial</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a08dc494f272096d7509e83e0b9633eab</anchor>
      <arglist>(dynamics::ShapePtr _shape, const urdf::Collision *_col)</arglist>
    </member>
    <member kind="function">
      <type>template dynamics::ShapePtr</type>
      <name>DartLoader::createShape&lt; urdf::Visual &gt;</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac48712a52ea3a23fd68dc73a0539f23f</anchor>
      <arglist>(const urdf::Visual *_vizOrCol, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function">
      <type>template dynamics::ShapePtr</type>
      <name>DartLoader::createShape&lt; urdf::Collision &gt;</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae0dccbcd41c0661ed42f77f0835ab004</anchor>
      <arglist>(const urdf::Collision *_vizOrCol, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DartLoader.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/urdf/</path>
    <filename>dc/dff/DartLoader_8h</filename>
    <includes id="d9/db7/Deprecated_8h" name="Deprecated.h" local="yes" imported="no">dart/common/Deprecated.h</includes>
    <includes id="d5/d13/LocalResourceRetriever_8h" name="LocalResourceRetriever.h" local="yes" imported="no">dart/common/LocalResourceRetriever.h</includes>
    <includes id="d3/d14/ResourceRetriever_8h" name="ResourceRetriever.h" local="yes" imported="no">dart/common/ResourceRetriever.h</includes>
    <includes id="da/d26/Uri_8h" name="Uri.h" local="yes" imported="no">dart/common/Uri.h</includes>
    <includes id="d7/d87/BodyNode_8h" name="BodyNode.h" local="yes" imported="no">dart/dynamics/BodyNode.h</includes>
    <includes id="de/d50/Joint_8h" name="Joint.h" local="yes" imported="no">dart/dynamics/Joint.h</includes>
    <includes id="d1/ded/Skeleton_8h" name="Skeleton.h" local="yes" imported="no">dart/dynamics/Skeleton.h</includes>
    <includes id="dd/d5b/World_8h" name="World.h" local="yes" imported="no">dart/simulation/World.h</includes>
    <includes id="d4/d15/CompositeResourceRetriever_8h" name="CompositeResourceRetriever.h" local="yes" imported="no">dart/utils/CompositeResourceRetriever.h</includes>
    <includes id="d4/d4f/PackageResourceRetriever_8h" name="PackageResourceRetriever.h" local="yes" imported="no">dart/utils/PackageResourceRetriever.h</includes>
    <class kind="class">dart::utils::DartLoader</class>
    <namespace>urdf</namespace>
    <namespace>dart</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::simulation</namespace>
    <namespace>dart::utils</namespace>
  </compound>
  <compound kind="file">
    <name>urdf_world_parser.cpp</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/urdf/</path>
    <filename>d5/d7c/urdf__world__parser_8cpp</filename>
    <includes id="dc/daa/urdf__world__parser_8h" name="urdf_world_parser.h" local="yes" imported="no">urdf_world_parser.h</includes>
    <includes id="d2/d3f/Console_8h" name="Console.h" local="yes" imported="no">dart/common/Console.h</includes>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <namespace>dart::utils::urdf_parsing</namespace>
    <member kind="function">
      <type>std::shared_ptr&lt; World &gt;</type>
      <name>parseWorldURDF</name>
      <anchorfile>d0/d4c/namespacedart_1_1utils_1_1urdf__parsing.html</anchorfile>
      <anchor>abda1895a15f2d6dcef7ce9671c1088a1</anchor>
      <arglist>(const std::string &amp;_xml_string, const dart::common::Uri &amp;_baseUri)</arglist>
    </member>
    <member kind="variable">
      <type>const bool</type>
      <name>debug</name>
      <anchorfile>d5/d7c/urdf__world__parser_8cpp.html</anchorfile>
      <anchor>a6295d47efda04de55c38cb8ea1cdb807</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>urdf_world_parser.h</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/urdf/</path>
    <filename>dc/daa/urdf__world__parser_8h</filename>
    <includes id="da/d26/Uri_8h" name="Uri.h" local="no" imported="no">dart/common/Uri.h</includes>
    <includes id="d3/d14/ResourceRetriever_8h" name="ResourceRetriever.h" local="no" imported="no">dart/common/ResourceRetriever.h</includes>
    <class kind="class">dart::utils::urdf_parsing::Entity</class>
    <class kind="class">dart::utils::urdf_parsing::World</class>
    <namespace>dart</namespace>
    <namespace>dart::utils</namespace>
    <namespace>dart::utils::urdf_parsing</namespace>
  </compound>
  <compound kind="file">
    <name>mainpage.dox</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/doxygen/</path>
    <filename>d5/d4d/mainpage_8dox</filename>
  </compound>
  <compound kind="struct">
    <name>Coin</name>
    <filename>d2/d3a/structCoin.html</filename>
    <member kind="variable">
      <type>uivector</type>
      <name>symbols</name>
      <anchorfile>d2/d3a/structCoin.html</anchorfile>
      <anchor>a1d6bc1176bb9fcbd9ca8c781c92ef432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>weight</name>
      <anchorfile>d2/d3a/structCoin.html</anchorfile>
      <anchor>a0427f9a678a9ce031a254f40f06b3669</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ColorProfile</name>
    <filename>de/dbd/structColorProfile.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>sixteenbit</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>a4060733b0b18c705f404e57fe7074492</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>sixteenbit_done</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>a73c5a699599d34017e7101ae355bafce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>colored</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>a5473d538859f232abe8aaf864ff1548e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>colored_done</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>ab0c56fe33cb50929702a475288ab8e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>key</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>ac859f5252253e3e41651d4a40b3f8c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>key_r</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>a6bcd7f7c40c3e8763a3f1185414f4932</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>key_g</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>a69145711cec524101e185425b4b34899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short</type>
      <name>key_b</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>a5d9b7502f24a622990f2a532d2f64ac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>alpha</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>ac2d692c039ecb5974303d8e8240367af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>alpha_done</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>a9c8071d69a1a7a7015f3d880ed9faf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>numcolors</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>ac38cbfa9237ecaf21cb56730c0c15e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ColorTree</type>
      <name>tree</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>ad64583d868f74ccd5bda6f94b7bd0a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>palette</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>acf805bc910a23088e71d4cb04dcaf3df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>maxnumcolors</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>a2edd65be07c3c028a58329e570264980</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>numcolors_done</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>a7a0f6fe120d02e4573d2c27be20715cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>greybits</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>a1a1aefe1c04cff8ede43e12b92429519</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>greybits_done</name>
      <anchorfile>de/dbd/structColorProfile.html</anchorfile>
      <anchor>af3825b320146425e402d7ae42bfaa63e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ColorTree</name>
    <filename>d4/d32/structColorTree.html</filename>
    <member kind="variable">
      <type>ColorTree *</type>
      <name>next</name>
      <anchorfile>d4/d32/structColorTree.html</anchorfile>
      <anchor>a8ecb848a46a773702c018076a3990fed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>d4/d32/structColorTree.html</anchorfile>
      <anchor>ab3836a4a5981a7cf4ef553d25d9b0361</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dJointFeedback</name>
    <filename>dd/d9d/structdJointFeedback.html</filename>
    <member kind="variable">
      <type>dVector3</type>
      <name>f1</name>
      <anchorfile>dd/d9d/structdJointFeedback.html</anchorfile>
      <anchor>a2e0424baccae7bee2888f53fb1967b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dVector3</type>
      <name>t1</name>
      <anchorfile>dd/d9d/structdJointFeedback.html</anchorfile>
      <anchor>ab077e522968108a4e25de364bc064987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dVector3</type>
      <name>f2</name>
      <anchorfile>dd/d9d/structdJointFeedback.html</anchorfile>
      <anchor>aaeb70889770d134d78dbbb0ca97cdc30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dVector3</type>
      <name>t2</name>
      <anchorfile>dd/d9d/structdJointFeedback.html</anchorfile>
      <anchor>a1cb979498ed1ef6cbf29a84783843909</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dLCP</name>
    <filename>d6/df6/structdLCP.html</filename>
    <member kind="function">
      <type></type>
      <name>dLCP</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a95af162b9d3fe6be80bb1f71f11447c3</anchor>
      <arglist>(int _n, int _nskip, int _nub, dReal *_Adata, dReal *_x, dReal *_b, dReal *_w, dReal *_lo, dReal *_hi, dReal *_L, dReal *_d, dReal *_Dell, dReal *_ell, dReal *_tmp, bool *_state, int *_findex, int *_p, int *_C, dReal **Arows)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNub</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>abe30b77743ce93543853859df167bc6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transfer_i_to_C</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a40bc7d64d0aae3a4d8e9538d8f536c1d</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transfer_i_to_N</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>ae3ecd42b3c943b736255a410fd7ccdb1</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transfer_i_from_N_to_C</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a96189d008217e82bf0e368a6df3efc33</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transfer_i_from_C_to_N</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a422939c9b68f765cd7753ce90f064b0a</anchor>
      <arglist>(int i, void *tmpbuf)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numC</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a703f840d7b5bb8a1d45ecaaa9b1a5f08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numN</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>ac0ecd87da7eda6f2a9870dde3f212a19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexC</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>af502d7af0c39d1c512182921e5a188d7</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexN</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>ae998a2d817d69055cf96460633a07e23</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>dReal</type>
      <name>Aii</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>ac6085b02d807b4b7641cf717a5eb5037</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>dReal</type>
      <name>AiC_times_qC</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>aa503f9a4a59982157c89f08c1ab9063c</anchor>
      <arglist>(int i, dReal *q) const </arglist>
    </member>
    <member kind="function">
      <type>dReal</type>
      <name>AiN_times_qN</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>adce9c6961c74c97fcff4968f297879e1</anchor>
      <arglist>(int i, dReal *q) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pN_equals_ANC_times_qC</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a6c5110b1b6fa8abde7b88037bf8491cd</anchor>
      <arglist>(dReal *p, dReal *q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pN_plusequals_ANi</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>aceb053b031406d9f77eaa0aff6bcbd06</anchor>
      <arglist>(dReal *p, int i, int sign=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pC_plusequals_s_times_qC</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a8d2ee24665a18974d9c44f85314e9c68</anchor>
      <arglist>(dReal *p, dReal s, dReal *q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pN_plusequals_s_times_qN</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>ad3102b5ace205ba6aa61fee37b8e55e5</anchor>
      <arglist>(dReal *p, dReal s, dReal *q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve1</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a70dd8d7cd2b057b9cff3edc544e0a3f3</anchor>
      <arglist>(dReal *a, int i, int dir=1, int only_transfer=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpermute</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>ada5ae9958b96bd71e1bee15c48969996</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>estimate_transfer_i_from_C_to_N_mem_req</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>acc1457c581e1af6f7b409095de1e9c71</anchor>
      <arglist>(int nC, int nskip)</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>m_n</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a57ae2d13edde25a52f8d9a974c2e7fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>m_nskip</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a9e96ce753ae9a0830b51cf3a1dc4c353</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_nub</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>aa0c1e744189d45507f7a833ecdbec135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_nC</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a4f14ba15dcef75619abee5d321b4aabe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>m_nN</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>aeba7e499eaa127c470958be84ac0a0f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ATYPE const</type>
      <name>m_A</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a65092d6c41da47b38ff76d678608c335</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dReal *const</type>
      <name>m_x</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a3d5c55a7a9525f3d0a4d3bfd877daa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dReal *const *const</type>
      <name>m_b</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a5916ba285cbfe85dfe21a7d753cfb0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dReal *const *const *const</type>
      <name>m_w</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>abdb7364a6ab516498ecef651b9f0c4ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dReal *const *const *const *const</type>
      <name>m_lo</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>acebd8c7229b126c84d9ab4485adfb5e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dReal *const *const *const *const *const</type>
      <name>m_hi</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a08b38167c7d5f38f0cbe8fc6d13e2eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dReal *const</type>
      <name>m_L</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a0c9166ec6210836a9e00f62325353ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dReal *const *const</type>
      <name>m_d</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a55490e310b80025b1d77536ad27ed2d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dReal *const</type>
      <name>m_Dell</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a0e34185c08a9f3a52b28093c7f1c467a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dReal *const *const</type>
      <name>m_ell</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a64f4ead8e360d01aade6a043d038f4b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dReal *const *const *const</type>
      <name>m_tmp</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>afecd8ea060e3ce9a3ce32e26c172c314</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool *const</type>
      <name>m_state</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>ad3e7764557c4f93b2890110e415ccbfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *const</type>
      <name>m_findex</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a783c75bcaafc23f36a2ca5a5bd9bd1eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *const *const</type>
      <name>m_p</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a50fb9506ad77221b2f14f615340c0559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *const *const *const</type>
      <name>m_C</name>
      <anchorfile>d6/df6/structdLCP.html</anchorfile>
      <anchor>a302e3eaf59334347b60a3050d922d93c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Hash</name>
    <filename>d1/dbe/structHash.html</filename>
    <member kind="variable">
      <type>int *</type>
      <name>head</name>
      <anchorfile>d1/dbe/structHash.html</anchorfile>
      <anchor>a0977cf12b1d8e6bbc784b5e0877926f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>val</name>
      <anchorfile>d1/dbe/structHash.html</anchorfile>
      <anchor>a66918968854722efdf7ab5f8ac2c6c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short *</type>
      <name>chain</name>
      <anchorfile>d1/dbe/structHash.html</anchorfile>
      <anchor>abf6ad3db2f652a19cc4ff0792e477899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned short *</type>
      <name>zeros</name>
      <anchorfile>d1/dbe/structHash.html</anchorfile>
      <anchor>a7247caa3e23eaba8f0d199ec5010c931</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HuffmanTree</name>
    <filename>d4/d3d/structHuffmanTree.html</filename>
    <member kind="variable">
      <type>unsigned *</type>
      <name>tree2d</name>
      <anchorfile>d4/d3d/structHuffmanTree.html</anchorfile>
      <anchor>a91160304cb771d2f9f39ee357c9b05a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned *</type>
      <name>tree1d</name>
      <anchorfile>d4/d3d/structHuffmanTree.html</anchorfile>
      <anchor>a47b3346a25fe0a3222b595c236ad146e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned *</type>
      <name>lengths</name>
      <anchorfile>d4/d3d/structHuffmanTree.html</anchorfile>
      <anchor>aef81d45a5c56276c5699a8e9a575021d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>maxbitlen</name>
      <anchorfile>d4/d3d/structHuffmanTree.html</anchorfile>
      <anchor>adf034ca9ce62a4ebfffaaeaba4378a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>numcodes</name>
      <anchorfile>d4/d3d/structHuffmanTree.html</anchorfile>
      <anchor>a608df5a24f60d1077a5cde19d5149e1f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LodePNGColorMode</name>
    <filename>d3/df7/structLodePNGColorMode.html</filename>
    <member kind="variable">
      <type>LodePNGColorType</type>
      <name>colortype</name>
      <anchorfile>d3/df7/structLodePNGColorMode.html</anchorfile>
      <anchor>a4f3df7240411abe80546052d197fbe8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>bitdepth</name>
      <anchorfile>d3/df7/structLodePNGColorMode.html</anchorfile>
      <anchor>ad20010b9561980f65281bc17f7848253</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>palette</name>
      <anchorfile>d3/df7/structLodePNGColorMode.html</anchorfile>
      <anchor>a54f0a793238009fcb95f081626fae308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>palettesize</name>
      <anchorfile>d3/df7/structLodePNGColorMode.html</anchorfile>
      <anchor>a407557f056168682d9319aeb60866dcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>key_defined</name>
      <anchorfile>d3/df7/structLodePNGColorMode.html</anchorfile>
      <anchor>ab9105505c5d56cfc6ce4efe1bb288b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>key_r</name>
      <anchorfile>d3/df7/structLodePNGColorMode.html</anchorfile>
      <anchor>a29e64327bca1f3d16235e9ff471e4d50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>key_g</name>
      <anchorfile>d3/df7/structLodePNGColorMode.html</anchorfile>
      <anchor>ad98309f36d289392b0c440baa50af9f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>key_b</name>
      <anchorfile>d3/df7/structLodePNGColorMode.html</anchorfile>
      <anchor>a93a269405fee0d1c5045a1a671ed1de8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LodePNGCompressSettings</name>
    <filename>d7/df2/structLodePNGCompressSettings.html</filename>
    <member kind="variable">
      <type>unsigned</type>
      <name>btype</name>
      <anchorfile>d7/df2/structLodePNGCompressSettings.html</anchorfile>
      <anchor>ac0afeac7276cce01fa9824aa2d5a1ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>use_lz77</name>
      <anchorfile>d7/df2/structLodePNGCompressSettings.html</anchorfile>
      <anchor>a37a87bd874376f0298efad2870e70e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>windowsize</name>
      <anchorfile>d7/df2/structLodePNGCompressSettings.html</anchorfile>
      <anchor>a01e77a9db5c2c4dfe6c79bf04f0bf84e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned(*</type>
      <name>custom_zlib</name>
      <anchorfile>d7/df2/structLodePNGCompressSettings.html</anchorfile>
      <anchor>a7257310735acfa5553a7d3e1037c838f</anchor>
      <arglist>)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGCompressSettings *)</arglist>
    </member>
    <member kind="variable">
      <type>unsigned(*</type>
      <name>custom_deflate</name>
      <anchorfile>d7/df2/structLodePNGCompressSettings.html</anchorfile>
      <anchor>ae0d6adc268768bce7e9117f3e0f2191a</anchor>
      <arglist>)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGCompressSettings *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom_context</name>
      <anchorfile>d7/df2/structLodePNGCompressSettings.html</anchorfile>
      <anchor>a04bda70a2bfb3ca23b26223405c4dd22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LodePNGDecoderSettings</name>
    <filename>d6/dd8/structLodePNGDecoderSettings.html</filename>
    <member kind="variable">
      <type>LodePNGDecompressSettings</type>
      <name>zlibsettings</name>
      <anchorfile>d6/dd8/structLodePNGDecoderSettings.html</anchorfile>
      <anchor>a9ae8fef9880bef97a3e932f8ea942ed8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>ignore_crc</name>
      <anchorfile>d6/dd8/structLodePNGDecoderSettings.html</anchorfile>
      <anchor>a6390c403d2a5718242337bbbaf15131d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>color_convert</name>
      <anchorfile>d6/dd8/structLodePNGDecoderSettings.html</anchorfile>
      <anchor>af26f2b29cd338ce4476bee9571a0818a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>read_text_chunks</name>
      <anchorfile>d6/dd8/structLodePNGDecoderSettings.html</anchorfile>
      <anchor>aa1212905c3f73d9fffef2c04a220d951</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>remember_unknown_chunks</name>
      <anchorfile>d6/dd8/structLodePNGDecoderSettings.html</anchorfile>
      <anchor>a8775e4fc539dc457916720f52b442f27</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LodePNGDecompressSettings</name>
    <filename>d0/d79/structLodePNGDecompressSettings.html</filename>
    <member kind="variable">
      <type>unsigned</type>
      <name>ignore_adler32</name>
      <anchorfile>d0/d79/structLodePNGDecompressSettings.html</anchorfile>
      <anchor>afab4b919650b51b4d2f175a60ed6c580</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned(*</type>
      <name>custom_zlib</name>
      <anchorfile>d0/d79/structLodePNGDecompressSettings.html</anchorfile>
      <anchor>abc40604f104a1b2f6d64359c692c09e8</anchor>
      <arglist>)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGDecompressSettings *)</arglist>
    </member>
    <member kind="variable">
      <type>unsigned(*</type>
      <name>custom_inflate</name>
      <anchorfile>d0/d79/structLodePNGDecompressSettings.html</anchorfile>
      <anchor>a6e3d0cc225a66bba82a5b6ef9209b515</anchor>
      <arglist>)(unsigned char **, size_t *, const unsigned char *, size_t, const LodePNGDecompressSettings *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom_context</name>
      <anchorfile>d0/d79/structLodePNGDecompressSettings.html</anchorfile>
      <anchor>aa8d507077609be70ab1f260f04167d91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LodePNGEncoderSettings</name>
    <filename>dc/d15/structLodePNGEncoderSettings.html</filename>
    <member kind="variable">
      <type>LodePNGCompressSettings</type>
      <name>zlibsettings</name>
      <anchorfile>dc/d15/structLodePNGEncoderSettings.html</anchorfile>
      <anchor>a2c5928b4172c75e27de467870f2ff946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LodePNGAutoConvert</type>
      <name>auto_convert</name>
      <anchorfile>dc/d15/structLodePNGEncoderSettings.html</anchorfile>
      <anchor>a4cad5feafb33c208706886bedb93d3d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LodePNGFilterStrategy</type>
      <name>filter_strategy</name>
      <anchorfile>dc/d15/structLodePNGEncoderSettings.html</anchorfile>
      <anchor>a5e18e4eb941763a2e3e6c65ee9f0729c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>predefined_filters</name>
      <anchorfile>dc/d15/structLodePNGEncoderSettings.html</anchorfile>
      <anchor>ad70b06025a5138e5ca02d0035ecccb28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>force_palette</name>
      <anchorfile>dc/d15/structLodePNGEncoderSettings.html</anchorfile>
      <anchor>a04dc9622ccd1d7c74c56291409aa512a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>add_id</name>
      <anchorfile>dc/d15/structLodePNGEncoderSettings.html</anchorfile>
      <anchor>a893aa542aa7c122c32ee36dd716fbcb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>text_compression</name>
      <anchorfile>dc/d15/structLodePNGEncoderSettings.html</anchorfile>
      <anchor>a6ffdcb8e85a65ea208fe027be072d710</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LodePNGInfo</name>
    <filename>d0/dd6/structLodePNGInfo.html</filename>
    <member kind="variable">
      <type>unsigned</type>
      <name>compression_method</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a42bcacd0dbaaea01c04cc87b58ac3c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>filter_method</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a5098d6e8aa528d5197f51914439633b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>interlace_method</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a80207e3e53c959b2285636496a3dd3f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LodePNGColorMode</type>
      <name>color</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a0af9bab3435084780ce8c1cb69bb2628</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>background_defined</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>aa94c65344af02472adb9c71eae2e765f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>background_r</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a98b59c3760bda184bb16c9713b430bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>background_g</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>abf638e191edaeaa2b02c371a381e3a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>background_b</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a994de0c74ef1092f056ff534e00dfa0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>text_num</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a393e0b3948ca6674232e1cc625db282e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>text_keys</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a0a26147c9673870dd122693f17a69b13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>text_strings</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>aac321d27e65c54e56d6092d3a6400a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>itext_num</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a22166bb10c89a4d80e206d6c4736b625</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>itext_keys</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a1b909e03596abf86d564641741b0087f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>itext_langtags</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>ae9f9f594e63c910d467a14f550960837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>itext_transkeys</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a93a8e823ac715dbdd625f023d8fdebc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char **</type>
      <name>itext_strings</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a7014fd40ffeb1d482f72d33c020cf73e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>time_defined</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a9adb9f74ab90716ae107b99da5384424</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LodePNGTime</type>
      <name>time</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a4d3407acdf79bf87f20a3562f210b393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>phys_defined</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a9b8e29b7e7b4908a2de0275e01a828ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>phys_x</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a1593fa6e1acc93f3b9de51c340bef94d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>phys_y</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a52ad7a105244d00f1e91c489eaf53f97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>phys_unit</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>ad6f2171d9f87716e5010f6c5352f9855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>unknown_chunks_data</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a8347476da7fc2fc6af4ec7ed44b638c6</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>unknown_chunks_size</name>
      <anchorfile>d0/dd6/structLodePNGInfo.html</anchorfile>
      <anchor>a25a81d760759bd0383ae5a81ba83911d</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LodePNGState</name>
    <filename>d1/d02/structLodePNGState.html</filename>
    <member kind="variable">
      <type>LodePNGDecoderSettings</type>
      <name>decoder</name>
      <anchorfile>d1/d02/structLodePNGState.html</anchorfile>
      <anchor>abd2c38ffc68f04b0e4159e1f97ba1f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LodePNGEncoderSettings</type>
      <name>encoder</name>
      <anchorfile>d1/d02/structLodePNGState.html</anchorfile>
      <anchor>ac63d91db835129d02eb83bbe81de347e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LodePNGColorMode</type>
      <name>info_raw</name>
      <anchorfile>d1/d02/structLodePNGState.html</anchorfile>
      <anchor>a597bc08de787147474d43adf8b6ceacf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LodePNGInfo</type>
      <name>info_png</name>
      <anchorfile>d1/d02/structLodePNGState.html</anchorfile>
      <anchor>a08d9ac43c995fcf34d72b1d37047b6fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>error</name>
      <anchorfile>d1/d02/structLodePNGState.html</anchorfile>
      <anchor>a1a00a050da588cf3c2b7a6252bebb0cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LodePNGTime</name>
    <filename>d9/da9/structLodePNGTime.html</filename>
    <member kind="variable">
      <type>unsigned</type>
      <name>year</name>
      <anchorfile>d9/da9/structLodePNGTime.html</anchorfile>
      <anchor>a32b68342f39f3d38ba91a721b1149b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>month</name>
      <anchorfile>d9/da9/structLodePNGTime.html</anchorfile>
      <anchor>a295d890e862d5cd0c444e9d3a96fa9d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>day</name>
      <anchorfile>d9/da9/structLodePNGTime.html</anchorfile>
      <anchor>aa3dee3b7b3a1e730fbded7a7b8cf355e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>hour</name>
      <anchorfile>d9/da9/structLodePNGTime.html</anchorfile>
      <anchor>ac99cb7f3ce16a85f9f505b7f5f6e0aa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>minute</name>
      <anchorfile>d9/da9/structLodePNGTime.html</anchorfile>
      <anchor>ac3045de79728f29fc61f534b062e0f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned</type>
      <name>second</name>
      <anchorfile>d9/da9/structLodePNGTime.html</anchorfile>
      <anchor>a6c691c5821e828488a8bb8a90751a2f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ucvector</name>
    <filename>d2/d0b/structucvector.html</filename>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>data</name>
      <anchorfile>d2/d0b/structucvector.html</anchorfile>
      <anchor>ace794c5713208c5a20f21762cd87c919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>d2/d0b/structucvector.html</anchorfile>
      <anchor>a27c99c34de0c5b3ca0c242d402c69499</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>allocsize</name>
      <anchorfile>d2/d0b/structucvector.html</anchorfile>
      <anchor>a235168baac13f0c78bd3e309dc170f90</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>uivector</name>
    <filename>d7/d4e/structuivector.html</filename>
    <member kind="variable">
      <type>unsigned *</type>
      <name>data</name>
      <anchorfile>d7/d4e/structuivector.html</anchorfile>
      <anchor>a427d761df4bb4f0f19b4a973fc224c78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>d7/d4e/structuivector.html</anchorfile>
      <anchor>aa999025945f0c93d0461192475ae2720</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>allocsize</name>
      <anchorfile>d7/d4e/structuivector.html</anchorfile>
      <anchor>aac0395a9ad397ae7a28219561ab49ffa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Assimp</name>
    <filename>d3/da2/namespaceAssimp.html</filename>
  </compound>
  <compound kind="namespace">
    <name>dart</name>
    <filename>d1/d83/namespacedart.html</filename>
    <namespace>dart::collision</namespace>
    <namespace>dart::Color</namespace>
    <namespace>dart::common</namespace>
    <namespace>dart::constraint</namespace>
    <namespace>dart::dynamics</namespace>
    <namespace>dart::gui</namespace>
    <namespace>dart::integration</namespace>
    <namespace>dart::lcpsolver</namespace>
    <namespace>dart::math</namespace>
    <namespace>dart::optimizer</namespace>
    <namespace>dart::planning</namespace>
    <namespace>dart::renderer</namespace>
    <namespace>dart::simulation</namespace>
    <namespace>dart::utils</namespace>
    <member kind="typedef">
      <type>common::sub_ptr&lt; T &gt;</type>
      <name>sub_ptr</name>
      <anchorfile>d1/d83/namespacedart.html</anchorfile>
      <anchor>aaf0980612cd4d36f879823eb69711522</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::collision</name>
    <filename>da/dcd/namespacedart_1_1collision.html</filename>
    <class kind="struct">dart::collision::CollisionFilter</class>
    <class kind="class">dart::collision::BulletCollisionDetector</class>
    <class kind="struct">dart::collision::BulletUserData</class>
    <class kind="class">dart::collision::BulletCollisionNode</class>
    <class kind="struct">dart::collision::Contact</class>
    <class kind="class">dart::collision::CollisionDetector</class>
    <class kind="class">dart::collision::CollisionNode</class>
    <class kind="struct">dart::collision::dContactGeom</class>
    <class kind="class">dart::collision::DARTCollisionDetector</class>
    <class kind="struct">dart::collision::CollisionData</class>
    <class kind="class">dart::collision::FCLCollisionDetector</class>
    <class kind="struct">dart::collision::FCLUserData</class>
    <class kind="class">dart::collision::FCLCollisionNode</class>
    <class kind="class">dart::collision::FCLTypes</class>
    <class kind="class">dart::collision::FCLMeshCollisionDetector</class>
    <class kind="class">dart::collision::FCLMeshCollisionNode</class>
    <member kind="typedef">
      <type>double</type>
      <name>dVector3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a06cbc8d8bf1b517485a30f5fb5f59c7e</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dVector4</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a31d67aec6c73cf30b210e20f78cae13d</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dMatrix3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a41017ac8839d38f79668c697222cddbb</anchor>
      <arglist>[12]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dMatrix4</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a615dc3d4662e37b804eecac1b3a6c1ac</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dMatrix6</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a91e09b519847bdf69dcf0ca7e307195e</anchor>
      <arglist>[48]</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>dQuaternion</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ac42a4d9a17315ebd549ede1a4651511b</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="function">
      <type>btConvexTriangleMeshShape *</type>
      <name>_createMesh</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a22ce5b24dfd6140e14b45be5caf79b2d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_scale, const aiScene *_mesh)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>convertVector3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>af48f34ae3d323de6bee3c08842ed7a41</anchor>
      <arglist>(const btVector3 &amp;_vec)</arglist>
    </member>
    <member kind="function">
      <type>btVector3</type>
      <name>convertVector3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a2f06b4ac7aeef37633e3b3420ab5973c</anchor>
      <arglist>(const Eigen::Vector3d &amp;_vec)</arglist>
    </member>
    <member kind="function">
      <type>btMatrix3x3</type>
      <name>convertMatrix3x3</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a483f89f8346675830080e7699933100f</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>btTransform</type>
      <name>convertTransform</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aac24cea5ee84f5eb396ac2c302296e14</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValidIndex</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a33f6efb853aab20a67e08c7f58e16ae5</anchor>
      <arglist>(const std::vector&lt; std::vector&lt; bool &gt;&gt; &amp;_collidablePairs, const std::size_t _index1, const std::size_t _index2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convVector</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a2ba103455befd217da9a68983578bd34</anchor>
      <arglist>(const Eigen::Vector3d &amp;p0, dVector3 &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convMatrix</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae5963bdaf13514a32a6a6ca2927e7fa4</anchor>
      <arglist>(const Eigen::Isometry3d &amp;T0, dMatrix3 &amp;R0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a582e2b248c47e0301f4f53bc9fbc9fd5</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner14</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ade2fe0e9de532caa8d4b317f59cb6cce</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner41</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a5930bfa267cb2944c3f9b3e3dbd9b314</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Inner44</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a9468049d0828ec2acded2d76495dc68a</anchor>
      <arglist>(const double *a, const double *b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dMULTIPLY0_331</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a6c1b007d5021df4e7c86a53b2983e7f2</anchor>
      <arglist>(double *A, const double *B, const double *C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dMULTIPLY1_331</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae6653a9f95446d3454b7ffed271c7bc7</anchor>
      <arglist>(double *A, const double *B, const double *C)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cullPoints</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae70b4278338a6fa4c3412e30d58b9c18</anchor>
      <arglist>(int n, double p[], int m, int i0, int iret[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dLineClosestApproach</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aac47b960e83b7d7722dc787cc8d7efd2</anchor>
      <arglist>(const dVector3 pa, const dVector3 ua, const dVector3 pb, const dVector3 ub, double *alpha, double *beta)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>intersectRectQuad</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a3a0ff848fc18f09ae206645081fcab0e</anchor>
      <arglist>(double h[2], double p[8], double ret[16])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dClosestLineBoxPoints</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a8bbea9f76289149a458a4b776ff71e97</anchor>
      <arglist>(const dVector3 p1, const dVector3 p2, const dVector3 c, const dMatrix3 R, const dVector3 side, dVector3 lret, dVector3 bret)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dBoxBox</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a25cacdc5959f6018d3ec73f549fe75c6</anchor>
      <arglist>(const dVector3 p1, const dMatrix3 R1, const dVector3 side1, const dVector3 p2, const dMatrix3 R2, const dVector3 side2, std::vector&lt; Contact &gt; &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideBoxBox</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ab9843f8d5c225b021193e8c54e3dfa79</anchor>
      <arglist>(const Eigen::Vector3d &amp;size0, const Eigen::Isometry3d &amp;T0, const Eigen::Vector3d &amp;size1, const Eigen::Isometry3d &amp;T1, std::vector&lt; Contact &gt; *result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideBoxSphere</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>aa37e5f03947916b8f3da016a5572f795</anchor>
      <arglist>(const Eigen::Vector3d &amp;size0, const Eigen::Isometry3d &amp;T0, const double &amp;r1, const Eigen::Isometry3d &amp;T1, std::vector&lt; Contact &gt; *result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideSphereBox</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>af5ad125996af8462bb6b494d90f3fa43</anchor>
      <arglist>(const double &amp;r0, const Eigen::Isometry3d &amp;T0, const Eigen::Vector3d &amp;size1, const Eigen::Isometry3d &amp;T1, std::vector&lt; Contact &gt; *result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideSphereSphere</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a92de52212abc3e2d52442597b44b56a1</anchor>
      <arglist>(const double &amp;_r0, const Eigen::Isometry3d &amp;c0, const double &amp;_r1, const Eigen::Isometry3d &amp;c1, std::vector&lt; Contact &gt; *result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideCylinderSphere</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a57ae18620eae66a8812e1784acb9de1b</anchor>
      <arglist>(const double &amp;cyl_rad, const double &amp;half_height, const Eigen::Isometry3d &amp;T0, const double &amp;sphere_rad, const Eigen::Isometry3d &amp;T1, std::vector&lt; Contact &gt; *result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collideCylinderPlane</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a74d6cbac277625331a4a0adeb7d7c0cd</anchor>
      <arglist>(const double &amp;cyl_rad, const double &amp;half_height, const Eigen::Isometry3d &amp;T0, const Eigen::Vector3d &amp;plane_normal, const Eigen::Isometry3d &amp;T1, std::vector&lt; Contact &gt; *result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collide</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a5a95a1596a7c4011fb36b22af90cbadd</anchor>
      <arglist>(dynamics::ConstShapePtr _shape0, const Eigen::Isometry3d &amp;_T0, dynamics::ConstShapePtr _shape1, const Eigen::Isometry3d &amp;_T1, std::vector&lt; Contact &gt; *_result)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>collide</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a4584df7639ad83c98ad22747368dbaa0</anchor>
      <arglist>(dart::dynamics::ConstShapePtr _shape0, const Eigen::Isometry3d &amp;_T0, dart::dynamics::ConstShapePtr _shape1, const Eigen::Isometry3d &amp;_T1, std::vector&lt; Contact &gt; *_result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>collisionCallBack</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a8314ed4d521bfb1a3f604452957344e9</anchor>
      <arglist>(fcl::CollisionObject *_o1, fcl::CollisionObject *_o2, void *_cdata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isClose</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ab5140bbf7847568e359958896d7a4077</anchor>
      <arglist>(const Eigen::Vector3d &amp;_point1, const Eigen::Vector3d &amp;_point2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasClosePoint</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a82b1579f129bc71de11774cad7fddade</anchor>
      <arglist>(const std::vector&lt; Contact &gt; &amp;_contacts, const Eigen::Vector3d &amp;_point)</arglist>
    </member>
    <member kind="function">
      <type>fcl::BVHModel&lt; BV &gt; *</type>
      <name>createEllipsoid</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a3a42c7afbeb5d268bc555cbd9859bcbb</anchor>
      <arglist>(float _sizeX, float _sizeY, float _sizeZ)</arglist>
    </member>
    <member kind="function">
      <type>fcl::BVHModel&lt; BV &gt; *</type>
      <name>createMesh</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a45fa8ae5b072cf705cc2b78b5df68ed7</anchor>
      <arglist>(float _scaleX, float _scaleY, float _scaleZ, const aiScene *_mesh)</arglist>
    </member>
    <member kind="function">
      <type>fcl::BVHModel&lt; BV &gt; *</type>
      <name>createSoftMesh</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a02f1211f19abf81c116e5c5052de3681</anchor>
      <arglist>(const aiMesh *_mesh, const fcl::Transform3f &amp;_transform)</arglist>
    </member>
    <member kind="function">
      <type>fcl::BVHModel&lt; BV &gt; *</type>
      <name>createMesh</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a33d9e432d1c8108756e0a356490e71a0</anchor>
      <arglist>(float _scaleX, float _scaleY, float _scaleZ, const aiScene *_mesh, const fcl::Transform3f &amp;_transform)</arglist>
    </member>
    <member kind="function">
      <type>fcl::BVHModel&lt; BV &gt; *</type>
      <name>createEllipsoid</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>af3e97734fb6d0fa41220589c7bef62ed</anchor>
      <arglist>(float _sizeX, float _sizeY, float _sizeZ, const fcl::Transform3f &amp;_transform)</arglist>
    </member>
    <member kind="function">
      <type>fcl::BVHModel&lt; BV &gt; *</type>
      <name>createCube</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a867c7d3c8dff56789567e8de05636fca</anchor>
      <arglist>(float _sizeX, float _sizeY, float _sizeZ, const fcl::Transform3f &amp;_transform)</arglist>
    </member>
    <member kind="function">
      <type>fcl::BVHModel&lt; BV &gt; *</type>
      <name>createCylinder</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ac9dd5c8a6c4e027007a229104f2dea4e</anchor>
      <arglist>(double _baseRadius, double _topRadius, double _height, int _slices, int _stacks, const fcl::Transform3f &amp;_transform)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>MAX_CYLBOX_CLIP_POINTS</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a80ba017c7bf196a9663e0a9d3cd8578b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>nCYLINDER_AXIS</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>a4146747250f23fa87196b56d54138c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>nCYLINDER_SEGMENT</name>
      <anchorfile>da/dcd/namespacedart_1_1collision.html</anchorfile>
      <anchor>ae7562cb943cd38b057831387484bea04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::CollisionFilter</name>
    <filename>d5/d5b/structdart_1_1collision_1_1CollisionFilter.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>needBroadphaseCollision</name>
      <anchorfile>d5/d5b/structdart_1_1collision_1_1CollisionFilter.html</anchorfile>
      <anchor>ae10be09a494ce2458d23e210747da45a</anchor>
      <arglist>(btBroadphaseProxy *_proxy0, btBroadphaseProxy *_proxy1) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::BulletCollisionDetector</name>
    <filename>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</filename>
    <base>dart::collision::CollisionDetector</base>
    <member kind="function">
      <type></type>
      <name>BulletCollisionDetector</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a1ac57754114a7b0c0e398eaa4e04d2e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BulletCollisionDetector</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a2125853237e218996f4048f31c223c23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CollisionNode *</type>
      <name>createCollisionNode</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a5d3421a06def12d963d665532e8d411c</anchor>
      <arglist>(dynamics::BodyNode *_bodyNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>detectCollision</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>aa3d113c5d52f4d0129d19d96aaaf7559</anchor>
      <arglist>(bool _checkAllCollisions, bool _calculateContactPoints)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CollisionDetector</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a3251710bd10d8bc4f8ac4aa9633e461a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CollisionDetector</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a67a8c71739b03cfd4998019cab60d902</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addSkeleton</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a045f24758f6d26871c77b44178f54a8d</anchor>
      <arglist>(const dynamics::SkeletonPtr &amp;_skeleton)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeSkeleton</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a346ff161de276478801df5030e0c8893</anchor>
      <arglist>(const dynamics::SkeletonPtr &amp;_skeleton)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeAllSkeletons</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>abedbba8721f7cb7e2481a54efbd44164</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addCollisionSkeletonNode</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a9cfc6f9e9a5271f35059a9d57079e8f5</anchor>
      <arglist>(dynamics::BodyNode *_bodyNode, bool _isRecursive=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeCollisionSkeletonNode</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a819f9b742f1dd5a7b4188383049d3323</anchor>
      <arglist>(dynamics::BodyNode *_bodyNode, bool _isRecursive=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enablePair</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>ae694c3a1f2b9365955f3a7b047d5e7e0</anchor>
      <arglist>(dynamics::BodyNode *_node1, dynamics::BodyNode *_node2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disablePair</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a141fcf588badc77e9d5a894b731a279a</anchor>
      <arglist>(dynamics::BodyNode *_node1, dynamics::BodyNode *_node2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>detectCollision</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a4ccba1a776445d53483a0a4fe3eefd5a</anchor>
      <arglist>(dynamics::BodyNode *_node1, dynamics::BodyNode *_node2, bool _calculateContactPoints)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumContacts</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>acd74a660fdb273995fd40ee95c36792b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Contact &amp;</type>
      <name>getContact</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a1c0e54cc2bde682c3db6e856fbb391d7</anchor>
      <arglist>(int _idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAllContacts</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a18430be883e538e2267fd3cfc4b2e758</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumMaxContacts</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>ac02ef34a12905bb7a7c584ef4719049c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumMaxContacs</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a9cb9d976135575a0fb63aae6cbdcab30</anchor>
      <arglist>(int _num)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollidable</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>ae3694c95501d0107a7bac7a2f0df0f05</anchor>
      <arglist>(const CollisionNode *_node1, const CollisionNode *_node2)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>detectCollision</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>afa26bd69446b1ebc006d2d23bc05594f</anchor>
      <arglist>(CollisionNode *_node1, CollisionNode *_node2, bool _calculateContactPoints)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>btCollisionWorld *</type>
      <name>mBulletCollisionWorld</name>
      <anchorfile>d1/d61/classdart_1_1collision_1_1BulletCollisionDetector.html</anchorfile>
      <anchor>a30fcc4c4b045252478f041582d4d5549</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Contact &gt;</type>
      <name>mContacts</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>acd6ce6732ea375327215f983a2d8fe08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; CollisionNode * &gt;</type>
      <name>mCollisionNodes</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a24dc8e655d0d138c38d7e58aefef389b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mNumMaxContacts</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a7d452d1d39de4829cfe3741120228960</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; dynamics::SkeletonPtr &gt;</type>
      <name>mSkeletons</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a0e6be24a3ec76c8ac23fc5ae1331ef2b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::BulletUserData</name>
    <filename>d2/d90/structdart_1_1collision_1_1BulletUserData.html</filename>
    <member kind="variable">
      <type>dynamics::BodyNode *</type>
      <name>bodyNode</name>
      <anchorfile>d2/d90/structdart_1_1collision_1_1BulletUserData.html</anchorfile>
      <anchor>a831794f024f576d250d6b057f4babb34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dynamics::ConstShapePtr</type>
      <name>shape</name>
      <anchorfile>d2/d90/structdart_1_1collision_1_1BulletUserData.html</anchorfile>
      <anchor>a7de82484da5874fe5d6e05ec4ddc9406</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BulletCollisionNode *</type>
      <name>btCollNode</name>
      <anchorfile>d2/d90/structdart_1_1collision_1_1BulletUserData.html</anchorfile>
      <anchor>ad0706118a876db3fb0845b234b875583</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BulletCollisionDetector *</type>
      <name>btCollDet</name>
      <anchorfile>d2/d90/structdart_1_1collision_1_1BulletUserData.html</anchorfile>
      <anchor>a9ef2ccd8d045de50347bbe04a736c350</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::BulletCollisionNode</name>
    <filename>d6/dc0/classdart_1_1collision_1_1BulletCollisionNode.html</filename>
    <base>dart::collision::CollisionNode</base>
    <member kind="function">
      <type></type>
      <name>BulletCollisionNode</name>
      <anchorfile>d6/dc0/classdart_1_1collision_1_1BulletCollisionNode.html</anchorfile>
      <anchor>a9cee6e978318d02e540659b2529f4591</anchor>
      <arglist>(dynamics::BodyNode *_bodyNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BulletCollisionNode</name>
      <anchorfile>d6/dc0/classdart_1_1collision_1_1BulletCollisionNode.html</anchorfile>
      <anchor>ad201383d0e4505278ba579c3411a5804</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateBulletCollisionObjects</name>
      <anchorfile>d6/dc0/classdart_1_1collision_1_1BulletCollisionNode.html</anchorfile>
      <anchor>ab434aad5409a0e2e2b289394bd6b858f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumBulletCollisionObjects</name>
      <anchorfile>d6/dc0/classdart_1_1collision_1_1BulletCollisionNode.html</anchorfile>
      <anchor>a59c5e02df3932a79e508f2ee1cbd2f3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>btCollisionObject *</type>
      <name>getBulletCollisionObject</name>
      <anchorfile>d6/dc0/classdart_1_1collision_1_1BulletCollisionNode.html</anchorfile>
      <anchor>aed9ff18c1e1eba179d9e4fec797a5ba1</anchor>
      <arglist>(int _i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CollisionNode</name>
      <anchorfile>d7/d54/classdart_1_1collision_1_1CollisionNode.html</anchorfile>
      <anchor>a971ec63ccdf19fc3083574cd57008461</anchor>
      <arglist>(dynamics::BodyNode *_bodyNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CollisionNode</name>
      <anchorfile>d7/d54/classdart_1_1collision_1_1CollisionNode.html</anchorfile>
      <anchor>a572ac393e5b4c9b7b89f45d17a771709</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dynamics::BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d7/d54/classdart_1_1collision_1_1CollisionNode.html</anchorfile>
      <anchor>a6e270c6994bdd01a43a45dcfad7a7cd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIndex</name>
      <anchorfile>d7/d54/classdart_1_1collision_1_1CollisionNode.html</anchorfile>
      <anchor>ab9b9ef4792bb278c88ce8befdee40534</anchor>
      <arglist>(size_t _idx)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndex</name>
      <anchorfile>d7/d54/classdart_1_1collision_1_1CollisionNode.html</anchorfile>
      <anchor>af05373954d76208dd7e133441dd480fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; btCollisionObject * &gt;</type>
      <name>mbtCollsionObjects</name>
      <anchorfile>d6/dc0/classdart_1_1collision_1_1BulletCollisionNode.html</anchorfile>
      <anchor>a55ceed21bd5542b0e7532bf7f230d619</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode</name>
      <anchorfile>d7/d54/classdart_1_1collision_1_1CollisionNode.html</anchorfile>
      <anchor>a1218300a48f7418f0d62c24b5599fb07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mIndex</name>
      <anchorfile>d7/d54/classdart_1_1collision_1_1CollisionNode.html</anchorfile>
      <anchor>a9afed55289116a9f76f2b5c7bfa905b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::Contact</name>
    <filename>db/d36/structdart_1_1collision_1_1Contact.html</filename>
    <member kind="variable">
      <type>EIGEN_MAKE_ALIGNED_OPERATOR_NEW Eigen::Vector3d</type>
      <name>point</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a0b5303ec371e84b7eb7d841f75b6edf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>normal</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a98fa09fd5905b8da9560a646ff5f7691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>force</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a341f95060d133bc8032270027f40c31b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dynamics::WeakBodyNodePtr</type>
      <name>bodyNode1</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a93c38517073337c071b2443ac68d7c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dynamics::WeakBodyNodePtr</type>
      <name>bodyNode2</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a42982506e31e2bcaefdddddd481c22dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dynamics::ShapePtr</type>
      <name>shape1</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>aefaa1220df264d2021d7293f2b58b9fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dynamics::ShapePtr</type>
      <name>shape2</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a9683fabb91eadf477f4a285562f73bf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>penetrationDepth</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a38f05bdd7d0f9a45f6b701cc09d98546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>triID1</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a698f5fc055669801222cea8a89b37bd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>triID2</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a626e1c07725072a5f62aa59705450420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>userData</name>
      <anchorfile>db/d36/structdart_1_1collision_1_1Contact.html</anchorfile>
      <anchor>a3b8594baba7d58648554edf424de68b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::CollisionDetector</name>
    <filename>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual CollisionNode *</type>
      <name>createCollisionNode</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a82d26ba24f9e882bb6c7398a756656ce</anchor>
      <arglist>(dynamics::BodyNode *_bodyNode)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>detectCollision</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a167be95a849ac3e8da691e73b6f7352f</anchor>
      <arglist>(bool _checkAllCollisions, bool _calculateContactPoints)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>detectCollision</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a2ffe5a1964c70806f3c5d455daa0da6b</anchor>
      <arglist>(CollisionNode *_node1, CollisionNode *_node2, bool _calculateContactPoints)=0</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>containSkeleton</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>ac5c0e0586a036ef5b03d6823fe3cbb2e</anchor>
      <arglist>(const dynamics::SkeletonPtr &amp;_skeleton)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>getPairCollidable</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a65520f68e5758501691b2e2d3a02b7d9</anchor>
      <arglist>(const CollisionNode *_node1, const CollisionNode *_node2)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setPairCollidable</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a95d115c42f2fe24b01a9fbef61f4dfa1</anchor>
      <arglist>(const CollisionNode *_node1, const CollisionNode *_node2, bool _val)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isAdjacentBodies</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a8a435ca7316632314b2992e79e4bb855</anchor>
      <arglist>(const dynamics::BodyNode *_bodyNode1, const dynamics::BodyNode *_bodyNode2) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>CollisionNode *</type>
      <name>getCollisionNode</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>ae75375535f3da4be81c25da6d763b918</anchor>
      <arglist>(const dynamics::BodyNode *_bodyNode)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; const dynamics::BodyNode *, CollisionNode * &gt;</type>
      <name>mBodyCollisionMap</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>a5b82c56c55873411ae48665f0c4d56dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; bool &gt; &gt;</type>
      <name>mCollidablePairs</name>
      <anchorfile>d6/de8/classdart_1_1collision_1_1CollisionDetector.html</anchorfile>
      <anchor>abc6906bfbd2852b6e09a2d1181d925b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::CollisionNode</name>
    <filename>d7/d54/classdart_1_1collision_1_1CollisionNode.html</filename>
  </compound>
  <compound kind="struct">
    <name>dart::collision::dContactGeom</name>
    <filename>d9/dea/structdart_1_1collision_1_1dContactGeom.html</filename>
    <member kind="variable">
      <type>dVector3</type>
      <name>pos</name>
      <anchorfile>d9/dea/structdart_1_1collision_1_1dContactGeom.html</anchorfile>
      <anchor>a14c9536ba5f67da9fa8e83c87c981c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>depth</name>
      <anchorfile>d9/dea/structdart_1_1collision_1_1dContactGeom.html</anchorfile>
      <anchor>a347c892ff69b225e76ca4a7295254606</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::DARTCollisionDetector</name>
    <filename>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</filename>
    <base>dart::collision::CollisionDetector</base>
    <member kind="function">
      <type></type>
      <name>DARTCollisionDetector</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>acd1bb511b14a5d1fb1a127ee3e253d9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DARTCollisionDetector</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>a3c38b48b67e5143d6f8d5839fe0a1a5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CollisionNode *</type>
      <name>createCollisionNode</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>a78babea5a0f0b305b5c32e66225102ce</anchor>
      <arglist>(dynamics::BodyNode *_bodyNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>detectCollision</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>acba8c185ea9c0e34aa93ab7717b6ca2f</anchor>
      <arglist>(bool _checkAllCollisions, bool _calculateContactPoints)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>detectCollision</name>
      <anchorfile>dd/d2f/classdart_1_1collision_1_1DARTCollisionDetector.html</anchorfile>
      <anchor>a19819d1ba633d17f449437c475eba871</anchor>
      <arglist>(CollisionNode *_collNode1, CollisionNode *_collNode2, bool _calculateContactPoints)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::CollisionData</name>
    <filename>d0/d20/structdart_1_1collision_1_1CollisionData.html</filename>
    <member kind="function">
      <type></type>
      <name>CollisionData</name>
      <anchorfile>d0/d20/structdart_1_1collision_1_1CollisionData.html</anchorfile>
      <anchor>aff1398a766f599bb6ee475cc20e0388b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>fcl::CollisionRequest</type>
      <name>request</name>
      <anchorfile>d0/d20/structdart_1_1collision_1_1CollisionData.html</anchorfile>
      <anchor>a6d53efa840cca8d669d5796ca27eafb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>fcl::CollisionResult</type>
      <name>result</name>
      <anchorfile>d0/d20/structdart_1_1collision_1_1CollisionData.html</anchorfile>
      <anchor>a9df141b3005f79809a7109cd8c3780b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FCLCollisionDetector *</type>
      <name>collisionDetector</name>
      <anchorfile>d0/d20/structdart_1_1collision_1_1CollisionData.html</anchorfile>
      <anchor>aa0cda41a638436b42c1062d0da845e7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>done</name>
      <anchorfile>d0/d20/structdart_1_1collision_1_1CollisionData.html</anchorfile>
      <anchor>a1847d976a443528e6b5ccf3ff1ca4b2b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::FCLCollisionDetector</name>
    <filename>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</filename>
    <base>dart::collision::CollisionDetector</base>
    <member kind="function">
      <type></type>
      <name>FCLCollisionDetector</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a21016049c1f32c5683da660ef35a40cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCLCollisionDetector</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a6bc2fe2ddc2bda62839847bdb7267fd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>detectCollision</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>afe43892e73e2dae03ffc9d76fbf1f6f7</anchor>
      <arglist>(bool _checkAllCollisions, bool _calculateContactPoints) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CollisionNode *</type>
      <name>createCollisionNode</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>aa36468dace79c4fbf08f1cc4a5dedb7d</anchor>
      <arglist>(dynamics::BodyNode *_bodyNode) override</arglist>
    </member>
    <member kind="function">
      <type>CollisionNode *</type>
      <name>findCollisionNode</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a194f8c376db8d671173f157f1bf237ad</anchor>
      <arglist>(const fcl::CollisionGeometry *_fclCollGeom) const </arglist>
    </member>
    <member kind="function">
      <type>FCLCollisionNode *</type>
      <name>findCollisionNode</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>a37e5220e73956023334380071f279c65</anchor>
      <arglist>(const fcl::CollisionObject *_fclCollObj) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>detectCollision</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>ae8614e48c1193cb654efd81ebf98d8b4</anchor>
      <arglist>(CollisionNode *_node1, CollisionNode *_node2, bool _calculateContactPoints) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>fcl::DynamicAABBTreeCollisionManager *</type>
      <name>mBroadPhaseAlg</name>
      <anchorfile>d1/dce/classdart_1_1collision_1_1FCLCollisionDetector.html</anchorfile>
      <anchor>ad5e50c0ecc7f33c302e16e7662fc3a52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::collision::FCLUserData</name>
    <filename>da/dc2/structdart_1_1collision_1_1FCLUserData.html</filename>
    <member kind="function">
      <type></type>
      <name>FCLUserData</name>
      <anchorfile>da/dc2/structdart_1_1collision_1_1FCLUserData.html</anchorfile>
      <anchor>ac3c7e66cb55af5cafb9ccbe6a69bbfa0</anchor>
      <arglist>(FCLCollisionNode *_fclCollNode, dynamics::BodyNode *_bodyNode, dynamics::Shape *_shape)</arglist>
    </member>
    <member kind="variable">
      <type>FCLCollisionNode *</type>
      <name>fclCollNode</name>
      <anchorfile>da/dc2/structdart_1_1collision_1_1FCLUserData.html</anchorfile>
      <anchor>ac6d088ecf69b23ab646ee5209edd7704</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dynamics::BodyNode *</type>
      <name>bodyNode</name>
      <anchorfile>da/dc2/structdart_1_1collision_1_1FCLUserData.html</anchorfile>
      <anchor>aa28809f14ec0c9f1b0554ee50f856f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dynamics::Shape *</type>
      <name>shape</name>
      <anchorfile>da/dc2/structdart_1_1collision_1_1FCLUserData.html</anchorfile>
      <anchor>aa6a8b0a6c809c7cbe50fbb0af62a305c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::FCLCollisionNode</name>
    <filename>da/d82/classdart_1_1collision_1_1FCLCollisionNode.html</filename>
    <base>dart::collision::CollisionNode</base>
    <member kind="function">
      <type></type>
      <name>FCLCollisionNode</name>
      <anchorfile>da/d82/classdart_1_1collision_1_1FCLCollisionNode.html</anchorfile>
      <anchor>a3920bacd59fa3a250ab1514dc02ccdaf</anchor>
      <arglist>(dynamics::BodyNode *_bodyNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCLCollisionNode</name>
      <anchorfile>da/d82/classdart_1_1collision_1_1FCLCollisionNode.html</anchorfile>
      <anchor>ac9a103da8ba1c97c192c326a740514e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumCollisionObjects</name>
      <anchorfile>da/d82/classdart_1_1collision_1_1FCLCollisionNode.html</anchorfile>
      <anchor>af974ed83e8ed2f05ea1014a3bdcb88e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>fcl::CollisionObject *</type>
      <name>getCollisionObject</name>
      <anchorfile>da/d82/classdart_1_1collision_1_1FCLCollisionNode.html</anchorfile>
      <anchor>ad6246454c5244c042fb8dc69b5e26d80</anchor>
      <arglist>(size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>fcl::Transform3f</type>
      <name>getFCLTransform</name>
      <anchorfile>da/d82/classdart_1_1collision_1_1FCLCollisionNode.html</anchorfile>
      <anchor>a39a40334ddbd633f5dd12ad878ead9aa</anchor>
      <arglist>(size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFCLCollisionObjects</name>
      <anchorfile>da/d82/classdart_1_1collision_1_1FCLCollisionNode.html</anchorfile>
      <anchor>ab36d3f8675edb642915eb8c2b8b2123c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; fcl::CollisionObject * &gt;</type>
      <name>mCollisionObjects</name>
      <anchorfile>da/d82/classdart_1_1collision_1_1FCLCollisionNode.html</anchorfile>
      <anchor>ad14622108e78b2cb3ab8ba142bd04ffb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::FCLTypes</name>
    <filename>db/df9/classdart_1_1collision_1_1FCLTypes.html</filename>
    <member kind="function" static="yes">
      <type>static Eigen::Vector3d</type>
      <name>convertVector3</name>
      <anchorfile>db/df9/classdart_1_1collision_1_1FCLTypes.html</anchorfile>
      <anchor>aa77c25ed710116697ac81306e7167653</anchor>
      <arglist>(const fcl::Vec3f &amp;_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static fcl::Vec3f</type>
      <name>convertVector3</name>
      <anchorfile>db/df9/classdart_1_1collision_1_1FCLTypes.html</anchorfile>
      <anchor>a96ca42397d29e2c38cc734e6097d731b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static fcl::Matrix3f</type>
      <name>convertMatrix3x3</name>
      <anchorfile>db/df9/classdart_1_1collision_1_1FCLTypes.html</anchorfile>
      <anchor>ab8cfed4ee5b9af680b6218ec2a3ece61</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static fcl::Transform3f</type>
      <name>convertTransform</name>
      <anchorfile>db/df9/classdart_1_1collision_1_1FCLTypes.html</anchorfile>
      <anchor>a03a6fc40b44db3c2df4e30793ae1b5eb</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::FCLMeshCollisionDetector</name>
    <filename>d6/d5c/classdart_1_1collision_1_1FCLMeshCollisionDetector.html</filename>
    <base>dart::collision::CollisionDetector</base>
    <member kind="function">
      <type></type>
      <name>FCLMeshCollisionDetector</name>
      <anchorfile>d6/d5c/classdart_1_1collision_1_1FCLMeshCollisionDetector.html</anchorfile>
      <anchor>a88e4c31158fb35bc97cb43dcd236609b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCLMeshCollisionDetector</name>
      <anchorfile>d6/d5c/classdart_1_1collision_1_1FCLMeshCollisionDetector.html</anchorfile>
      <anchor>a56adec6a03cd3d0b7a6025da710be70d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual CollisionNode *</type>
      <name>createCollisionNode</name>
      <anchorfile>d6/d5c/classdart_1_1collision_1_1FCLMeshCollisionDetector.html</anchorfile>
      <anchor>abab9f907153cc5feced99da45095669f</anchor>
      <arglist>(dynamics::BodyNode *_bodyNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>detectCollision</name>
      <anchorfile>d6/d5c/classdart_1_1collision_1_1FCLMeshCollisionDetector.html</anchorfile>
      <anchor>afc1aa0488382e1571813e430aee16b6e</anchor>
      <arglist>(bool _checkAllCollisions, bool _calculateContactPoints)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>detectCollision</name>
      <anchorfile>d6/d5c/classdart_1_1collision_1_1FCLMeshCollisionDetector.html</anchorfile>
      <anchor>ab19964a4e6990161608a999c5b830947</anchor>
      <arglist>(CollisionNode *_node1, CollisionNode *_node2, bool _calculateContactPoints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>d6/d5c/classdart_1_1collision_1_1FCLMeshCollisionDetector.html</anchorfile>
      <anchor>aa64276cdc7b11b24d3183172b28e7c28</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::collision::FCLMeshCollisionNode</name>
    <filename>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</filename>
    <base>dart::collision::CollisionNode</base>
    <member kind="function">
      <type>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</type>
      <name>FCLMeshCollisionNode</name>
      <anchorfile>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</anchorfile>
      <anchor>adb858ceb3b7d3ec40f4b09e1e254b2a6</anchor>
      <arglist>(dynamics::BodyNode *_bodyNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FCLMeshCollisionNode</name>
      <anchorfile>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</anchorfile>
      <anchor>aa2b17aaac13f4cbaba1685a86e0fc02b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>detectCollision</name>
      <anchorfile>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</anchorfile>
      <anchor>ac14e7136fa2d39add9618855aa008f08</anchor>
      <arglist>(FCLMeshCollisionNode *_otherNode, std::vector&lt; Contact &gt; *_contactPoints, int _max_num_contact)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateShape</name>
      <anchorfile>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</anchorfile>
      <anchor>acbcc6c5a6a748cceb06bab9fce901a7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalRT</name>
      <anchorfile>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</anchorfile>
      <anchor>ac149e443c7a4443617546badc4a2d991</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawCollisionSkeletonNode</name>
      <anchorfile>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</anchorfile>
      <anchor>a6e6b2e0116db3c7269b794e453fb82bb</anchor>
      <arglist>(bool _bTrans=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static fcl::Transform3f</type>
      <name>getFclTransform</name>
      <anchorfile>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</anchorfile>
      <anchor>aa1f5a773fb49c846569069ad2b717152</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_m)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>evalContactPosition</name>
      <anchorfile>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</anchorfile>
      <anchor>a6b359aa7469a78bf2571545d6510777e</anchor>
      <arglist>(const fcl::Contact &amp;_fclContact, fcl::BVHModel&lt; fcl::OBBRSS &gt; *_mesh1, fcl::BVHModel&lt; fcl::OBBRSS &gt; *_mesh2, const fcl::Transform3f &amp;_transform1, const fcl::Transform3f &amp;_transform2, Eigen::Vector3d *_contactPosition1, Eigen::Vector3d *_contactPosition2)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; fcl::BVHModel&lt; fcl::OBBRSS &gt; * &gt;</type>
      <name>mMeshes</name>
      <anchorfile>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</anchorfile>
      <anchor>ac3f355e068b9ccb52f6831861731c2d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>fcl::Transform3f</type>
      <name>mFclWorldTrans</name>
      <anchorfile>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</anchorfile>
      <anchor>aedee170e90372560b8b62e6d7a96d480</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Isometry3d</type>
      <name>mWorldTrans</name>
      <anchorfile>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</anchorfile>
      <anchor>a2aa4963a4480ed515680160b8c0fdac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EFtest</name>
      <anchorfile>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</anchorfile>
      <anchor>a42ba4ad665b149c100d6de40b44dcd2a</anchor>
      <arglist>(const fcl::Vec3f &amp;p0, const fcl::Vec3f &amp;p1, const fcl::Vec3f &amp;r1, const fcl::Vec3f &amp;r2, const fcl::Vec3f &amp;r3, fcl::Vec3f *p)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static int</type>
      <name>FFtest</name>
      <anchorfile>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</anchorfile>
      <anchor>a82e3977840eef656848fb5093564b7b1</anchor>
      <arglist>(const fcl::Vec3f &amp;r1, const fcl::Vec3f &amp;r2, const fcl::Vec3f &amp;r3, const fcl::Vec3f &amp;R1, const fcl::Vec3f &amp;R2, const fcl::Vec3f &amp;R3, fcl::Vec3f *res1, fcl::Vec3f *res2)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static double</type>
      <name>triArea</name>
      <anchorfile>d9/d3b/classdart_1_1collision_1_1FCLMeshCollisionNode.html</anchorfile>
      <anchor>aee0ddd61f8d37b58e8f549ea72409d31</anchor>
      <arglist>(fcl::Vec3f p1, fcl::Vec3f p2, fcl::Vec3f p3)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::Color</name>
    <filename>db/dbc/namespacedart_1_1Color.html</filename>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Red</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a4d3ab5b883e6b4acf99db77b646d5da0</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Red</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a40c325dd75125cb0ba7277a867483803</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Fuschia</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a83fcb93f2c424e8730a11b466d3dfa76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Fuschia</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a5320f9fccb6f5761d28d46223a01a58c</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Orange</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>aa1817741b56722a3f2a8eb77280bd01f</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Orange</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>ac7590f97cfe8ec52c79464f8ee6dea90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Green</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a1902c703d717eebe4d4f6a16d01cdeee</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Green</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>ad96afa4f4d8ec8978b290fd523808370</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Blue</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a506bd8873182731f88cb7e1c7821b79b</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Blue</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a57f3def52e94e339f925a8e201ff19aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>White</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a95baa2baa822a5e60a40f0fdc71755f4</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>White</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a605d2515b7418b0dc9f35692848b7205</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Black</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>afdebec5b20247f3710cdaf5b0a6ba557</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Black</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>ad94ba7c65abc6fd92af64a0db7df6f35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Gray</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a04e0e028617699c7bef41185553f647f</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Gray</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>a739634da0225a64ff91934c5c6dfc61b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector4d</type>
      <name>Random</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>abf40261d480d1df44618b7c87b02a4dc</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>Random</name>
      <anchorfile>db/dbc/namespacedart_1_1Color.html</anchorfile>
      <anchor>afaca5d4bbd8610cdd766bfa9a922134a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::common</name>
    <filename>dd/d6b/namespacedart_1_1common.html</filename>
    <namespace>dart::common::signal</namespace>
    <class kind="class">dart::common::LocalResource</class>
    <class kind="class">dart::common::LocalResourceRetriever</class>
    <class kind="class">dart::common::NameManager</class>
    <class kind="class">dart::common::Observer</class>
    <class kind="class">dart::common::Resource</class>
    <class kind="class">dart::common::ResourceRetriever</class>
    <class kind="class">dart::common::Connection</class>
    <class kind="class">dart::common::ScopedConnection</class>
    <class kind="class">dart::common::Signal</class>
    <class kind="class">dart::common::Signal&lt; _Res(_ArgTypes...), Combiner &gt;</class>
    <class kind="class">dart::common::Signal&lt; void(_ArgTypes...)&gt;</class>
    <class kind="class">dart::common::SlotRegister</class>
    <class kind="class">dart::common::sub_ptr</class>
    <class kind="class">dart::common::Subject</class>
    <class kind="class">dart::common::Timer</class>
    <class kind="class">dart::common::UriComponent</class>
    <class kind="struct">dart::common::Uri</class>
    <member kind="typedef">
      <type>std::shared_ptr&lt; LocalResourceRetriever &gt;</type>
      <name>LocalResourceRetrieverPtr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a7e980fe2587497d7848324ae6a805c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Resource &gt;</type>
      <name>ResourcePtr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a17b6f1fe8c719e1059adc09c4f43df67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; ResourceRetriever &gt;</type>
      <name>ResourceRetrieverPtr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>a79a12a817633757c8465245b78d91bfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>colorMsg</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>af7e228b6914a47b7f42e43d0ed615e7b</anchor>
      <arglist>(const std::string &amp;_msg, int _color)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>colorErr</name>
      <anchorfile>dd/d6b/namespacedart_1_1common.html</anchorfile>
      <anchor>afe69bb6c9e434a7421aee6dbeaa7c195</anchor>
      <arglist>(const std::string &amp;_msg, const std::string &amp;_file, unsigned int _line, int _color)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::LocalResource</name>
    <filename>d5/db8/classdart_1_1common_1_1LocalResource.html</filename>
    <base virtualness="virtual">dart::common::Resource</base>
    <member kind="function">
      <type></type>
      <name>LocalResource</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>a743ca6a52936eedce2dcdba497fec4d0</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LocalResource</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>aad3364813d04a2e8c987e632d353ad08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocalResource</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>a25d0102f970c0ba4e8cac6069cee2542</anchor>
      <arglist>(const LocalResource &amp;_other)=delete</arglist>
    </member>
    <member kind="function">
      <type>LocalResource &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>ae6ae936d041ae7d891b5e8df8393c177</anchor>
      <arglist>(const LocalResource &amp;_other)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGood</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>a76a2e296580c9f84ae702148343c720c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSize</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>ae286ce7c28ef449610be5f91e73591f2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>tell</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>af306c016fb622f08a9672debf7fe9a51</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>seek</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>abaf34482d1bf87437580582c41286e15</anchor>
      <arglist>(ptrdiff_t _origin, SeekType _mode) override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>read</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>a52e79d794ecf85b0fec4efba27a96bbd</anchor>
      <arglist>(void *_buffer, size_t _size, size_t _count) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Resource</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>afc35a4d9647b1b03f35b395a14bb3acd</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::FILE *</type>
      <name>mFile</name>
      <anchorfile>d5/db8/classdart_1_1common_1_1LocalResource.html</anchorfile>
      <anchor>a0a89d11eed924d930fe0d5fd53dc5e28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SeekType</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>adb5aa03eea0ef4fdc2c85ae71761c8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SEEKTYPE_CUR</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>adb5aa03eea0ef4fdc2c85ae71761c8bdab3af11a29fed3dbb8cb95706b46f83ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SEEKTYPE_END</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>adb5aa03eea0ef4fdc2c85ae71761c8bda57fac14752ca53837eb184c043371b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SEEKTYPE_SET</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>adb5aa03eea0ef4fdc2c85ae71761c8bda8575b4852cbde04e343dd18868f98647</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::LocalResourceRetriever</name>
    <filename>d3/d40/classdart_1_1common_1_1LocalResourceRetriever.html</filename>
    <base virtualness="virtual">dart::common::ResourceRetriever</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LocalResourceRetriever</name>
      <anchorfile>d3/d40/classdart_1_1common_1_1LocalResourceRetriever.html</anchorfile>
      <anchor>aea9abd8ecceab183a664d896cf31297b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>d3/d40/classdart_1_1common_1_1LocalResourceRetriever.html</anchorfile>
      <anchor>ad49c22a18ad1b5e8bcbf43e17754288d</anchor>
      <arglist>(const Uri &amp;_uri) override</arglist>
    </member>
    <member kind="function">
      <type>ResourcePtr</type>
      <name>retrieve</name>
      <anchorfile>d3/d40/classdart_1_1common_1_1LocalResourceRetriever.html</anchorfile>
      <anchor>abe963f60287c0272de05902736f8b856</anchor>
      <arglist>(const Uri &amp;_uri) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResourceRetriever</name>
      <anchorfile>de/df1/classdart_1_1common_1_1ResourceRetriever.html</anchorfile>
      <anchor>abd71abb80ea581495e01e54f503691ba</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::NameManager</name>
    <filename>d9/dc9/classdart_1_1common_1_1NameManager.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>NameManager</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a2e7bd233950b82eb1a5b3bfd556787fb</anchor>
      <arglist>(const std::string &amp;_managerName=&quot;default&quot;, const std::string &amp;_defaultName=&quot;default&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NameManager</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a1f60954418bd48fb3489d8b8c8952e7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPattern</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a5151f874d38f1b5618458418dddad6b5</anchor>
      <arglist>(const std::string &amp;_newPattern)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>issueNewName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a71eb62f834ebea8ab1b0db0604f12a71</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>issueNewNameAndAdd</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>ac3e61f1e2daa6fc76d81260dc371cf15</anchor>
      <arglist>(const std::string &amp;_name, const T &amp;_obj)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a8868a11da41608e76b87ddb41e760b92</anchor>
      <arglist>(const std::string &amp;_name, const T &amp;_obj)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a4d72558bcf35f9e9e9b5d1d939fc969e</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeObject</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a34fe185d22b2be18d915298e5f1ab245</anchor>
      <arglist>(const T &amp;_obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEntries</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a620599b98c21c9c3d6520f6eeffe0269</anchor>
      <arglist>(const std::string &amp;_name, const T &amp;_obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a29e5d196cbad9ce2dc72e0463f0521a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>aac95457ad6af8aa2af0a37a7f00a03cd</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasObject</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a9edb87a6c9ecbb5559168a65cb6ecb5f</anchor>
      <arglist>(const T &amp;_obj) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCount</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>ac24b15877a63c691652f672d53e46f26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getObject</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a49695528319e74db8aa66f52559245cb</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>afc70fd20cf56b550aa66e2434f2d4332</anchor>
      <arglist>(const T &amp;_obj) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>changeObjectName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a81b1bd14c914c5e211ad53db5ada59e5</anchor>
      <arglist>(const T &amp;_obj, const std::string &amp;_newName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>ae99148158f11e103f539fed69a36683c</anchor>
      <arglist>(const std::string &amp;_defaultName)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDefaultName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a21d1177beb6af61d9e5a763d469d3f83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setManagerName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a3ddff96460734e9e8fc984e2d2a47ac2</anchor>
      <arglist>(const std::string &amp;_managerName)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getManagerName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>ae49b3c6102a3f27304dac5184508c207</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mManagerName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a5df13ee6dafd5a13ae2c48cebfa84d0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, T &gt;</type>
      <name>mMap</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>af840e795dc1d36c5386decdbea793261</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; T, std::string &gt;</type>
      <name>mReverseMap</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a9e63bd6819326677b4bcc4267cb4333d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mDefaultName</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a8c87a6a21414cd184b3aa96b3edf28fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNameBeforeNumber</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>ad644b4ba99f0c1ccc0eb6a4e8bda26ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mPrefix</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>afa731ace7fe9759d6456bbb9977a7d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mInfix</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a10644fa0dd7f919300bac025a5c3a3f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mAffix</name>
      <anchorfile>d9/dc9/classdart_1_1common_1_1NameManager.html</anchorfile>
      <anchor>a8ed2f3966d9d48ba1f37ba251da99e6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Observer</name>
    <filename>d8/dc0/classdart_1_1common_1_1Observer.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Observer</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>ad258ec5ad54c980958865d76ec140e1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>receiveDestructionNotification</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>a854d2f1461cdbad2dfe2e1dad09e9a9e</anchor>
      <arglist>(const Subject *_subject)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleDestructionNotification</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>a13cc73e8285f40a9f1cbfcaee5ebd80f</anchor>
      <arglist>(const Subject *_subject)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSubject</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>a246d9cdfb47106512c08c49bc88affec</anchor>
      <arglist>(const Subject *_subject)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeSubject</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>ac5cfccb6194f0da4c2f77d402abf86bb</anchor>
      <arglist>(const Subject *_subject)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeAllSubjects</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>a84ae8e5ed7da1e29ba49dd6e67e98750</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; const Subject * &gt;</type>
      <name>mSubjects</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>a00eeaad4d745383b55d0eb46b231715f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Subject</name>
      <anchorfile>d8/dc0/classdart_1_1common_1_1Observer.html</anchorfile>
      <anchor>a5daa6be80b3fbc385ac0a0d93ad161d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Resource</name>
    <filename>d6/d63/classdart_1_1common_1_1Resource.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getSize</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>aed7d49f4e46c404132909fabe0b45dbb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>tell</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>a17e44ea99cafd78c13d29233c6ca60c2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>seek</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>afb0be90881f133011b5045c12e1d199f</anchor>
      <arglist>(ptrdiff_t _offset, SeekType _origin)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>read</name>
      <anchorfile>d6/d63/classdart_1_1common_1_1Resource.html</anchorfile>
      <anchor>a8e77658ec8a8ab49f51fc313ae1bb700</anchor>
      <arglist>(void *_buffer, size_t _size, size_t _count)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::ResourceRetriever</name>
    <filename>de/df1/classdart_1_1common_1_1ResourceRetriever.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>exists</name>
      <anchorfile>de/df1/classdart_1_1common_1_1ResourceRetriever.html</anchorfile>
      <anchor>aba8d9d23400799638428c5af39a34fe8</anchor>
      <arglist>(const Uri &amp;_uri)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ResourcePtr</type>
      <name>retrieve</name>
      <anchorfile>de/df1/classdart_1_1common_1_1ResourceRetriever.html</anchorfile>
      <anchor>a89dbd78f6b7503e7b32daf301d3a7239</anchor>
      <arglist>(const Uri &amp;_uri)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Connection</name>
    <filename>d1/d23/classdart_1_1common_1_1Connection.html</filename>
    <member kind="function">
      <type></type>
      <name>Connection</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>aeb3ebc91e201a946b8957d5c5882eff7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Connection</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>abca81c90a0221a2de3f18378bae1920a</anchor>
      <arglist>(const Connection &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Connection</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>ade48b82aef7c70cc295c55cc660a825b</anchor>
      <arglist>(Connection &amp;&amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>Connection &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>abf7b9638bd1457c491fdf2e0f6ac171f</anchor>
      <arglist>(const Connection &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>Connection &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>a5d41d80ec2b4e642bd4a53f4e379ece9</anchor>
      <arglist>(Connection &amp;&amp;_other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Connection</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>aa1e1ce6d30b2c0f21696de5fdbfaba4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>a9d0894eb09523e8c7d04b1be3f13b6b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>a9ce866dc4fb63d159f7ef85c840d0c86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Connection</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>a698d9b80065f15f296a063363289abd4</anchor>
      <arglist>(const std::weak_ptr&lt; signal::detail::ConnectionBodyBase &gt; &amp;_connectionBody)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Connection</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>a0c619b0eb2b35a0669ee36209767e0d1</anchor>
      <arglist>(std::weak_ptr&lt; signal::detail::ConnectionBodyBase &gt; &amp;&amp;_connectionBody)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; signal::detail::ConnectionBodyBase &gt;</type>
      <name>mWeakConnectionBody</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>acf32fe88c8710a2950b0370f9fb53544</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Signal</name>
      <anchorfile>d1/d23/classdart_1_1common_1_1Connection.html</anchorfile>
      <anchor>a7cea54a98a220ab4ff4f533b911a3e5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::ScopedConnection</name>
    <filename>de/d43/classdart_1_1common_1_1ScopedConnection.html</filename>
    <base>dart::common::Connection</base>
    <member kind="function">
      <type></type>
      <name>ScopedConnection</name>
      <anchorfile>de/d43/classdart_1_1common_1_1ScopedConnection.html</anchorfile>
      <anchor>a77a1acd90028535a22ce906c3b2e8cca</anchor>
      <arglist>(const Connection &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScopedConnection</name>
      <anchorfile>de/d43/classdart_1_1common_1_1ScopedConnection.html</anchorfile>
      <anchor>ab82e9fcf01ae8eea24464c0e95e3d630</anchor>
      <arglist>(Connection &amp;&amp;_other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ScopedConnection</name>
      <anchorfile>de/d43/classdart_1_1common_1_1ScopedConnection.html</anchorfile>
      <anchor>a703445c31fd0e8d30d2b43fd65ff4e47</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Signal</name>
    <filename>d9/d0f/classdart_1_1common_1_1Signal.html</filename>
    <templarg></templarg>
    <templarg>Combiner</templarg>
  </compound>
  <compound kind="class">
    <name>dart::common::Signal&lt; _Res(_ArgTypes...), Combiner &gt;</name>
    <filename>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</filename>
    <templarg></templarg>
    <templarg>_ArgTypes</templarg>
    <templarg>Combiner</templarg>
    <member kind="typedef">
      <type>_Res</type>
      <name>ResultType</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>aadf10c88e81592d22f3f343a1e9e48bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; ResultType(_ArgTypes...)&gt;</type>
      <name>SlotType</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>af2f848b762a4d9319c8f71d15445b764</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Signal&lt; _Res(_ArgTypes...), Combiner &gt;</type>
      <name>SignalType</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>ab0b1f6deedf07272f6a6aed6dc9981ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>signal::detail::ConnectionBody&lt; SlotType &gt;</type>
      <name>ConnectionBodyType</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>abbbf8ff15ab7e06a942bbd1f61905b0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; std::shared_ptr&lt; ConnectionBodyType &gt;, std::owner_less&lt; std::shared_ptr&lt; ConnectionBodyType &gt;&gt;&gt;</type>
      <name>ConnectionSetType</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a76c40c9d492344291bc4db699b0bbffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a8f32ad9712d25b359052c36d3482f0ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Signal</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a6276c3a1969438d0dcfa899eb105e18e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a480c282356e874f84c13935ed6a4f281</anchor>
      <arglist>(const SlotType &amp;_slot)</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>aaee8821c21fdfb77f10ee57f61ba481c</anchor>
      <arglist>(SlotType &amp;&amp;_slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a51253bb5015cf6bdd53fc5eb12bae89f</anchor>
      <arglist>(const Connection &amp;_connection) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnectAll</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a7811e18786015df235408b24d0390fbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEPRECATED</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a5cafc26d35f95a85d9073ea15ac35293</anchor>
      <arglist>(5.1) void clenaupConnections()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanupConnections</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a20db2ad66e912b02da1cbc014fd2934e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumConnections</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>abcaa1d1649aad286a2c5a9ee881359f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ResultType</type>
      <name>raise</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>aaa9660a75c3405d9c33381c24b7c52ef</anchor>
      <arglist>(ArgTypes &amp;&amp;..._args)</arglist>
    </member>
    <member kind="function">
      <type>ResultType</type>
      <name>operator()</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a602830e45ec283e49489f08e84b08a58</anchor>
      <arglist>(ArgTypes &amp;&amp;..._args)</arglist>
    </member>
    <member kind="function">
      <type>_Res</type>
      <name>raise</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a32b5b9d5bbdbb7b645427a10fc6aeda6</anchor>
      <arglist>(ArgTypes &amp;&amp;..._args)</arglist>
    </member>
    <member kind="function">
      <type>_Res</type>
      <name>operator()</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>a0fe5eed0aa6cebb196fd4409aece3ab4</anchor>
      <arglist>(ArgTypes &amp;&amp;..._args)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ConnectionSetType</type>
      <name>mConnectionBodies</name>
      <anchorfile>d5/d40/classdart_1_1common_1_1Signal_3_01__Res_07__ArgTypes_8_8_8_08_00_01Combiner_01_4.html</anchorfile>
      <anchor>ac850fe9abd59a411b170cb5d3b759d6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Signal&lt; void(_ArgTypes...)&gt;</name>
    <filename>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</filename>
    <templarg>_ArgTypes</templarg>
    <member kind="typedef">
      <type>std::function&lt; void(_ArgTypes...)&gt;</type>
      <name>SlotType</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a2b0bbae085868ab6106a5849e70baf67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Signal&lt; void(_ArgTypes...)&gt;</type>
      <name>SignalType</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>ada2601912a97717cb8363ce036405c5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>signal::detail::ConnectionBody&lt; SlotType &gt;</type>
      <name>ConnectionBodyType</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a4fabd4687fc4f7d557cdac625e8b57fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; std::shared_ptr&lt; ConnectionBodyType &gt;, std::owner_less&lt; std::shared_ptr&lt; ConnectionBodyType &gt;&gt;&gt;</type>
      <name>ConnectionSetType</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a890b9ab55008018536f208ad5c1ac736</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Signal</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>af7a9721925420ea03dc0c2e2162ca3c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Signal</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a2073bd427e7211861720ce5e5ea25b36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a77ba7cfbfa103e68e1b292fbbc7c01a7</anchor>
      <arglist>(const SlotType &amp;_slot)</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>aa8d2389c12c8a3a7d922915e696b8920</anchor>
      <arglist>(SlotType &amp;&amp;_slot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>acb3849287d69c4dbf362ee9e501f87b0</anchor>
      <arglist>(const Connection &amp;_connection) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnectAll</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>adbb8e7e64e6a21e5f617746ce7b90712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEPRECATED</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a442e4c6985f837ca967204b4b08210de</anchor>
      <arglist>(5.1) void clenaupConnections()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanupConnections</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>ac9729ea39bcbd89ca35f107ade5e96aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumConnections</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>ae5fe78618964e2416975440a74bb17d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>raise</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a4471f4769af251fcbf7a3f1f3fc11365</anchor>
      <arglist>(ArgTypes &amp;&amp;..._args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>afa6e0a761fbad3f52c668a0567bc6a94</anchor>
      <arglist>(ArgTypes &amp;&amp;..._args)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ConnectionSetType</type>
      <name>mConnectionBodies</name>
      <anchorfile>d4/de2/classdart_1_1common_1_1Signal_3_01void_07__ArgTypes_8_8_8_08_4.html</anchorfile>
      <anchor>a7a630d307cf0092677bac8a9dbeb0093</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::SlotRegister</name>
    <filename>d4/ded/classdart_1_1common_1_1SlotRegister.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>typename T::SlotType</type>
      <name>SlotType</name>
      <anchorfile>d4/ded/classdart_1_1common_1_1SlotRegister.html</anchorfile>
      <anchor>aab301b7419788d1747e8b26d25ab545a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename T::SignalType</type>
      <name>SignalType</name>
      <anchorfile>d4/ded/classdart_1_1common_1_1SlotRegister.html</anchorfile>
      <anchor>a18dcbb46663013aef8c6cdfc92ef5bc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SlotRegister</name>
      <anchorfile>d4/ded/classdart_1_1common_1_1SlotRegister.html</anchorfile>
      <anchor>a1b32abc4f70e5649fd52cc7d3c01ced1</anchor>
      <arglist>(typename T::SignalType &amp;_signal)</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>d4/ded/classdart_1_1common_1_1SlotRegister.html</anchorfile>
      <anchor>afb43dbef73d37010942bf9954bc9be17</anchor>
      <arglist>(const SlotType &amp;_slot)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T::SignalType &amp;</type>
      <name>mSignal</name>
      <anchorfile>d4/ded/classdart_1_1common_1_1SlotRegister.html</anchorfile>
      <anchor>ab6e145517a39cb7675e0ed4c719d00c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::sub_ptr</name>
    <filename>d5/dfd/classdart_1_1common_1_1sub__ptr.html</filename>
    <templarg>T</templarg>
    <base>dart::common::Observer</base>
    <member kind="function">
      <type></type>
      <name>sub_ptr</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>ae4800437808688cec4ab6d6045b06726</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>sub_ptr</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a22b8b5418247113c59af4ca447b470a6</anchor>
      <arglist>(T *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>sub_ptr &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>acd81fa8a7147cecff74d0968c3d56052</anchor>
      <arglist>(const sub_ptr &amp;_sp)</arglist>
    </member>
    <member kind="function">
      <type>sub_ptr &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a45d9db8a2cd7ed59afca923c2ea1e437</anchor>
      <arglist>(T *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T *</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a0610af0c492fc4660b4e0865b11cd487</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a74fee96fd357b3e5855c053b4e629871</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a47821be9ce7cc61a9dd72218738ced2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>ad6423021bae31d4c33fa842467c4b1dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a0e0ddd686613e2a57694cf0b760c0a10</anchor>
      <arglist>(T *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a22cabf0025d407a49d87ab68eb21c4f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleDestructionNotification</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a962f441e6e289367bef118fa90b824eb</anchor>
      <arglist>(const Subject *_subject) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T *</type>
      <name>mSubject</name>
      <anchorfile>d5/dfd/classdart_1_1common_1_1sub__ptr.html</anchorfile>
      <anchor>a590eefed847c3383277de866aa0997ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Subject</name>
    <filename>d3/d73/classdart_1_1common_1_1Subject.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Subject</name>
      <anchorfile>d3/d73/classdart_1_1common_1_1Subject.html</anchorfile>
      <anchor>a20261c0b76e064db6b310e98059f2dc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendDestructionNotification</name>
      <anchorfile>d3/d73/classdart_1_1common_1_1Subject.html</anchorfile>
      <anchor>a137b5f1e7fb760e29084a42dabec1eb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addObserver</name>
      <anchorfile>d3/d73/classdart_1_1common_1_1Subject.html</anchorfile>
      <anchor>a51b5edd025b0663e92c388facda5284f</anchor>
      <arglist>(Observer *_observer) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeObserver</name>
      <anchorfile>d3/d73/classdart_1_1common_1_1Subject.html</anchorfile>
      <anchor>aa512812311ecdbed1dcebf6561020170</anchor>
      <arglist>(Observer *_observer) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; Observer * &gt;</type>
      <name>mObservers</name>
      <anchorfile>d3/d73/classdart_1_1common_1_1Subject.html</anchorfile>
      <anchor>acb21558de80efdc434cd64c90a205ba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Observer</name>
      <anchorfile>d3/d73/classdart_1_1common_1_1Subject.html</anchorfile>
      <anchor>a1bc1613ca5d6d0e8b2fbce5ef15dd38f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::Timer</name>
    <filename>d9/d32/classdart_1_1common_1_1Timer.html</filename>
    <member kind="function">
      <type></type>
      <name>Timer</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a0d0fdf79f3c0be3a07a773e53fca63a8</anchor>
      <arglist>(const std::string &amp;_name=&quot;Noname Timer&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Timer</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a2cd471486bcb4dab4478bb699cfa1c4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a56df39c7d3e235e9145a7a7e33badc7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStarted</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a13e84258b46a6796f0e32783793f4f5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a6d51eb06eb5dc55fc1e5f1a625459f4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getElapsedTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>ad51c53568b450568990193eadf2151c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLastElapsedTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>aad41f3ba4699cc9babce0a15c9de9b76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTotalElapsedTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>acc2bf3a9370c615506f29cdf62cf1bf9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a719beeb0bdf1026cf197d02db0587a61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getWallTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>ada1a9050398c0fc9490fa530365c8469</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mCount</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a129fac4d5b2e4cc2a027103c2a1965d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>timeval</type>
      <name>mTimeVal</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a0ae3bedc2fa78e38501c8894760ccf4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mStartedTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a27926913b3d40269772a1d6c8265df3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mStoppedTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>ad3a54ac30208094ee5088235701f2f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mLastElapsedTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>afdb607fa4a490f951258a4a7d13a3cf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mTotalElapsedTime</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>a57352088131b42bc8b37cb555ab8212b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>aca1f40962a3653aaf13b01fd36f793ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mIsStarted</name>
      <anchorfile>d9/d32/classdart_1_1common_1_1Timer.html</anchorfile>
      <anchor>aaffedcc5566ec26694b6d3f210f0abf8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::UriComponent</name>
    <filename>d6/d65/classdart_1_1common_1_1UriComponent.html</filename>
    <member kind="typedef">
      <type>std::string</type>
      <name>value_type</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>af3a88d53c3ad655dd07847f96722e2e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>value_type &amp;</type>
      <name>reference_type</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a3dd5d94fe369d8c3014c8d112a77ae26</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const value_type &amp;</type>
      <name>reference_const_type</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a54ce949d1db15f804610c2bd391d0a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>value_type *</type>
      <name>pointer_type</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a773e6091eff17029e86ad0f69edfa0bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const value_type *</type>
      <name>pointer_const_type</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>af31d3c6be4f8b0a3abfb21737d0e862e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UriComponent</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a97ed53a105d0d2a9bb2b160b73a97d94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UriComponent</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a3ca0acaa72e7636b366ec3d923a5f2e9</anchor>
      <arglist>(reference_const_type _value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a134837d45a752c86ae574a2fa28100d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>ac098c52123acefec8c80b6ca801d7fca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>UriComponent &amp;</type>
      <name>operator=</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>af42559ba4b207a93212f73771240042f</anchor>
      <arglist>(reference_const_type _value)</arglist>
    </member>
    <member kind="function">
      <type>reference_type</type>
      <name>operator*</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>aca1ba3f0d5d471a795ace01002aac71b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reference_const_type</type>
      <name>operator*</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a7ef062e34fbfcb10bda9251e5713744c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointer_type</type>
      <name>operator-&gt;</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a7a16a27d43ec87dd14ddd046e5618e64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>pointer_const_type</type>
      <name>operator-&gt;</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a0e38f86ccb565e26e2818d7cb5fd2699</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>af45d7670beade8db47ea6ae5d7249065</anchor>
      <arglist>(reference_const_type _value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a1eaa3b75063ead9990fa1d1565efd611</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reference_type</type>
      <name>get</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a13c6071cfc1a7a0fa4dd598c1fc1a8b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reference_const_type</type>
      <name>get</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>ad93fa65958a05e0e22195c2276d0fc97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reference_type</type>
      <name>get_value_or</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a62996d1f949dccb50a340e300c032bda</anchor>
      <arglist>(reference_type _default)</arglist>
    </member>
    <member kind="function">
      <type>reference_const_type</type>
      <name>get_value_or</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>adaa0bd646f9bd9d5d1cf3702a1b3e511</anchor>
      <arglist>(reference_const_type _default) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mExists</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a89e11b1fe335d37237ed814cb189499a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>mValue</name>
      <anchorfile>d6/d65/classdart_1_1common_1_1UriComponent.html</anchorfile>
      <anchor>a44c0edfc29d704fa7bb5e4a6a2e25c7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::Uri</name>
    <filename>d8/d07/structdart_1_1common_1_1Uri.html</filename>
    <member kind="function">
      <type></type>
      <name>Uri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>adfaaa4e1c4d1ee09dc258d8c6062a8af</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Uri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a60851ebbac36c0d0e21e263b5f3373df</anchor>
      <arglist>(const std::string &amp;_input)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Uri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a458b7d711b9049541fb2c3d0a525dd69</anchor>
      <arglist>(const char *_input)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a6db041e6f765ba916649bcaafd9daa5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromString</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a7eec3aec348bc4ea2ff062a0de36d9d1</anchor>
      <arglist>(const std::string &amp;_input)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromPath</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a98eaf010652be02a55fa29beeed80993</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromStringOrPath</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a481ff61f8722846fc57fe0630a247858</anchor>
      <arglist>(const std::string &amp;_input)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a749bb81f3b0d2aff4f15f45fa76720e9</anchor>
      <arglist>(const std::string &amp;_base, const std::string &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a93394c44cfcb267a2ed51dbbbc58e387</anchor>
      <arglist>(const char *_base, const char *_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>ab442ef781a82b33a44e064d4a9710293</anchor>
      <arglist>(const Uri &amp;_base, const std::string &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a2c1578cc8d4b245d2eda7e60a4bee091</anchor>
      <arglist>(const Uri &amp;_base, const char *_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a812ff55782f43de2cda6cf86a97eb8dc</anchor>
      <arglist>(const Uri &amp;_base, const Uri &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a3d7f9323dc90ba932bdf7419c979b953</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getPath</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>aacc11bb1e7ea76b9e74bfcaba114445b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getFilesystemPath</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a2d00a6358a6f6511508b064812d29971</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Uri</type>
      <name>createFromString</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a0ceb748da85764a536d725a0ad16f14a</anchor>
      <arglist>(const std::string &amp;_input)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Uri</type>
      <name>createFromPath</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>af9d74f74d5ee964b21a6e276cbdedbdf</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Uri</type>
      <name>createFromStringOrPath</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a851f0fb2a3fad3ed6db4924a093ff242</anchor>
      <arglist>(const std::string &amp;_input)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Uri</type>
      <name>createFromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a017d99715f3f83480db8e3315e9fa3d5</anchor>
      <arglist>(const std::string &amp;_base, const std::string &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Uri</type>
      <name>createFromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a5468307776ce3f78f1a5ad4a51795e83</anchor>
      <arglist>(const Uri &amp;_base, const std::string &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Uri</type>
      <name>createFromRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a6a6752590714579a0afa822795f90501</anchor>
      <arglist>(const Uri &amp;_base, const Uri &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a71b4ccb3d8cf74c08002c284f567855e</anchor>
      <arglist>(const std::string &amp;_input)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>ad2056cc69f6f4318994c78dd6c142cb5</anchor>
      <arglist>(const std::string &amp;_base, const std::string &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>af57be7a9c3213cef764bbfeaf552d1e0</anchor>
      <arglist>(const Uri &amp;_base, const std::string &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getRelativeUri</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a8c842c2211dbb9a42c4e3e77aec24ea6</anchor>
      <arglist>(const Uri &amp;_base, const Uri &amp;_relative, bool _strict=false)</arglist>
    </member>
    <member kind="variable">
      <type>UriComponent</type>
      <name>mScheme</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>af510dfe18f40d1608edca9fd85ad1c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UriComponent</type>
      <name>mAuthority</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a5d2bd0df93b44c4f7c96c10a83099d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UriComponent</type>
      <name>mPath</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>acb82f913192ac07f68b890c8e48056d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UriComponent</type>
      <name>mQuery</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>ae14c79b2263d01a26de4fbd9c4f1c7ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UriComponent</type>
      <name>mFragment</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>a06c7b7cd31576e897e978ff14efb2fc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string</type>
      <name>mergePaths</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>ae89120df22c7d6c5e0032e877f558b5d</anchor>
      <arglist>(const Uri &amp;_base, const Uri &amp;_relative)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string</type>
      <name>removeDotSegments</name>
      <anchorfile>d8/d07/structdart_1_1common_1_1Uri.html</anchorfile>
      <anchor>ac29b32302b46905905dab22e0801ca45</anchor>
      <arglist>(const std::string &amp;_path)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::common::signal</name>
    <filename>d3/d64/namespacedart_1_1common_1_1signal.html</filename>
    <namespace>dart::common::signal::detail</namespace>
  </compound>
  <compound kind="namespace">
    <name>dart::common::signal::detail</name>
    <filename>d5/de8/namespacedart_1_1common_1_1signal_1_1detail.html</filename>
    <class kind="class">dart::common::signal::detail::ConnectionBodyBase</class>
    <class kind="class">dart::common::signal::detail::ConnectionBody</class>
    <class kind="struct">dart::common::signal::detail::DefaultCombiner</class>
  </compound>
  <compound kind="class">
    <name>dart::common::signal::detail::ConnectionBodyBase</name>
    <filename>d4/d79/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBodyBase.html</filename>
    <member kind="function">
      <type></type>
      <name>ConnectionBodyBase</name>
      <anchorfile>d4/d79/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBodyBase.html</anchorfile>
      <anchor>aa2ffe9c0501a6fb5197004310845970c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectionBodyBase</name>
      <anchorfile>d4/d79/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBodyBase.html</anchorfile>
      <anchor>a032d2e18132803bc0acae4b0b84c5cf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>d4/d79/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBodyBase.html</anchorfile>
      <anchor>aa84b32668251b9cd6fbe9317f475c77f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>d4/d79/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBodyBase.html</anchorfile>
      <anchor>a6a8e4758e4db29fd85b7ef337455a930</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsConnected</name>
      <anchorfile>d4/d79/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBodyBase.html</anchorfile>
      <anchor>ae31e961dd6b6502d42be2713a4940850</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::common::signal::detail::ConnectionBody</name>
    <filename>d3/d1d/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBody.html</filename>
    <templarg></templarg>
    <base>dart::common::signal::detail::ConnectionBodyBase</base>
    <member kind="function">
      <type></type>
      <name>ConnectionBody</name>
      <anchorfile>d3/d1d/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBody.html</anchorfile>
      <anchor>ab3d6d1bf786f327563984205f7d9f906</anchor>
      <arglist>(const SlotType &amp;_slot)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectionBody</name>
      <anchorfile>d3/d1d/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBody.html</anchorfile>
      <anchor>a099814dc8b95f2eef2ddc2b994518166</anchor>
      <arglist>(SlotType &amp;&amp;_slot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectionBody</name>
      <anchorfile>d3/d1d/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBody.html</anchorfile>
      <anchor>a7d66d02ba82bb1c051a4e8465fdf6dc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const SlotType &amp;</type>
      <name>getSlot</name>
      <anchorfile>d3/d1d/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBody.html</anchorfile>
      <anchor>a57d7da0fc083e707162bbdf951d885cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SlotType</type>
      <name>mSlot</name>
      <anchorfile>d3/d1d/classdart_1_1common_1_1signal_1_1detail_1_1ConnectionBody.html</anchorfile>
      <anchor>a13b1877ff93d61160e790d8eedf71c89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::common::signal::detail::DefaultCombiner</name>
    <filename>df/d24/structdart_1_1common_1_1signal_1_1detail_1_1DefaultCombiner.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>result_type</name>
      <anchorfile>df/d24/structdart_1_1common_1_1signal_1_1detail_1_1DefaultCombiner.html</anchorfile>
      <anchor>abe4ada2b70d309070a4e8bf5739f15ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>process</name>
      <anchorfile>df/d24/structdart_1_1common_1_1signal_1_1detail_1_1DefaultCombiner.html</anchorfile>
      <anchor>a3acf6f2a5bb8f172c8cb8f73316dc141</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::constraint</name>
    <filename>dd/d6c/namespacedart_1_1constraint.html</filename>
    <class kind="class">dart::constraint::BalanceConstraint</class>
    <class kind="class">dart::constraint::BallJointConstraint</class>
    <class kind="class">dart::constraint::ConstrainedGroup</class>
    <class kind="struct">dart::constraint::ConstraintInfo</class>
    <class kind="class">dart::constraint::ConstraintBase</class>
    <class kind="class">dart::constraint::ConstraintSolver</class>
    <class kind="class">dart::constraint::ContactConstraint</class>
    <class kind="class">dart::constraint::DantzigLCPSolver</class>
    <class kind="class">dart::constraint::JointConstraint</class>
    <class kind="class">dart::constraint::JointCoulombFrictionConstraint</class>
    <class kind="class">dart::constraint::JointLimitConstraint</class>
    <class kind="class">dart::constraint::LCPSolver</class>
    <class kind="class">dart::constraint::PGSLCPSolver</class>
    <class kind="struct">dart::constraint::PGSOption</class>
    <class kind="class">dart::constraint::SoftContactConstraint</class>
    <class kind="class">dart::constraint::WeldJointConstraint</class>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addDampedPseudoInverseToGradient</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ab1ca16fdd4b156f83993421c1f0c11df</anchor>
      <arglist>(Eigen::Map&lt; Eigen::VectorXd &gt; &amp;grad, const JacType &amp;J, const Eigen::MatrixXd &amp;nullspace, const Eigen::Vector3d &amp;error, double damping)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>convertJacobianMethodOutputToGradient</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>ab25299cfe8ec0b8199f6f00eece7db2e</anchor>
      <arglist>(Eigen::Map&lt; Eigen::VectorXd &gt; &amp;grad, const std::weak_ptr&lt; dynamics::HierarchicalIK &gt; &amp;mIK)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solvePGS</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a2488681e6db07eb614b77f7715eac2c1</anchor>
      <arglist>(int n, int nskip, int, double *A, double *x, double *b, double *lo, double *hi, int *findex, PGSOption *option)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PointMassT</type>
      <name>selectCollidingPointMassT</name>
      <anchorfile>dd/d6c/namespacedart_1_1constraint.html</anchorfile>
      <anchor>a638541c0a4b2f8e00d73f873393ffa5f</anchor>
      <arglist>(SoftBodyNodeT _softBodyNode, const Eigen::Vector3d &amp;_point, int _faceId)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::BalanceConstraint</name>
    <filename>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</filename>
    <base>dart::optimizer::Function</base>
    <base>dart::dynamics::HierarchicalIK::Function</base>
    <member kind="enumeration">
      <type></type>
      <name>ErrorMethod_t</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a810f5bfcdbb8f15702fd91e245df2dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FROM_CENTROID</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a810f5bfcdbb8f15702fd91e245df2dd1abf0aba992afd84fb93c7185046f0b953</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FROM_EDGE</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a810f5bfcdbb8f15702fd91e245df2dd1a67055212813417109d29c49668e2f994</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>OPTIMIZE_BALANCE</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a810f5bfcdbb8f15702fd91e245df2dd1a43b3cfe37e7b8c19b0b80b0b63a7bec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BalanceMethod_t</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a57ee8de172dfbdca4d50518afe9eabfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SHIFT_SUPPORT</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a57ee8de172dfbdca4d50518afe9eabfca22ae73e9977a6489f90f09669f2d24f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SHIFT_COM</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a57ee8de172dfbdca4d50518afe9eabfca0dde3b4d64fa9f96d0a3c3f5a71e79b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BalanceConstraint</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a3a4055dcf10b8a3867f2013f556852f4</anchor>
      <arglist>(const std::shared_ptr&lt; dynamics::HierarchicalIK &gt; &amp;_ik, BalanceMethod_t _balanceMethod=SHIFT_SUPPORT, ErrorMethod_t _errorMethod=FROM_CENTROID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BalanceConstraint</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a2801a3ef031c1a6de612a0e96dc605e2</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>optimizer::FunctionPtr</type>
      <name>clone</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a840cc9e2fd15fd31112c0e409ebc96be</anchor>
      <arglist>(const std::shared_ptr&lt; dynamics::HierarchicalIK &gt; &amp;_newIK) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a8bbd30bda55aec5e11a9a04bf6fba66e</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a33e3b69359c73c5980d07b17a00dbbc3</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorMethod</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>ae07fa5b5958b09735c81bd3a7bdfa8fd</anchor>
      <arglist>(ErrorMethod_t _method)</arglist>
    </member>
    <member kind="function">
      <type>ErrorMethod_t</type>
      <name>getErrorMethod</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>aac7b2ae72e698c28ff33429e2ea0e163</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBalanceMethod</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>ab7c8aad0d08acfd421295a5acb5b087c</anchor>
      <arglist>(BalanceMethod_t _method)</arglist>
    </member>
    <member kind="function">
      <type>BalanceMethod_t</type>
      <name>getBalanceMethod</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a3f5254cc472d49fc4c881725a9e3b520</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOptimizationTolerance</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a27970eb997546688bb945386d15711db</anchor>
      <arglist>(double _tol)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOptimizationTolerance</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a45fd1c22e4d11c235bb5f4df4d0d186c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPseudoInverseDamping</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a72282a5bf1d18108ecff2af125cb6e14</anchor>
      <arglist>(double _damping)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPseudoInverseDamping</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>adb912349b78a9a9e87765a2d77f3c0ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getLastError</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a778ca94dc73acf01564571563f524870</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCaches</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a97c9a9be4cdd6cd17e4bd5978e5b98a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Function</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>a6a5c1eb0d6e16b61d00ec720f3811500</anchor>
      <arglist>(const std::string &amp;_name=&quot;function&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Function</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>a990d67a98dc2e125e0e06d07eae615ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setName</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>a13bdde1487d19fcc5e32d634c7303d1f</anchor>
      <arglist>(const std::string &amp;_newName)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>afc47660e5f3588d3d52f525073b9d65b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>af5477f8c6fe4e8dd42e0d9012a5a7758</anchor>
      <arglist>(Eigen::Map&lt; const Eigen::VectorXd &gt; &amp;_x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalGradient</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>a0345c57adad403090793dcc63ea185e6</anchor>
      <arglist>(Eigen::Map&lt; const Eigen::VectorXd &gt; &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>abaa94e0ae81238aac65e5dbddaeaeef1</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::VectorXd &amp;_grad)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalHessian</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>abfc65b2d36505b795fbd8c1c40308f58</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd, Eigen::RowMajor &gt; _Hess)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual optimizer::FunctionPtr</type>
      <name>clone</name>
      <anchorfile>de/d0e/classdart_1_1dynamics_1_1HierarchicalIK_1_1Function.html</anchorfile>
      <anchor>aa8e1aee501d7cf74f89778fe5a0b408d</anchor>
      <arglist>(const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_newIK) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Function</name>
      <anchorfile>de/d0e/classdart_1_1dynamics_1_1HierarchicalIK_1_1Function.html</anchorfile>
      <anchor>ae1d0b1add8da7a879567176412c6f198</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; dynamics::HierarchicalIK &gt;</type>
      <name>mIK</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a56b775aa4c01480f566b07b7c0e29d65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ErrorMethod_t</type>
      <name>mErrorMethod</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>ac2154d8c8f0893f298867bab42a7972a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BalanceMethod_t</type>
      <name>mBalanceMethod</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a070e458660db1452d8e6d7e85cfbf288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mOptimizationTolerance</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a55dff5f4d052d9ddf6d2377d05892dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mDamping</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a74491853d9d2296002c3d1101d8f993b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mClosestEndEffector</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a25d2655bb329fee79cf0bff954635bee</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mLastError</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a1c324ada106b22dd184b683b99525f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mLastCOM</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a9e6f219b81e9931a47f2764c52c56231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mLastSupportVersion</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a3a112f3102bc4062c099087c11f0e2ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::LinearJacobian</type>
      <name>mComJacCache</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>ab0654f037ccda540bd27c75e71b3cdbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::LinearJacobian</type>
      <name>mEEJacCache</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>ae7a2bd820bf1ff830e2b1f70f23a37d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::JacobiSVD&lt; math::LinearJacobian &gt;</type>
      <name>mSVDCache</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a6a5768ea2c8e66279d040805f5426ef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mNullSpaceCache</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>ab39d5dfde6822c319e7fba89e212fb56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mPartialNullSpaceCache</name>
      <anchorfile>da/d5b/classdart_1_1constraint_1_1BalanceConstraint.html</anchorfile>
      <anchor>a4d5e68f31d032f3b1e11d52eb30e6d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>a201fd012640c54e6c513af5a1a16db20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::BallJointConstraint</name>
    <filename>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</filename>
    <base>dart::constraint::JointConstraint</base>
    <member kind="function">
      <type></type>
      <name>BallJointConstraint</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a5896883f90ae1373fcf593f5cb53cbe7</anchor>
      <arglist>(dynamics::BodyNode *_body, const Eigen::Vector3d &amp;_jointPos)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BallJointConstraint</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>ad816a6856eff3c0a55d3139e3a672b4f</anchor>
      <arglist>(dynamics::BodyNode *_body1, dynamics::BodyNode *_body2, const Eigen::Vector3d &amp;_jointPos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BallJointConstraint</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a7e0f896e2464aec6f25c68d7eaa24646</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JointConstraint</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a488264a669e5c98f63ddb749a470ec94</anchor>
      <arglist>(dynamics::BodyNode *_body)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JointConstraint</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a9961912ac211ae533036409e9850b20f</anchor>
      <arglist>(dynamics::BodyNode *_body1, dynamics::BodyNode *_body2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JointConstraint</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a60fa5adb65975027310f3a955ea1b1c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>dynamics::BodyNode *</type>
      <name>getBodyNode1</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>afed7f1ee8390c70707b23b73f80a9d7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dynamics::BodyNode *</type>
      <name>getBodyNode2</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>abbf3f3ca0549a6933c1dd5ca7eabce43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getDimension</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a813ea2e97a20fb5132f43132d9609a7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>aae1fc737ea13834aa80798a90686f786</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getInformation</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>aa04970af68831dce0b10eef087e70013</anchor>
      <arglist>(ConstraintInfo *_lcp)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a83da3ef177a60993d66c8081b7d39b0f</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getVelocityChange</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>ae05fb557b58639ccd0251da04721c482</anchor>
      <arglist>(double *_vel, bool _withCfm)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>excite</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>af72b0ae2c777c849563b3902b9ee9cea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unexcite</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a62d32918c42e7ebd7586fc5e10430ae5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applyImpulse</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a2087d1fba6f3887e51197ced8ca416dc</anchor>
      <arglist>(double *_lambda)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>isActive</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a60c40d932b4b95d69c8492e588ea0401</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>acac0f413f97a65434c38ef70ac49bacb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>uniteSkeletons</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a270d6b8ad40ca389e650175b9738d3ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ConstraintBase</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a8c7e2f4119b286b656ea5a77b1a6db7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~ConstraintBase</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a2d4441f9e5d6628f49840d19b3cd81c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mOffset1</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a56ecb210c9f203b76a3943b6a95a8941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mOffset2</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a526f76fd8bd9de4242ffed81222a81bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mViolation</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>aeaad4d4cadc28c34ae3bc54865d4e1dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Matrix&lt; double, 3, 6 &gt;</type>
      <name>mJacobian1</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a45337287993c43b83942b76ad80405fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Matrix&lt; double, 3, 6 &gt;</type>
      <name>mJacobian2</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a5e3ad0fbbf5b246014e33646f25e3631</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mOldX</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>ada10e354289b746345cdd33554de6472</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>mAppliedImpulseIndex</name>
      <anchorfile>d9/d4e/classdart_1_1constraint_1_1BallJointConstraint.html</anchorfile>
      <anchor>a1ed9c481104d91b565e767b85f8a9eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorAllowance</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>af66ee53cdb07e4eae8481b57226e7e80</anchor>
      <arglist>(double _allowance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorAllowance</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>ab9095ad75f66fa78560ff90477afdab3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorReductionParameter</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>aa4fdff745a766cf0011f5b67ec549722</anchor>
      <arglist>(double _erp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorReductionParameter</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a1f2313e32006d7ed6c492d233934c2a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxErrorReductionVelocity</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a0771d7431f41d8c88e870db2e811e801</anchor>
      <arglist>(double _erv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getMaxErrorReductionVelocity</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a5a1df3d25fdc8736ee0a471289e08a0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setConstraintForceMixing</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a815493ac24071bf91e4fe251ebc02761</anchor>
      <arglist>(double _cfm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getConstraintForceMixing</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a823841f350f3775451681ec6ce252365</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::SkeletonPtr</type>
      <name>compressPath</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a16653228e700d3b03730e87a443df9aa</anchor>
      <arglist>(dynamics::SkeletonPtr _skeleton)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a7ba3e5179d876fc147f630ab1a524adb</anchor>
      <arglist>(dynamics::SkeletonPtr _skeleton)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode1</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a9fa9aeed02ced0d97b4420eb30aa1cd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode2</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a5be79b51cc1ead9f5c8757b1cc302543</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mDim</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a459e62c194f32c636cd5210bdeba6914</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static double</type>
      <name>mErrorAllowance</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a8abb0e69cb4ba6f44c531e936cbaa934</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static double</type>
      <name>mErrorReductionParameter</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a234f51bdf0ff81f60e2dfbe6186ff473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static double</type>
      <name>mMaxErrorReductionVelocity</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a52a896483c222582ae456e83dfbc52f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static double</type>
      <name>mConstraintForceMixing</name>
      <anchorfile>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</anchorfile>
      <anchor>a58f5272b0c2f578747a3d88f311f87df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::ConstrainedGroup</name>
    <filename>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstrainedGroup</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a912ad95cb43e6159f253e411f01a4030</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConstrainedGroup</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a5bc8b005f5e489de84f8534787becd2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConstraint</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ae89f0348a870b7717e07a4c4d456ea96</anchor>
      <arglist>(ConstraintBase *_constraint)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumConstraints</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ab5d19bd3ef7e7f75f34c27ae985d63a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstraintBase *</type>
      <name>getConstraint</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>acc21a8ea957ceea250e5a429040c6ea0</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeConstraint</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a3fc6e36d119b64fe8cb195126fb5c26c</anchor>
      <arglist>(ConstraintBase *_constraint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllConstraints</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a2b23208df09b5fdbeee3230640a42761</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getTotalDimension</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>acf8c9b98cfc379a46e0c590b70035300</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>containConstraint</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a2695d9e9c6f2dc9894a05b93e1a8dcf8</anchor>
      <arglist>(ConstraintBase *_constraint) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>checkAndAddConstraint</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a8f27cb93261e3f877cba4e8e2f759a92</anchor>
      <arglist>(ConstraintBase *_constraint)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; ConstraintBase * &gt;</type>
      <name>mConstraints</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a820b7539af14ab5e196ee66291f54090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; dynamics::Skeleton &gt;</type>
      <name>mRootSkeleton</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ab6403be8c801059969d6b615ac2fadd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstraintSolver</name>
      <anchorfile>d6/db4/classdart_1_1constraint_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a9604aeb393ba731519e459cdd02b09ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::constraint::ConstraintInfo</name>
    <filename>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</filename>
    <member kind="variable">
      <type>double *</type>
      <name>x</name>
      <anchorfile>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</anchorfile>
      <anchor>a6eee53fb4552d11cf96cbb287ae159a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>lo</name>
      <anchorfile>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</anchorfile>
      <anchor>aa6b4521948615408e6418997c2e9d25c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>hi</name>
      <anchorfile>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</anchorfile>
      <anchor>a326d5425aecedc0464326aab9ea0645f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>b</name>
      <anchorfile>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</anchorfile>
      <anchor>a55537358b3d0eb1c4d947aec87069aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>w</name>
      <anchorfile>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</anchorfile>
      <anchor>a193590af62d01236a9641a3219a9ab4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>findex</name>
      <anchorfile>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</anchorfile>
      <anchor>a19a4d222483e3e54a6152f1a1b23f44c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>invTimeStep</name>
      <anchorfile>dc/d9c/structdart_1_1constraint_1_1ConstraintInfo.html</anchorfile>
      <anchor>a30edb494d531dda2c0ceaf58ff21997b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::ConstraintBase</name>
    <filename>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>ae811d09cb2dcecdc09253dbff8c6f693</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getInformation</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a0b3bcdc399a65d8265c60296b294e4ba</anchor>
      <arglist>(ConstraintInfo *_info)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a6d492d4fd55cb390fa492a9a46f4e986</anchor>
      <arglist>(size_t _index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getVelocityChange</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a2e731a9c1d930f36ebf1d99d6aa0883a</anchor>
      <arglist>(double *_vel, bool _withCfm)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>excite</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>aea54715d5d6742635da52a09cf0bc8eb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unexcite</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>ae5aeea5b4ca6d6ac3782511fd7a1edc6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>applyImpulse</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a35d0145b5d67a0fb1e9f3fc972795596</anchor>
      <arglist>(double *_lambda)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isActive</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>aaa65531a6ce147ec94afcc5a129da208</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a5b19def48ad79687b8b414d09321219e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>uniteSkeletons</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a3c927e47066a904013058d1061522841</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstraintSolver</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a9604aeb393ba731519e459cdd02b09ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstrainedGroup</name>
      <anchorfile>df/d29/classdart_1_1constraint_1_1ConstraintBase.html</anchorfile>
      <anchor>a6410a06e07dfc729a6b7c1b05a207ef5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::ConstraintSolver</name>
    <filename>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstraintSolver</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ac96063b4e1d4440b0d0575c95cf53c25</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstraintSolver</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>abc4a37b9d205831166f2a1c13061653f</anchor>
      <arglist>(const ConstraintSolver &amp;_other)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConstraintSolver</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ae3b3e2846835db6d7afaa697b52bb6ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSkeleton</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a6c35bfcce3e3afa4fcfdded954d2ed2b</anchor>
      <arglist>(const dynamics::SkeletonPtr &amp;_skeleton)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSkeletons</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>acbaba0eed49a702a4c1f786d79290e82</anchor>
      <arglist>(const std::vector&lt; dynamics::SkeletonPtr &gt; &amp;_skeletons)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSkeleton</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a7ea4367f2be036a392cb4b0a73f5ddf3</anchor>
      <arglist>(const dynamics::SkeletonPtr &amp;_skeleton)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSkeletons</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ab4f3521d0eb08761695a9267f100810d</anchor>
      <arglist>(const std::vector&lt; dynamics::SkeletonPtr &gt; &amp;_skeletons)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllSkeletons</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ae2aa52f3a51f6a412b10a68d2a4526c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConstraint</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a17393ecfceee2a61a6ed6b3e05ce2d4a</anchor>
      <arglist>(ConstraintBase *_constraint)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a41c6fcafe20ed9feb9d8617a0ed7385c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeConstraint</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>af3ab9f845c568e421e395d85b90b26d1</anchor>
      <arglist>(ConstraintBase *_constraint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a1432a82fe9f1080d2872eca466435124</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeStep</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a8e42ab1a609d86ba481fda83767352bb</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeStep</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>aa907e84ba399af560b67805a3e0eff12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollisionDetector</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ade639bd5daebb0ba1d5c88c4904a9c26</anchor>
      <arglist>(collision::CollisionDetector *_collisionDetector)</arglist>
    </member>
    <member kind="function">
      <type>collision::CollisionDetector *</type>
      <name>getCollisionDetector</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a0dc0aa3ce6410f1996e2f849def61bf9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a50664aacabd70a1f6f76958cde13a798</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>containSkeleton</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>af19b1d3c5d127a07b109b470455a175e</anchor>
      <arglist>(const dynamics::ConstSkeletonPtr &amp;_skeleton) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>checkAndAddSkeleton</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a79d33e170a84160831d83d7d1ead8671</anchor>
      <arglist>(const dynamics::SkeletonPtr &amp;_skeleton)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>containConstraint</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a5eb059f719c75f9fbf7cf1f143b20f06</anchor>
      <arglist>(const ConstraintBase *_constraint) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>checkAndAddConstraint</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a1ae815b6669f3ad3d71277ff1d173725</anchor>
      <arglist>(ConstraintBase *_constraint)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>aec369abdfa802131c7e91385a9e20759</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>buildConstrainedGroups</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>aff161f1320086c2a79505b441083d546</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>solveConstrainedGroups</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a47d3db5cf42e604ec8e083724dc5af7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isSoftContact</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>af8e20d6de6ef1951a911e08b8cf2b441</anchor>
      <arglist>(const collision::Contact &amp;_contact) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>collision::CollisionDetector *</type>
      <name>mCollisionDetector</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a639d1dddc65b9da74087ebc6c5a29bfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mTimeStep</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ae05c1138ee5ee871637388df82225c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LCPSolver *</type>
      <name>mLCPSolver</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>ac5196bb47be9ae93e035e7c2bb75db22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; dynamics::SkeletonPtr &gt;</type>
      <name>mSkeletons</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a0a07e3dfe287f074ba948eacd24d1d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; ContactConstraint * &gt;</type>
      <name>mContactConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a7a115541af13b481e52d9fcba78cbed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; SoftContactConstraint * &gt;</type>
      <name>mSoftContactConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>aab3a07b91b80777b96549d398fd5330b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; JointLimitConstraint * &gt;</type>
      <name>mJointLimitConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a7dde9836927859b1b9819f28eb7bd301</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; JointCoulombFrictionConstraint * &gt;</type>
      <name>mJointCoulombFrictionConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a8c9d469bc793e7442b6029196126799c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; ConstraintBase * &gt;</type>
      <name>mManualConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a43962355a889df860f727b2079660805</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; ConstraintBase * &gt;</type>
      <name>mActiveConstraints</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>a8e8eee06a12b720472f99b4554284e69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; ConstrainedGroup &gt;</type>
      <name>mConstrainedGroups</name>
      <anchorfile>d6/dc9/classdart_1_1constraint_1_1ConstraintSolver.html</anchorfile>
      <anchor>aadfc1f1c90fb9eecc5c78373d962c6fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::ContactConstraint</name>
    <filename>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</filename>
    <base>dart::constraint::ConstraintBase</base>
    <member kind="function">
      <type></type>
      <name>ContactConstraint</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a66bca42c356f4abf4c2ad9aed72e6b33</anchor>
      <arglist>(collision::Contact &amp;_contact, double _timeStep)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ContactConstraint</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>aaf3c7a8112196bbf7ac789993fe1327f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrictionDirection</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a6726d3343dd8ae5a014755983b2a6cc6</anchor>
      <arglist>(const Eigen::Vector3d &amp;_dir)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getFrictionDirection1</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a54fea08f3d30aa6d09a78c4cbd44ba05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorAllowance</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ad552acfea98b167273b96815f0995686</anchor>
      <arglist>(double _allowance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorAllowance</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a8dd26662822ac4bab4582a39cc3f54d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorReductionParameter</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>af5b1245b114b4866f912d660551286fd</anchor>
      <arglist>(double _erp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorReductionParameter</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ac3be100d9c2755b451222eb72e828c6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxErrorReductionVelocity</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ac1a0d8e8e65aa1d1141551dbda74bb2a</anchor>
      <arglist>(double _erv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getMaxErrorReductionVelocity</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>aac2a88e3abc71908fca94f828c4a55b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setConstraintForceMixing</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a31345696832f7802a48a25626b797ba2</anchor>
      <arglist>(double _cfm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getConstraintForceMixing</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a653d41dcd80fafc1b274d4b15ea7b814</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a6fc10fbe95ad027d4aaf27f7e3ad3b6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getInformation</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ad0419647866dad77771c0ae4cdb4e8c1</anchor>
      <arglist>(ConstraintInfo *_info)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a502f4146a4053264f48ee9f05ce25277</anchor>
      <arglist>(size_t _idx)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getVelocityChange</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a517cccf7a41f308669d11ffa7dafd728</anchor>
      <arglist>(double *_vel, bool _withCfm)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>excite</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>aca52a5fdd2ce5f2aa24375b67d129bc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unexcite</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ab8506ced10f78d44c3ee6336ad13466d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applyImpulse</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a3775be2587ea337ce39eab9b25547e73</anchor>
      <arglist>(double *_lambda)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>af97071d84e9aa2bbbd44bdfface420ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>uniteSkeletons</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>af31cc4c2bd7e16f22a94a3baa77fcb1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>isActive</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ad5805eee32c91c737d0b215d8189c94b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getRelVelocity</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>aaec44384b85e77de9ad43db356c18b98</anchor>
      <arglist>(double *_relVel)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateFirstFrictionalDirection</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a7ac6e5ebc84151ef623faa22db786174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Eigen::MatrixXd</type>
      <name>getTangentBasisMatrixODE</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a352d4ddc9e78ae80379b2e81ea615972</anchor>
      <arglist>(const Eigen::Vector3d &amp;_n)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mTimeStep</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a0a87147294ce818cecebcbbbef593c73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode1</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a23d291dc762739f4fe40b40893fd79d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode2</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a68416ccf33db8da717e62d6e0b70fbd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; collision::Contact * &gt;</type>
      <name>mContacts</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ae6b807b33c3e859343a96208478b8441</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mFirstFrictionalDirection</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>af645a471aa6ef1db27427c26efcc0c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mFrictionCoeff</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a78184d0b4419fa5ca282d12cbbe0e0b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mRestitutionCoeff</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>acf84778e25fc924fb6bfb89f206abe7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::aligned_vector&lt; Eigen::Vector6d &gt;</type>
      <name>mJacobians1</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a487e1b58c9ccdbfa9fea3c88631bee38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::aligned_vector&lt; Eigen::Vector6d &gt;</type>
      <name>mJacobians2</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>aa7d6bff44643e12415cf55e2f6da5903</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mIsFrictionOn</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a1750b2aa46be0183946e8ab33b5383f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>mAppliedImpulseIndex</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>aedb68ffd3bc84330cbdd84fda5c0ddfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mIsBounceOn</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>acc66b2e883e3594cb881f55aec5a47f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mActive</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a43f1cac425a43e8c133fe498e7f7d2d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mErrorAllowance</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ac7e4956ad4f6c2ed7a59beff1fccd344</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mErrorReductionParameter</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a8029beb76abbd99884fa2c2e084c6d0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mMaxErrorReductionVelocity</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a338edeef87a4de654fba0253021d4a39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mConstraintForceMixing</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>ae47c5441f4c48ab58b3a1440585ed023</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstraintSolver</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a9604aeb393ba731519e459cdd02b09ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstrainedGroup</name>
      <anchorfile>d4/d18/classdart_1_1constraint_1_1ContactConstraint.html</anchorfile>
      <anchor>a6410a06e07dfc729a6b7c1b05a207ef5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::DantzigLCPSolver</name>
    <filename>d4/d57/classdart_1_1constraint_1_1DantzigLCPSolver.html</filename>
    <base>dart::constraint::LCPSolver</base>
    <member kind="function">
      <type></type>
      <name>DantzigLCPSolver</name>
      <anchorfile>d4/d57/classdart_1_1constraint_1_1DantzigLCPSolver.html</anchorfile>
      <anchor>a497f54460f9092efe8a942d830bf9967</anchor>
      <arglist>(double _timestep)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DantzigLCPSolver</name>
      <anchorfile>d4/d57/classdart_1_1constraint_1_1DantzigLCPSolver.html</anchorfile>
      <anchor>a1640c1d07b01f68208b61e12a2648c8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>d4/d57/classdart_1_1constraint_1_1DantzigLCPSolver.html</anchorfile>
      <anchor>a33d91f87f69a7ab9469e5963c2bd3836</anchor>
      <arglist>(ConstrainedGroup *_group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeStep</name>
      <anchorfile>db/d6c/classdart_1_1constraint_1_1LCPSolver.html</anchorfile>
      <anchor>a782c763ddba6230a98338c4232da2086</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeStep</name>
      <anchorfile>db/d6c/classdart_1_1constraint_1_1LCPSolver.html</anchorfile>
      <anchor>a158267fc960c755cc1872502b8f688ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LCPSolver</name>
      <anchorfile>db/d6c/classdart_1_1constraint_1_1LCPSolver.html</anchorfile>
      <anchor>ad97a20795d5ce9abad5eee4bc5359bde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>d4/d57/classdart_1_1constraint_1_1DantzigLCPSolver.html</anchorfile>
      <anchor>a42d12c6f6aec2c2111486a776d9631f6</anchor>
      <arglist>(size_t _n, double *_A)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>d4/d57/classdart_1_1constraint_1_1DantzigLCPSolver.html</anchorfile>
      <anchor>a9d82549abd8bb7e4ef06ba9855def9f9</anchor>
      <arglist>(size_t _n, double *_A, size_t _begin, size_t _end)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>print</name>
      <anchorfile>d4/d57/classdart_1_1constraint_1_1DantzigLCPSolver.html</anchorfile>
      <anchor>a7568cead8529438eb19cd77e65b3de65</anchor>
      <arglist>(size_t _n, double *_A, double *_x, double *_lo, double *_hi, double *_b, double *w, int *_findex)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LCPSolver</name>
      <anchorfile>db/d6c/classdart_1_1constraint_1_1LCPSolver.html</anchorfile>
      <anchor>a451849008dd0b3985783ade79a6d10a6</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTimeStep</name>
      <anchorfile>db/d6c/classdart_1_1constraint_1_1LCPSolver.html</anchorfile>
      <anchor>ac6911ab7d5e955418c27105dee718b6f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::JointConstraint</name>
    <filename>dc/d0c/classdart_1_1constraint_1_1JointConstraint.html</filename>
    <base>dart::constraint::ConstraintBase</base>
  </compound>
  <compound kind="class">
    <name>dart::constraint::JointCoulombFrictionConstraint</name>
    <filename>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</filename>
    <base>dart::constraint::ConstraintBase</base>
    <member kind="function">
      <type></type>
      <name>JointCoulombFrictionConstraint</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a8bba110e77784a822ffd657d512b4135</anchor>
      <arglist>(dynamics::Joint *_joint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JointCoulombFrictionConstraint</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>aad106a72a49994a428a9c5588b0634d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setConstraintForceMixing</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a10e00324a211fe3d87b3a6f777f1cee2</anchor>
      <arglist>(double _cfm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getConstraintForceMixing</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>ad102985a6c075083f978e4cca335ad0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>ac3fde2c2fafdf210023792d343175db4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getInformation</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a87e4acac8fc1ca685b3cbb2bc5a71e17</anchor>
      <arglist>(ConstraintInfo *_lcp)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a84133cc1d3ab674ba64f43ef40ce7349</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getVelocityChange</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a894b50916598a86fe207b13a225cbbf7</anchor>
      <arglist>(double *_delVel, bool _withCfm)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>excite</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a0b2ea7d388ae137fdfe50e6065a850ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unexcite</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>ae1eebd10fee351a923f94df6ea8ba62f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applyImpulse</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a1dbcf414c1612fae984c5b709c880ee0</anchor>
      <arglist>(double *_lambda)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>aaa4378fc266c5131b46dc10052739a6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>isActive</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>ad0bd0d5855ab3aa1f3d17aac4988c236</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::Joint *</type>
      <name>mJoint</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>ae72ac40f71271f69c44c7e139db9a47d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>aff4add6238a456fb3cf709b70104d650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>mAppliedImpulseIndex</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a587c91a3e0916c5f56c36fe6d7c3f585</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>mLifeTime</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a683397f04cae0941d775fa77f5878855</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mActive</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>abd02a9b5b8df4398ce934b2f44584564</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mNegativeVel</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>ab43191043af47e60f01e4dad82db3f34</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mOldX</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a9aecc816b1b84800229f0ea603b03076</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mUpperBound</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a45c5c6a86e140b1ac7c555bd99ed0f6e</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mLowerBound</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>aebe71b99746e453607020b684ba01824</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mConstraintForceMixing</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>aaf86fcb3612d76bf01f42fcdb035458d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstraintSolver</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a9604aeb393ba731519e459cdd02b09ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstrainedGroup</name>
      <anchorfile>dd/d61/classdart_1_1constraint_1_1JointCoulombFrictionConstraint.html</anchorfile>
      <anchor>a6410a06e07dfc729a6b7c1b05a207ef5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::JointLimitConstraint</name>
    <filename>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</filename>
    <base>dart::constraint::ConstraintBase</base>
    <member kind="function">
      <type></type>
      <name>JointLimitConstraint</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>afe2e6fbaa795bbdae2b4dbf705759bd2</anchor>
      <arglist>(dynamics::Joint *_joint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JointLimitConstraint</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a16be05b90b5d507511a02ef477389fea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorAllowance</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a725b144477948d393265f02547a68859</anchor>
      <arglist>(double _allowance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorAllowance</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>ac360e927f70e639d620e3e898fe6db96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorReductionParameter</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a63483d9739f9bbb0d0cd3c6de9c4383e</anchor>
      <arglist>(double _erp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorReductionParameter</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a0d974a41683719aca5a542b40dbbb0b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxErrorReductionVelocity</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a0187252c0066caa5af49c2f66d25ee4d</anchor>
      <arglist>(double _erv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getMaxErrorReductionVelocity</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a8c8de2f6fa791647e2d4c7b7d30ae945</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setConstraintForceMixing</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a96d86b1588767294499971d897c0bf39</anchor>
      <arglist>(double _cfm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getConstraintForceMixing</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a7c79baf7eed9a28a2692ab17b600d91b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a44e07327eebbd4b17a016ec7edafc12a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getInformation</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a60eee3dc022e86b3caced8121fa17448</anchor>
      <arglist>(ConstraintInfo *_lcp)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a258d5fdf18d412b1a77b90c06f82c22f</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getVelocityChange</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>abfc38344dbadea4732810dc428494a8d</anchor>
      <arglist>(double *_delVel, bool _withCfm)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>excite</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a78002a625a59361967cd6baea17b88f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unexcite</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a0e2922019344064b671396cad50379da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applyImpulse</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a4bc58e9611826dbee323acc05ee0f390</anchor>
      <arglist>(double *_lambda)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a123de0f4470b0280bbc0a13bcd758be4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>isActive</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a6dc99cdf5e0edc66308376a7eaeb565d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::Joint *</type>
      <name>mJoint</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>adba11dda78d4c730f92566fae1fdaa56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>aba1da9311ffb50ca7d1d9c3270cbdc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>mAppliedImpulseIndex</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>aaddc458e295c614f4bf645cb06190928</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>mLifeTime</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a9d3ed62a5440891acddc181986670513</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mActive</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>af51d625e91035ac7a942a71dc05d844a</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mViolation</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a5ad3273599fa5441b568c3cf0addbb18</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mNegativeVel</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a6a3b2564e2b9928bb64dbebfebd9c377</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mOldX</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a2de9d90f361954a234c6540097e2c30f</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mUpperBound</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a01fbe4aefb49e9f86efa449d17a6977a</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mLowerBound</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a27996d4b5822709409c0767210b2e102</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mErrorAllowance</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a26c45dfe89fd252bd16b7dbd2a23109f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mErrorReductionParameter</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>ae4177622e17d9f24a776258d7c689f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mMaxErrorReductionVelocity</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a1ae3e614b2c994ed93698ebb7e53830a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mConstraintForceMixing</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>acb2dc360cf9180e99ed46fe3bc9092a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstraintSolver</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a9604aeb393ba731519e459cdd02b09ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstrainedGroup</name>
      <anchorfile>d4/dbf/classdart_1_1constraint_1_1JointLimitConstraint.html</anchorfile>
      <anchor>a6410a06e07dfc729a6b7c1b05a207ef5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::LCPSolver</name>
    <filename>db/d6c/classdart_1_1constraint_1_1LCPSolver.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>db/d6c/classdart_1_1constraint_1_1LCPSolver.html</anchorfile>
      <anchor>a2eccc6c7a7da7aba40739880c24615f6</anchor>
      <arglist>(ConstrainedGroup *_group)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::PGSLCPSolver</name>
    <filename>d2/d89/classdart_1_1constraint_1_1PGSLCPSolver.html</filename>
    <base>dart::constraint::LCPSolver</base>
    <member kind="function">
      <type></type>
      <name>PGSLCPSolver</name>
      <anchorfile>d2/d89/classdart_1_1constraint_1_1PGSLCPSolver.html</anchorfile>
      <anchor>a2cda67a930d1cbc6ac57836feef868b2</anchor>
      <arglist>(double _timestep)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PGSLCPSolver</name>
      <anchorfile>d2/d89/classdart_1_1constraint_1_1PGSLCPSolver.html</anchorfile>
      <anchor>aea77ce0ad2c867ebf83797ed57cfa0c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>d2/d89/classdart_1_1constraint_1_1PGSLCPSolver.html</anchorfile>
      <anchor>ae718d2cdb92a1dcee0e3dbec70e3a2d3</anchor>
      <arglist>(ConstrainedGroup *_group)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>d2/d89/classdart_1_1constraint_1_1PGSLCPSolver.html</anchorfile>
      <anchor>acdd54fb5db8c5332ead2fe22cec72e12</anchor>
      <arglist>(size_t _n, double *_A)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>d2/d89/classdart_1_1constraint_1_1PGSLCPSolver.html</anchorfile>
      <anchor>a9bd9f00648a3319c976092c7ff9fcfcc</anchor>
      <arglist>(size_t _n, double *_A, size_t _begin, size_t _end)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>print</name>
      <anchorfile>d2/d89/classdart_1_1constraint_1_1PGSLCPSolver.html</anchorfile>
      <anchor>a68aed195da4677623e2c5f5e62f068de</anchor>
      <arglist>(size_t _n, double *_A, double *_x, double *_lo, double *_hi, double *_b, double *w, int *_findex)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::constraint::PGSOption</name>
    <filename>d8/d55/structdart_1_1constraint_1_1PGSOption.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setDefault</name>
      <anchorfile>d8/d55/structdart_1_1constraint_1_1PGSOption.html</anchorfile>
      <anchor>a4e94bf0738ddefeece1a4e4b2e3b7bd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>itermax</name>
      <anchorfile>d8/d55/structdart_1_1constraint_1_1PGSOption.html</anchorfile>
      <anchor>a427eda0c2d3b34c71eb40719f992db81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sor_w</name>
      <anchorfile>d8/d55/structdart_1_1constraint_1_1PGSOption.html</anchorfile>
      <anchor>ac7cf90c4b2596a4934bb65d65426cf2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps_ea</name>
      <anchorfile>d8/d55/structdart_1_1constraint_1_1PGSOption.html</anchorfile>
      <anchor>aefd7f847bb14caa9057f203b0752ec6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps_res</name>
      <anchorfile>d8/d55/structdart_1_1constraint_1_1PGSOption.html</anchorfile>
      <anchor>ae8de6ba1427e142fb0decd471b34dfd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>eps_div</name>
      <anchorfile>d8/d55/structdart_1_1constraint_1_1PGSOption.html</anchorfile>
      <anchor>aa4cd9b2e59655f75fd81a19f04e4d103</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::SoftContactConstraint</name>
    <filename>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</filename>
    <base>dart::constraint::ConstraintBase</base>
    <member kind="function">
      <type></type>
      <name>SoftContactConstraint</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ae71f85a57f40d8a74d8cf5a91d8fc763</anchor>
      <arglist>(collision::Contact &amp;_contact, double _timeStep)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SoftContactConstraint</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a3527295292088e8d0bdfe5de85c20e73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrictionDirection</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a53d2aabbc4de98c4ae3276288207cadf</anchor>
      <arglist>(const Eigen::Vector3d &amp;_dir)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getFrictionDirection1</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>af28e32c8e00524f9ab849ffcc8ed419c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorAllowance</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>af08cfdd7737da81a9ba352d10e1ad5ef</anchor>
      <arglist>(double _allowance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorAllowance</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>aa064c45d81acbdbf0a39fe72b37b5866</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setErrorReductionParameter</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a8e3a0bcfd86cedf0c6fb4f3e20104977</anchor>
      <arglist>(double _erp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getErrorReductionParameter</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a0a0954c7591b4752a1140cfefdd78161</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxErrorReductionVelocity</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>acb4038f9658c70ef52dc64ee6f240256</anchor>
      <arglist>(double _erv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getMaxErrorReductionVelocity</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a84d09707ed79e0cefa09b9fdbebd5432</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setConstraintForceMixing</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ab3cc8e34e362f72cab34ea27121ab1d2</anchor>
      <arglist>(double _cfm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getConstraintForceMixing</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a32b9c4f15ab283ccaf6a8c9809b79fc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a500151593b08b6761998eb980a637e39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getInformation</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a5a859a0e8279aefb9f0ff0ef1ee60bea</anchor>
      <arglist>(ConstraintInfo *_info)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a5ae11cdaaa4da575bbbea677d8c989dd</anchor>
      <arglist>(size_t _idx)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getVelocityChange</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>adf23882261275d46f078496430df5838</anchor>
      <arglist>(double *_vel, bool _withCfm)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>excite</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a874a0ed6c2a91dbc73279979d82be6cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unexcite</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a94f0ae821709bd51c3b2217c9946c2ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applyImpulse</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>afc4bf02b761fa6813984f21cf43e7a85</anchor>
      <arglist>(double *_lambda)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ad6268d6016d1ae8dc631216ced4e25c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>uniteSkeletons</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a269474343564f16a03c8005fb44c5d46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>isActive</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ad7fee406ef32001d2fc1577a73fabc12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getRelVelocity</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a6b39189e60d459724bbf4ae356696607</anchor>
      <arglist>(double *_vel)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateFirstFrictionalDirection</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>afd819b9a947b5398f911efd06794f7fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Eigen::MatrixXd</type>
      <name>getTangentBasisMatrixODE</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a946f65bb672d46b6f0e62a4160cc0e4a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_n)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>dynamics::PointMass *</type>
      <name>selectCollidingPointMass</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ab5aea21d7fcfaed23a3bbdc8ac5063f3</anchor>
      <arglist>(dynamics::SoftBodyNode *_softBodyNode, const Eigen::Vector3d &amp;_point, int _faceId) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const dynamics::PointMass *</type>
      <name>selectCollidingPointMass</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a457ba2fd482fa1638ecd009ede93abf4</anchor>
      <arglist>(const dynamics::SoftBodyNode *_softBodyNode, const Eigen::Vector3d &amp;_point, int _faceId) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mTimeStep</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a4a956382d75c38bb1b3a1aa72788220f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode1</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a8fdab8fa806e56056d2028ec995d626d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::BodyNode *</type>
      <name>mBodyNode2</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ac6237751e3be19f90bf179f8b2408b72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::SoftBodyNode *</type>
      <name>mSoftBodyNode1</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a158e9ee1866df087a92091a36328cdb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::SoftBodyNode *</type>
      <name>mSoftBodyNode2</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a1a3327900c6c3d58da03befeac46f1f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::PointMass *</type>
      <name>mPointMass1</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a4e8b35796cd19804ce440b2d7451d94d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>dynamics::PointMass *</type>
      <name>mPointMass2</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a0a8ddfae70dfd4875c349f25494608e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; collision::Contact * &gt;</type>
      <name>mContacts</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a30f7efb12a7ce82fa20d821175fc943c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>collision::SoftCollisionInfo *</type>
      <name>mSoftCollInfo</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a671c74c59f5100026485d0cfb0f1da36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mFirstFrictionalDirection</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ae410c0af89e3f2ec66768d44fc7257d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mFrictionCoeff</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a46fa5a0834d928d83965c4af08d0dbae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mRestitutionCoeff</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ab0c0bf9e59d6d80c21dfe446ba930133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::aligned_vector&lt; Eigen::Vector6d &gt;</type>
      <name>mJacobians1</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a9b5fd9b020ce6fe3933c91c3f8496dfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::aligned_vector&lt; Eigen::Vector6d &gt;</type>
      <name>mJacobians2</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a7d22be7e40989d66c69aeecb5f4c1cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mBodyDirection1</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>aa5141bd00b443e57c59982fc1da31157</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mBodyDirection2</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a0d9fe4eaf89d3917593cd0d9044e85dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mIsFrictionOn</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a4398bccf13f09f1934e72aa72bf92a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>mAppliedImpulseIndex</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a33672e10d7f22b4e755e7dbce3c842db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mIsBounceOn</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a142b792b432327d948c6a8237064cdf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mActive</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a9f4ad15c187592840c3b2bc4763ed07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mErrorAllowance</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ada8a83fc79c734939eb1cad87836b551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mErrorReductionParameter</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a55fe39a46ffdd68d7309d5b7c6019308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mMaxErrorReductionVelocity</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a56db82dbbea4b9f883efe985cef2e9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>mConstraintForceMixing</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>ae2cfc5fe27c28737199e989834b42fdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstraintSolver</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a9604aeb393ba731519e459cdd02b09ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstrainedGroup</name>
      <anchorfile>d4/d23/classdart_1_1constraint_1_1SoftContactConstraint.html</anchorfile>
      <anchor>a6410a06e07dfc729a6b7c1b05a207ef5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::constraint::WeldJointConstraint</name>
    <filename>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</filename>
    <base>dart::constraint::JointConstraint</base>
    <member kind="function">
      <type></type>
      <name>WeldJointConstraint</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>ad1ea6accfea90d70be625629fe93a52f</anchor>
      <arglist>(dynamics::BodyNode *_body)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WeldJointConstraint</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>aec5c9c329c70bac6d739a63224a0b9ff</anchor>
      <arglist>(dynamics::BodyNode *_body1, dynamics::BodyNode *_body2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WeldJointConstraint</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>ab6ef11f5bcfab97c518117dc8549cca8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a0951af3c963970cd5f1afe73fee4cb73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getInformation</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a2319b25ae152bd78ded570aa783db58a</anchor>
      <arglist>(ConstraintInfo *_lcp)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applyUnitImpulse</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>acc15519f11bbca45851f5c755686b8b0</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getVelocityChange</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>ad5eda60a3e34eadbd1b517578543a3af</anchor>
      <arglist>(double *_vel, bool _withCfm)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>excite</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a3973c3933209af0ff2f1a1bc6d9c8f48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>unexcite</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a4e925c2f4cb48d3bfc17b04191daa0a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>applyImpulse</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a3ac1f4894b2f25d0b415d4a348110ff1</anchor>
      <arglist>(double *_lambda)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>isActive</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a4fbefd472a2a09bb427f1befb0d2b39c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual dynamics::SkeletonPtr</type>
      <name>getRootSkeleton</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a5419af38d4b938ae2e83636018bd85ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>uniteSkeletons</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a53b6f559d3bf18215174fc48aabc2bab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Isometry3d</type>
      <name>mRelativeTransform</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>ac47061573a8c2c3c3201b0029db0b56c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector6d</type>
      <name>mViolation</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a686d00d9994dfcd8686a198fe94fe19a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Eigen::Matrix6d</type>
      <name>mJacobian1</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>adbe160496cd3efef195ad9cf40c24987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Matrix6d</type>
      <name>mJacobian2</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a23e611799c76d6ff5854ad5914c453d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mOldX</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>aeed9ce36337968955164b639a093e461</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>mAppliedImpulseIndex</name>
      <anchorfile>d0/de1/classdart_1_1constraint_1_1WeldJointConstraint.html</anchorfile>
      <anchor>a6694040182927ee01c47b2e511248b2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::dynamics</name>
    <filename>d7/d5a/namespacedart_1_1dynamics.html</filename>
    <class kind="class">dart::dynamics::ArrowShape</class>
    <class kind="class">dart::dynamics::AssimpInputResourceRetrieverAdaptor</class>
    <class kind="class">dart::dynamics::AssimpInputResourceAdaptor</class>
    <class kind="class">dart::dynamics::BallJoint</class>
    <class kind="class">dart::dynamics::BodyNode</class>
    <class kind="class">dart::dynamics::BoxShape</class>
    <class kind="class">dart::dynamics::Branch</class>
    <class kind="class">dart::dynamics::Chain</class>
    <class kind="class">dart::dynamics::CylinderShape</class>
    <class kind="class">dart::dynamics::MultiDofJoint</class>
    <class kind="class">dart::dynamics::DegreeOfFreedom</class>
    <class kind="struct">dart::dynamics::MutexedWeakSkeletonPtr</class>
    <class kind="class">dart::dynamics::SkeletonRefCountingBase</class>
    <class kind="class">dart::dynamics::TemplateBodyNodePtr</class>
    <class kind="class">dart::dynamics::TemplateWeakBodyNodePtr</class>
    <class kind="class">dart::dynamics::TemplateDegreeOfFreedomPtr</class>
    <class kind="class">dart::dynamics::TemplateWeakDegreeOfFreedomPtr</class>
    <class kind="class">dart::dynamics::TemplateInverseKinematicsPtr</class>
    <class kind="class">dart::dynamics::TemplateWeakInverseKinematicsPtr</class>
    <class kind="class">dart::dynamics::TemplateJointPtr</class>
    <class kind="class">dart::dynamics::TemplateWeakJointPtr</class>
    <class kind="class">dart::dynamics::TemplateNodePtr</class>
    <class kind="class">dart::dynamics::TemplateWeakNodePtr</class>
    <class kind="class">dart::dynamics::EllipsoidShape</class>
    <class kind="class">dart::dynamics::Support</class>
    <class kind="class">dart::dynamics::EndEffector</class>
    <class kind="class">dart::dynamics::Entity</class>
    <class kind="class">dart::dynamics::Detachable</class>
    <class kind="class">dart::dynamics::EulerJoint</class>
    <class kind="class">dart::dynamics::FixedFrame</class>
    <class kind="class">dart::dynamics::Frame</class>
    <class kind="class">dart::dynamics::WorldFrame</class>
    <class kind="class">dart::dynamics::FreeJoint</class>
    <class kind="class">dart::dynamics::Group</class>
    <class kind="class">dart::dynamics::HierarchicalIK</class>
    <class kind="class">dart::dynamics::CompositeIK</class>
    <class kind="class">dart::dynamics::WholeBodyIK</class>
    <class kind="class">dart::dynamics::Inertia</class>
    <class kind="class">dart::dynamics::InverseKinematics</class>
    <class kind="class">dart::dynamics::JacobianNode</class>
    <class kind="class">dart::dynamics::Joint</class>
    <class kind="class">dart::dynamics::LineSegmentShape</class>
    <class kind="struct">dart::dynamics::Recording</class>
    <class kind="class">dart::dynamics::Linkage</class>
    <class kind="class">dart::dynamics::Marker</class>
    <class kind="class">dart::dynamics::MeshShape</class>
    <class kind="class">dart::dynamics::MetaSkeleton</class>
    <class kind="class">dart::dynamics::NodeDestructor</class>
    <class kind="class">dart::dynamics::Node</class>
    <class kind="class">dart::dynamics::AccessoryNode</class>
    <class kind="class">dart::dynamics::PlanarJoint</class>
    <class kind="class">dart::dynamics::PlaneShape</class>
    <class kind="class">dart::dynamics::PointMass</class>
    <class kind="class">dart::dynamics::PointMassNotifier</class>
    <class kind="class">dart::dynamics::PrismaticJoint</class>
    <class kind="class">dart::dynamics::ReferentialSkeleton</class>
    <class kind="class">dart::dynamics::RevoluteJoint</class>
    <class kind="class">dart::dynamics::ScrewJoint</class>
    <class kind="class">dart::dynamics::Shape</class>
    <class kind="class">dart::dynamics::SimpleFrame</class>
    <class kind="class">dart::dynamics::SingleDofJoint</class>
    <class kind="class">dart::dynamics::Skeleton</class>
    <class kind="class">dart::dynamics::SoftBodyNode</class>
    <class kind="class">dart::dynamics::SoftBodyNodeHelper</class>
    <class kind="class">dart::dynamics::SoftMeshShape</class>
    <class kind="class">dart::dynamics::TemplatedJacobianNode</class>
    <class kind="class">dart::dynamics::TranslationalJoint</class>
    <class kind="class">dart::dynamics::UniversalJoint</class>
    <class kind="class">dart::dynamics::WeldJoint</class>
    <class kind="class">dart::dynamics::ZeroDofJoint</class>
    <member kind="typedef">
      <type>std::set&lt; Entity * &gt;</type>
      <name>EntityPtrSet</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac56a7745ab08dd1273216cac7df61326</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; Frame * &gt;</type>
      <name>FramePtrSet</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a932d96e287e22d44ace7fe96aa2e4069</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::vector&lt; std::shared_ptr&lt; InverseKinematics &gt; &gt; &gt;</type>
      <name>IKHierarchy</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a20a6cf4d8a08635e9bd0f74f415e8223</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>constructArrowTip</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ace0e10253d7750c9df732e6def570171</anchor>
      <arglist>(aiMesh *mesh, double base, double tip, const ArrowShape::Properties &amp;properties)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>constructArrowBody</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a005aad3c4bb6a8dd38dbd2905fd2a7c4</anchor>
      <arglist>(aiMesh *mesh, double z1, double z2, const ArrowShape::Properties &amp;properties)</arglist>
    </member>
    <member kind="function">
      <type>aiFileIO</type>
      <name>createFileIO</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a3933ea3434b7470b1d7ebb0dc3d0681a</anchor>
      <arglist>(Assimp::IOSystem *_system)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>getVectorObjectIfAvailable</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0a2112304a7478f4fab5881b08c0e5b5</anchor>
      <arglist>(size_t _index, const std::vector&lt; T &gt; &amp;_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkSkeletonNodeAgreement</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a017de4d6b353f1c1881e496dc1066f90</anchor>
      <arglist>(const BodyNode *_bodyNode, const ConstSkeletonPtr &amp;_newSkeleton, const BodyNode *_newParent, const std::string &amp;_function, const std::string &amp;_operation)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a374a7787cd9e06ac1bd8b90c56496959</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a90308c07aec0b5955d232f5bac673636</anchor>
      <arglist>(std::nullptr_t, const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa792f620923afd884f9e00973a30f960</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik, std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab908c35377add3ba671437a53a1c782a</anchor>
      <arglist>(std::nullptr_t, const TemplateInverseKinematicsPtr&lt; IkType, BodyNodeT &gt; &amp;_ik)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>getVectorObjectIfAvailable</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0a2112304a7478f4fab5881b08c0e5b5</anchor>
      <arglist>(size_t _index, const std::vector&lt; T &gt; &amp;_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::shared_ptr&lt; const T &gt; &gt; &amp;</type>
      <name>convertToConstSharedPtrVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a859f7b26735ca937d51e210c8c967782</anchor>
      <arglist>(const std::vector&lt; std::shared_ptr&lt; T &gt;&gt; &amp;vec, std::vector&lt; std::shared_ptr&lt; const T &gt;&gt; &amp;const_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::set&lt; const T * &gt;</type>
      <name>convertToConstSet</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a8157d817e7cab6ecb1199a81666a2b58</anchor>
      <arglist>(const std::set&lt; T * &gt; &amp;_set)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; optimizer::Function &gt;</type>
      <name>cloneIkFunc</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a18ebc4a3d3b183651b06c870144b2150</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_function, const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_ik)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>convertJacobianMethodOutputToGradient</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab2f709ecfe539120215266f1af5e251b</anchor>
      <arglist>(Eigen::VectorXd &amp;grad, const std::vector&lt; size_t &gt; &amp;dofs, InverseKinematics *mIK)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; optimizer::Function &gt;</type>
      <name>cloneIkFunc</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6db9fbab0ef1b3c1ebfb7942692d47a6</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_function, InverseKinematics *_ik)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stepToNextChild</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>acce1eec9363f7ec1c90586f0480f1caa</anchor>
      <arglist>(std::vector&lt; Recording &gt; &amp;_recorder, std::vector&lt; BodyNode * &gt; &amp;_bns, Recording &amp;_r, const std::unordered_map&lt; BodyNode *, bool &gt; &amp;_terminalMap, int _initValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stepToParent</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab59f5213bd9516b054afbb3407807fcc</anchor>
      <arglist>(std::vector&lt; Recording &gt; &amp;_recorder, std::vector&lt; BodyNode * &gt; &amp;_bns, Recording &amp;_r, const std::unordered_map&lt; BodyNode *, bool &gt; &amp;_terminalMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkIndexArrayValidity</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>afdb12b7745ad3009e95ad7263a0ea84b</anchor>
      <arglist>(const MetaSkeleton *skel, const std::vector&lt; size_t &gt; &amp;_indices, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkIndexArrayAgreement</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a12211b1dd8236d580e530fa43a1616b6</anchor>
      <arglist>(const MetaSkeleton *skel, const std::vector&lt; size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_values, const std::string &amp;_fname, const std::string &amp;_vname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setValuesFromVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a17c99ede432d2ad8fac279bc3d2ab2b2</anchor>
      <arglist>(MetaSkeleton *skel, const std::vector&lt; size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_values, const std::string &amp;_fname, const std::string &amp;_vname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setAllValuesFromVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a61cbc6ea951344563de318c5d171c779</anchor>
      <arglist>(MetaSkeleton *skel, const Eigen::VectorXd &amp;_values, const std::string &amp;_fname, const std::string &amp;_vname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::VectorXd</type>
      <name>getValuesFromVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a022b50b8c62e0143fb0e3510de3985f6</anchor>
      <arglist>(const MetaSkeleton *skel, const std::vector&lt; size_t &gt; &amp;_indices, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::VectorXd</type>
      <name>getValuesFromAllDofs</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aeec6fec6649364d7d6b4c7133d7e3023</anchor>
      <arglist>(const MetaSkeleton *skel, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>applyToAllDofs</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6d722984d4bd1f183d0d7dce473a1fb5</anchor>
      <arglist>(MetaSkeleton *skel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setValueFromIndex</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a1d88aa31085ec93f4a87b5950d5fdbb5</anchor>
      <arglist>(MetaSkeleton *skel, size_t _index, double _value, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getValueFromIndex</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab773f9daf740b68d97e2cc9207d0ae4e</anchor>
      <arglist>(const MetaSkeleton *skel, size_t _index, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>getVectorObjectIfAvailable</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac7b96401855672e112351544ed8bfc32</anchor>
      <arglist>(size_t _idx, const std::vector&lt; T &gt; &amp;_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; T2 &gt; &amp;</type>
      <name>convertVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a44efb6e764576cd42a718f6c8efe23c7</anchor>
      <arglist>(const std::vector&lt; T1 &gt; &amp;t1_vec, std::vector&lt; T2 &gt; &amp;t2_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isValidBodyNode</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>acdc21b49ade69175e14e82a9d8c37634</anchor>
      <arglist>(const ReferentialSkeleton *, const JacobianNode *_node, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a11d89a5d479b439acd934b0c09f58f95</anchor>
      <arglist>(JacobianType &amp;_J, const ReferentialSkeleton *_refSkel, const JacobianNode *_node, const JacobianType &amp;_JBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aeafbd1f0646cf8b8653313ffad705725</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetWorldJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a6bc0da146d655196db0cce75525acadb</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ae51822c055651adf97a8dbbc51267d0f</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a2d6232c4b019551651cb66cad69192cb</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianSpatialDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a569dd6c528bd7b77541790e117e67a9f</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianClassicDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa1c701e2d1bf2a17376c59b040d8a911</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>accf08966c21ed703d6a978f2c58405c4</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5fcd78c264e693295537438a26ffc6f1</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>setMatrixFromSkeletonData</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a27632bed7583432d63949f1de70a1817</anchor>
      <arglist>(Eigen::MatrixXd &amp;M, const std::vector&lt; const DegreeOfFreedom * &gt; &amp;dofs)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>setVectorFromSkeletonData</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aea4199124d21f60d4f6c1a0c3dfa409f</anchor>
      <arglist>(Eigen::VectorXd &amp;V, const std::vector&lt; const DegreeOfFreedom * &gt; &amp;dofs)</arglist>
    </member>
    <member kind="function">
      <type>PropertyType</type>
      <name>getCOMPropertyTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a0dafd76a5568876a927cfa778d8ea729</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const Frame *_relativeTo, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>JacType</type>
      <name>getCOMJacobianTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a78f04f14872e7db37d45f20a0a471361</anchor>
      <arglist>(const ReferentialSkeleton *_refSkel, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>getVectorObjectIfAvailable</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac7b96401855672e112351544ed8bfc32</anchor>
      <arglist>(size_t _idx, const std::vector&lt; T &gt; &amp;_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; const T * &gt; &amp;</type>
      <name>convertToConstPtrVector</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ac87221859d0f539d865fc1966b22544e</anchor>
      <arglist>(const std::vector&lt; T * &gt; &amp;vec, std::vector&lt; const T * &gt; &amp;const_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>templatedGetIndexOf</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af82ed343a37706a6b114e26ac6e2c616</anchor>
      <arglist>(const Skeleton *_skel, const ObjectT *_obj, const std::string &amp;_type, bool _warning)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isValidBodyNode</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa8651d00389646e874adaec94a4bcfa3</anchor>
      <arglist>(const Skeleton *_skeleton, const JacobianNode *_node, const std::string &amp;_fname)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a4306bf824fa8f4696a92ab1558e5a70c</anchor>
      <arglist>(JacobianType &amp;_J, const JacobianNode *_node, const JacobianType &amp;_JBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a277114afe56c75b8e5ce038a9941ba64</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetWorldJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a626a8cc5b7d8a86110d1028b0c011c23</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a70da7968bce560d07638306d4dbb3b57</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobian</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa6f759f85b89a1c6d56dcb2e3b55e34a</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianSpatialDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>af1595ed12eebb5d91c5c2b1752a73589</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>variadicGetJacobianClassicDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a3a9685dc77f11303d4c82359bfb5c5ef</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>variadicGetLinearJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a495dd6ef2917f7397cd606035aa181ef</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>variadicGetAngularJacobianDeriv</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a07d54b76c16e3597a6424d7f8e9bab6a</anchor>
      <arglist>(const Skeleton *_skel, const JacobianNode *_node, Args...args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>recursiveConstructBodyNodeTree</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a683db3338ffffeb0faba7e3c5d58274c</anchor>
      <arglist>(std::vector&lt; BodyNodeT * &gt; &amp;tree, BodyNodeT *_currentBodyNode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeSupportPolygon</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a64fcb9aed31efdcd2a48e0fadf30f05d</anchor>
      <arglist>(const Skeleton *skel, math::SupportPolygon &amp;polygon, math::SupportGeometry &amp;geometry, std::vector&lt; size_t &gt; &amp;ee_indices, Eigen::Vector3d &amp;axis1, Eigen::Vector3d &amp;axis2, Eigen::Vector2d &amp;centroid, size_t treeIndex)</arglist>
    </member>
    <member kind="function">
      <type>PropertyType</type>
      <name>getCOMPropertyTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a7ca835d48302d7cd9875cf948d522174</anchor>
      <arglist>(const Skeleton *_skel, const Frame *_relativeTo, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>JacType</type>
      <name>getCOMJacobianTemplate</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>aa6afa2bc9b0d14e17b499feaed8712fa</anchor>
      <arglist>(const Skeleton *_skel, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr size_t</type>
      <name>INVALID_INDEX</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>afa9fde78f61dbc391c18c992d49c24be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKTolerance</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a5e784e02b14816f6c3357797d342e321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKErrorClamp</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>afa5d93e10f876e3f4c019333c084772b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKGradientComponentClamp</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a06dc2b3d9522262637840806902b23e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKGradientComponentWeight</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>abbca53d13a176c5a3272364fc8e58e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKDLSCoefficient</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>ab121f3e4478bbcaadebce57698c1d8cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKAngularWeight</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a69e6c0a07f5cc5a0b94a7d8a48fa24f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>DefaultIKLinearWeight</name>
      <anchorfile>d7/d5a/namespacedart_1_1dynamics.html</anchorfile>
      <anchor>a705e6ff8260f78604f09fcefe7a164f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::ArrowShape</name>
    <filename>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</filename>
    <base>dart::dynamics::MeshShape</base>
    <class kind="struct">dart::dynamics::ArrowShape::Properties</class>
    <member kind="function">
      <type></type>
      <name>ArrowShape</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>ae53a885ba4f599117a60097f97879a48</anchor>
      <arglist>(const Eigen::Vector3d &amp;_tail, const Eigen::Vector3d &amp;_head, const Properties &amp;_properties=Properties(), const Eigen::Vector4d &amp;_color=Eigen::Vector4d(0.5, 0.5, 1.0, 1.0), size_t _resolution=10)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a9d2e8b206b851ca01cfd14641c88badd</anchor>
      <arglist>(const Eigen::Vector3d &amp;_tail, const Eigen::Vector3d &amp;_head)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getTail</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>ae2b002672cc017955d916094bb347fe5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getHead</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a70f6d12dc91db137e40c87fa1feaeacb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a127cdb8647a510ac2a935b7e8c35ea3c</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRGBA</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a9d0ecc02c80f099bfce819bb07ecfee6</anchor>
      <arglist>(const Eigen::Vector4d &amp;_color) override</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getProperties</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>afd080294af8741fd0ac6dde81b235acf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureArrow</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a9250c2169461e4789d9991682215f50c</anchor>
      <arglist>(const Eigen::Vector3d &amp;_tail, const Eigen::Vector3d &amp;_head, const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MeshShape</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ac33484b81d8bdf872d7823a5072e06a7</anchor>
      <arglist>(const Eigen::Vector3d &amp;_scale, const aiScene *_mesh, const std::string &amp;_path=&quot;&quot;, const common::ResourceRetrieverPtr &amp;_resourceRetriever=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MeshShape</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ab92a5e369f1d1a738d92634682690c6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const aiScene *</type>
      <name>getMesh</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a831a1062b1d160cd8301fe441e64499d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ad15bb39e1a87467d91dfaa8b070b7a28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAlpha</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ae8ce870fbf2efb7235574ab6a2f6381e</anchor>
      <arglist>(double _alpha) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMesh</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a626cb37f395bff7d4423fb82668d0c49</anchor>
      <arglist>(const aiScene *_mesh, const std::string &amp;path=&quot;&quot;, const common::ResourceRetrieverPtr &amp;_resourceRetriever=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getMeshUri</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a820603a0d1353c9e70a4be249f769204</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getMeshPath</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>aa6a43b8e6799ca11d4926f25796b1c1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScale</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>afabdfb66296ae8a2df9f8a18cca52eca</anchor>
      <arglist>(const Eigen::Vector3d &amp;_scale)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getScale</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a695b284553aa3429392b716ee3ed16b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorMode</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>af1675859e51bab1be4ea8cda8b8f4e64</anchor>
      <arglist>(ColorMode _mode)</arglist>
    </member>
    <member kind="function">
      <type>ColorMode</type>
      <name>getColorMode</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ae08d3e757629b70b60351dac3963f176</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorIndex</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a303d57b94745409558fe1c68cba3f938</anchor>
      <arglist>(int _index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getColorIndex</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a3cb5fb3edac0ee4ef3dd251b546d81af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDisplayList</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ac7ed633f7fbae0c6cf0705b5dc0a97e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisplayList</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ad7f7b04aaaa76d6a1c3d7e17ff437b27</anchor>
      <arglist>(int _index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a215c705262c08317d03a4bb16858d956</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, const Eigen::Vector4d &amp;_col=Eigen::Vector4d::Ones(), bool _default=true) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a5347887671f90e70b1de800c1e21a781</anchor>
      <arglist>(double _mass) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Shape</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a75aa60456007c8a607c0ca5b3066f460</anchor>
      <arglist>(ShapeType _type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shape</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>aeb636289f25b7ca29ad5701212fd85bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a3da5d594c646155d6bb9b7589aff84c2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>aaea0f5662e890a37109ec2aba027b10b</anchor>
      <arglist>(const Eigen::Vector4d &amp;_color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRGB</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>aeb5179f714bdaa6a504a2191ee9119b1</anchor>
      <arglist>(const Eigen::Vector3d &amp;_rgb)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getColor</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a3c976e9f3f431935fed64645f7757598</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getRGB</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a308e91051d3c31df6820298b67af4b1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector4d &amp;</type>
      <name>getRGBA</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a69a89649388bdb5e2fe9644d94315741</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getBoundingBoxDim</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a9e83cd0732a160c608fb67b1d666bd67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocalTransform</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>afa6ae6fa812bb268e35415772fe2f838</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_Transform)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getLocalTransform</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a0ddd9a24347fc510ce020a35a37fafaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOffset</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>aa6f8d913f8f6c8bcf32d93c9dd6194fd</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getOffset</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a19e94d3a019bc76e77478c4b48940c11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVolume</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a0a8824b5ebb8b738ce0431d58e162877</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getID</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a59f9401d81166f53d2f72baa73ac392e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapeType</type>
      <name>getShapeType</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a008111ba607c45955131361d493e053d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDataVariance</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>ad6981d7ba48914e48416e11abf903262</anchor>
      <arglist>(unsigned int _variance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDataVariance</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>ad0839111649737fa96e7e771eb0c7efb</anchor>
      <arglist>(unsigned int _variance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeDataVariance</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>aa0685a8a9d886b01dcdcf6e2a121b5bc</anchor>
      <arglist>(unsigned int _variance)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getDataVariance</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a709cc0dc204d0c086f10ac4d1200c10f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkDataVariance</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>ae551d28e14c1fc637b85228b0280808e</anchor>
      <arglist>(DataVariance type) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>refreshData</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a9d3a188f020eb6b01b1472602247c010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHidden</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a4f9617279ee6e7e6578c1f3cee92ffd5</anchor>
      <arglist>(bool _hide=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a1158f76c0e7794dc54eed4600ca0b63e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>instantiate</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>ae35d9af2e22665cced89fa37157ea455</anchor>
      <arglist>(size_t resolution)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>computeVolume</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a3bd2638a88c89f1c4cee55a5ba1ebbe6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initMeshes</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a5eceaa8f57891694c4867c6fabdc0441</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mTail</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a51ea49f5ea7204b1b18c7b8b8f5eb1b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mHead</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a6259de438733d4a5117960da13bb6023</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mProperties</name>
      <anchorfile>d7/dcd/classdart_1_1dynamics_1_1ArrowShape.html</anchorfile>
      <anchor>a25214998085e8d91234c2ac25286ed88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const aiScene *</type>
      <name>mMesh</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a0ca12db4d0674aa1e5e091b567690ba2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mMeshUri</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a2b8031ff435d2fbe0d23588eef42a66f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mMeshPath</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a9906bf3cd5c0cdf207be46786bef147b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>common::ResourceRetrieverPtr</type>
      <name>mResourceRetriever</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a0a0664ae7f5007260b50c60e554c14fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mDisplayList</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a8c8027ef427697fac866f3c5f30b49bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mScale</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a354fcd58f9b788ed013b75714b1cb5b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ColorMode</type>
      <name>mColorMode</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a78f1c6fa9b19e9d3f202a9a8088e0d95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mColorIndex</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a13ea6e9380c956f1a596f15cf771768a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mBoundingBoxDim</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a806daf43c119d2f4563ca4d5863855d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mVolume</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a0d9eb76ab4c229100cba7ccc833aee0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mID</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>adefad047400d9d53ed10a07816c3636e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector4d</type>
      <name>mColor</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a5592a8e31030dd80c7ad3118c18e3430</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Isometry3d</type>
      <name>mTransform</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>adc7befa7f83453481dae2f89d22c8340</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>mVariance</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>aa4ec0172edc2d98894b5a41228b598a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mHidden</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a27090a2654107ad0b3565e48657d2f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ColorMode</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a6a8801f85b74d48de1213f71fc00d5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MATERIAL_COLOR</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a6a8801f85b74d48de1213f71fc00d5e1a5df26b75fa14494693e47ab3d86cc3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COLOR_INDEX</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a6a8801f85b74d48de1213f71fc00d5e1a1200902858f1dd5986eb11fddac37fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SHAPE_COLOR</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a6a8801f85b74d48de1213f71fc00d5e1af352ba82fe6878f2880af89504e86186</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ShapeType</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BOX</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da7176c735acd02ef5a1e03bd78a44e502</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ELLIPSOID</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da3691b628dfab6bb7743f09293b62dbbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CYLINDER</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da0f13778af4f881caa5c6b9999ba50cb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PLANE</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da59fa94d70966ab54b5fbb478d2ba0c6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MESH</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da02a8e4903d35a12457ea62b4d6346703</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SOFT_MESH</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da83b71a28c527c4ffa75c17a351314497</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LINE_SEGMENT</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a52bc86be856e82f6f6d3d86da9cb4b0da052d1a2f239a7f535a5bd477fc9a9599</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataVariance</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STATIC</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0fa502f95055f5bf314bf89d827ca9ca209</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DYNAMIC_TRANSFORM</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0fa2c5d822f3be938e676182409fd0c12b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DYNAMIC_PRIMITIVE</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0fa86dba45230234e3863833e2a1879f413</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DYNAMIC_COLOR</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0fabadc84c368d769a47990d20a5d1020c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DYNAMIC_VERTICES</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0fa025d94e41df692427a2006cf24b7e0b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DYNAMIC_ELEMENTS</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0fa9193a049bafb05da2687c21150dd4cb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DYNAMIC</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a61d01bb71d80b589ee363abd755e9f0facab917881ac054365c6c62a35ede15b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const aiScene *</type>
      <name>loadMesh</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a4b8bc065fa91d815f37626cada588758</anchor>
      <arglist>(const std::string &amp;_fileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const aiScene *</type>
      <name>loadMesh</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>ade1491cd318e941a21cc2db3ed4ea166</anchor>
      <arglist>(const std::string &amp;_uri, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static int</type>
      <name>mCounter</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>afa444536c129225a776b011281166508</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::ArrowShape::Properties</name>
    <filename>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</filename>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</anchorfile>
      <anchor>ae353b73c190451d692c90cfbf0f81670</anchor>
      <arglist>(double _radius=0.01, double _headRadiusScale=2.0, double _headLengthScale=0.15, double _minHeadLength=0, double _maxHeadLength=INFINITY, bool _doubleArrow=false)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mRadius</name>
      <anchorfile>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</anchorfile>
      <anchor>a68fd171a73053c9b2ec24f7e6d8abd98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mHeadRadiusScale</name>
      <anchorfile>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</anchorfile>
      <anchor>af00879501a952ef4cc5f5d89712c6176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mHeadLengthScale</name>
      <anchorfile>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</anchorfile>
      <anchor>a9d355d6eae76218c424f5aeadf106ec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMinHeadLength</name>
      <anchorfile>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</anchorfile>
      <anchor>ad12cc4f771ab3538625a736578dafcca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMaxHeadLength</name>
      <anchorfile>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</anchorfile>
      <anchor>a40d938ef3b752cd313b24a0a6e120d1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mDoubleArrow</name>
      <anchorfile>dc/dc5/structdart_1_1dynamics_1_1ArrowShape_1_1Properties.html</anchorfile>
      <anchor>abf72a70866bc6aaa52cb3e38682479cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::AssimpInputResourceRetrieverAdaptor</name>
    <filename>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</filename>
    <member kind="function">
      <type></type>
      <name>AssimpInputResourceRetrieverAdaptor</name>
      <anchorfile>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</anchorfile>
      <anchor>a067d7c0db2a859bc7872fa1ac8ceafa8</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AssimpInputResourceRetrieverAdaptor</name>
      <anchorfile>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</anchorfile>
      <anchor>a5c5a590541dde83a7a596362152c2e4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Exists</name>
      <anchorfile>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</anchorfile>
      <anchor>a56fe471ab333f1be5d4e78da0af94046</anchor>
      <arglist>(const char *pFile) const override</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getOsSeparator</name>
      <anchorfile>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</anchorfile>
      <anchor>aca889c581c234ff4ef6fbc7c1b6b9ab9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Assimp::IOStream *</type>
      <name>Open</name>
      <anchorfile>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</anchorfile>
      <anchor>a995757e584f732512d0060edbff85a7a</anchor>
      <arglist>(const char *pFile, const char *pMode=&quot;rb&quot;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Close</name>
      <anchorfile>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</anchorfile>
      <anchor>a4d6e2dc83bbd2bf7ef0c6052d2aefe34</anchor>
      <arglist>(Assimp::IOStream *pFile) override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>common::ResourceRetrieverPtr</type>
      <name>mResourceRetriever</name>
      <anchorfile>d6/db8/classdart_1_1dynamics_1_1AssimpInputResourceRetrieverAdaptor.html</anchorfile>
      <anchor>a2a8e06a1c476ff7f05c8e7fe31208941</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::AssimpInputResourceAdaptor</name>
    <filename>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</filename>
    <member kind="function">
      <type></type>
      <name>AssimpInputResourceAdaptor</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>a37c84b69f9953ebdcf80bcb3f54c3733</anchor>
      <arglist>(const common::ResourcePtr &amp;_resource)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AssimpInputResourceAdaptor</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>af8475b17e08d978ee2b88135b5ac1594</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Read</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>a09e1041cf6d63ac72ab228ae03404ec4</anchor>
      <arglist>(void *pvBuffer, size_t pSize, size_t pCount) override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Write</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>a9cfc0c9d5ae582b267ba64460afb2daa</anchor>
      <arglist>(const void *pvBuffer, size_t pSize, size_t pCount) override</arglist>
    </member>
    <member kind="function">
      <type>aiReturn</type>
      <name>Seek</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>ac7e91cf3b5885508aaac0c3470e7a693</anchor>
      <arglist>(size_t pOffset, aiOrigin pOrigin) override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Tell</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>a1b48bd5d7bbdc5d7f86e408392be82cb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>FileSize</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>a4ef307aa2e220cd457a91612ceee93c4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Flush</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>a48f4dded657b149b2abd4ad8a342c1ec</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>common::ResourcePtr</type>
      <name>mResource</name>
      <anchorfile>dc/dc1/classdart_1_1dynamics_1_1AssimpInputResourceAdaptor.html</anchorfile>
      <anchor>a3c0ac51d4aca155711e9fe5a4de6ed64</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::BallJoint</name>
    <filename>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</filename>
    <base>MultiDofJoint&lt; 3 &gt;</base>
    <class kind="struct">dart::dynamics::BallJoint::Properties</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BallJoint</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>aed8288cf2a10d6bcd06c667c59183c36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a95926e871740456bb9df393699a6abbd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCyclic</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a656bd6d352378bbda6dc73e296a7e5cd</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getBallJointProperties</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a32b8ca5079bf2df36939f6816826c195</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 6, 3 &gt;</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>ad2bd630eab438cf74195cdf0e1dd9e0b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getPositionDifferencesStatic</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>aeda690b0d62236219d3e991b4d298036</anchor>
      <arglist>(const Eigen::Vector3d &amp;_q2, const Eigen::Vector3d &amp;_q1) const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiDofJoint</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af626d0306f74cd951e031101a065214a</anchor>
      <arglist>(const MultiDofJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiDofJoint</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af6a9dbc1d32bc19282dd2d784d6b6a09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a299a4e22dac4533d9ce2b70724f1915a</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>abd96574381a94874d9e84296cf7449f1</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getMultiDofJointProperties</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a3a9870bdfc370aa7326c759e462979f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab590e4cb52f518b1f2e7bcd10280d13c</anchor>
      <arglist>(const MultiDofJoint&lt; DOF &gt; &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>abbafd3e163f18addef1de282091c7d48</anchor>
      <arglist>(const MultiDofJoint&lt; DOF &gt; *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>MultiDofJoint&lt; DOF &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a42eb718b902a70d65c35ad83fd737602</anchor>
      <arglist>(const MultiDofJoint&lt; DOF &gt; &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a121f549c73c7463665ba5acb94f327b6</anchor>
      <arglist>(size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a56d39570b2bb0bfbb2515f8e30542923</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumDofs</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a43a55801341a1ecdb127aaff1b78676b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setDofName</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adb967d0bd025a7022346e226f33a7142</anchor>
      <arglist>(size_t _index, const std::string &amp;_name, bool _preserveName=true) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preserveDofName</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a234cca59d9673ae5f28512fd7279693a</anchor>
      <arglist>(size_t _index, bool _preserve) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDofNamePreserved</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8ac283f8f50690cee8a8b584cfa05bbe</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDofName</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2a516155574e94f8a72008e68b1ef2a4</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aa17ed0219109c8ae2431a6e5739d9244</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a179161b249126cbb2043c48fddb393f9</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCommand</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a727996b761aad451731ddebb81a50944</anchor>
      <arglist>(size_t _index, double _command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getCommand</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8bfa2493feb1a3ed13c5c5bc062c6ba1</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7a9d49697439f840a757c7287c3c4859</anchor>
      <arglist>(const Eigen::VectorXd &amp;_commands) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab9d418428de330f652228f267be8dfaf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aab84af08eade0cf0eee6815be8f93217</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a08f0c0c5d64b94ee71de186198b023cb</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab47e064e7551d7f66730642db1fbd40d</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7f1517584abd1d7284d6d190ea734743</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>add02dcf2d93b654d041d0de03f9e6a58</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2e25654883ffff27907744175f76fddf</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afc54796a247eb78d6e76845f5cdc4669</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0d4f3e8a4672b054f1fad9c830526ac9</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a80d2c51a235f7241c645fca5a42affdd</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a448bfb5fe02ffeb564d24b09afc7d1b7</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a074314a5fc9e7e217e5c0d0550409d29</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adc933b3962a5802395350ce3c75c2d34</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a11f6e67224ddcc930524ed0b8730e8fd</anchor>
      <arglist>(size_t _index, double _initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4262578db4f2978f17f351c2f51de7df</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a83944e598a597dd3b19abeb7adec3929</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>addd227452dd8a5e65add41c1756262cb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a67d9e136e29cbe61b5098b15e4430212</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aca5afc185be722fe5c30eee9447f0770</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>acaa6d8794f1639a8ad5d3e3229251aef</anchor>
      <arglist>(const Eigen::VectorXd &amp;_velocities) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab81c6cedf1f85bc30bed3cf505748823</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a22780c2deaa80cabda5908cd35c6afb8</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a82d366feb9087830f85bf23099e7777d</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a561d74b2f5db70355aec1481a59995e0</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afd4b8551b8a6ef9e05e1914824530340</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>acb6f7ab189ffab40dfcba01331d0329b</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af4f53e6fbf34ad1a6fffb9ea6a687f60</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a959d2e8f15b30fd4498e53cfb00ec8e1</anchor>
      <arglist>(size_t _index, double _initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6c4f2e641f513bffdcf1c1cace017928</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2817ed658653a05b99533ba6f7a03dde</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a34c8c9aabd08674a66a87ea6c37ccc7c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a5c387d73f3004daf5693693f1f2b9ff2</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad6902d9231cfa45897f2fca00cf08156</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a399d191ca1e5256cec2ba323f0c2d177</anchor>
      <arglist>(const Eigen::VectorXd &amp;_accelerations) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a90680f6bc529b710bfcdd311cb5fe665</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a63a40d8664532662f0a3a2345d0edb13</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7f4d9de0294c7d6302ca8c2ef1d8e34d</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0dae14fe97df9b494565026b3f5fac14</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6116417594649d5db6cd5a06055aed55</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a07a49215410387408e9936688622fdf6</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6fad871fcd744ecddb2323e7a794a563</anchor>
      <arglist>(const Vector &amp;_positions)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getPositionsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4a3470038964cfe8184a6ba728412548</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocitiesStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ae7aa931fd1bf727daafb2651e376e384</anchor>
      <arglist>(const Vector &amp;_velocities)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getVelocitiesStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6d6c4264b76dadab5e323b596d9d7f78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2daf7ae406e645b3d48234c2634b5eb4</anchor>
      <arglist>(const Vector &amp;_accels)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getAccelerationsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a680528ecb078201e4ec2e37f8d492729</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afbf6552d9c8b3964979b678c883e24d0</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a79e3c4d16c1e3ce1d1aa64b0d9a3b807</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a520cce075a9b7095f7f23e244bf6f31d</anchor>
      <arglist>(const Eigen::VectorXd &amp;_forces) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7d94197af44eab04f5402d109ddd7498</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0abdaffd27d50ce6c3710bf04ca5604c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a19155cb2e4a2ea0aa476af158cd46f20</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a944337a16109d0bd86682581ce386be2</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af88cda0e5f201c5ff1b13367175a96f9</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7c08e0a4de4cd813019cb21588e57096</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVelocityChange</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a478d5beb8cc51000a02ade8d54da13e0</anchor>
      <arglist>(size_t _index, double _velocityChange) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getVelocityChange</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad2b3ac4079775bde2b713da6f1f9408c</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adedbdef5f59e76d7591d312c33a24582</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a61653481cfbbe0967f3a80c4f8114d00</anchor>
      <arglist>(size_t _index, double _impulse) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a567d1bb04d2fbe5632da52b434d78f30</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ac7c3c20f9fd5c769ca51ad7cde7de99b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integrateVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8db24e20a58ae3945c98c4680693d04e</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a9f942a4aea8a3cd9376930fdc4d7f749</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q2, const Eigen::VectorXd &amp;_q1) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Matrix&lt; double, DOF, 1 &gt;</type>
      <name>getPositionDifferencesStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a3e10c4cebae8d8112554897fe9123926</anchor>
      <arglist>(const Vector &amp;_q2, const Vector &amp;_q1) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPotentialEnergy</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aa733b6e36f54bedfe297feb5e5275b0d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Vector6d</type>
      <name>getBodyConstraintWrench</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a141165d9d4794cf922e965d101f6571d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSpringStiffness</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a69a802fa145ed4331a856e069bab8c7f</anchor>
      <arglist>(size_t _index, double _k) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSpringStiffness</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a90af83b809eebf98ae7e185243ef6436</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRestPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4f7bc7e0d5c10e324969c7df101bde77</anchor>
      <arglist>(size_t _index, double _q0) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRestPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2b4555bdb9b5e46bcf9b766a292d6f94</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a466ff4b4e4260b2637f7bf8a4c69f354</anchor>
      <arglist>(size_t _index, double _d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aa597a7c4a2b5f00f73ad2200424d1ee8</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCoulombFriction</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af05accc9d0a1f386badb06f3756776e8</anchor>
      <arglist>(size_t _index, double _friction) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getCoulombFriction</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a5a9bbe735bb3a3c68b92322c5e979eec</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Joint</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aaba213b26a47dc4d17fad9dffbda5d8e</anchor>
      <arglist>(const Joint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Joint</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af87d36a8f7e467a1845e33f737a85f5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a9e9009164d7fe85c79c3dd82d6f6e3d7</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getJointProperties</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a191b56545d8e505375b7f084a8707d03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a54d086163310e8a4c2f391bc81c116f8</anchor>
      <arglist>(const Joint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a7d6b2bd1ca6cb0c0d37a9d1628d90e60</anchor>
      <arglist>(const Joint *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>Joint &amp;</type>
      <name>operator=</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aad5f0768868f318b7eebe0729efada2e</anchor>
      <arglist>(const Joint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a69c499c9349bef45138d27f35a7adb1a</anchor>
      <arglist>(const std::string &amp;_name, bool _renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a1a0f23c04b9c1348d9bf2187bb58e252</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActuatorType</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0ab6112df3f12631be0bc385fd898450</anchor>
      <arglist>(ActuatorType _actuatorType)</arglist>
    </member>
    <member kind="function">
      <type>ActuatorType</type>
      <name>getActuatorType</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a6d4a95679808c7620b599235cde5bfd4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isKinematic</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a19db067df41a7e16e34055d017e423c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDynamic</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>acd4a8d4a100f203ed5255c8fcf66c161</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getChildBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae18f1f52945eb3e558f2ed80c4114926</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getChildBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a28d3bf6e0b843bcfccf27493f4262459</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getParentBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a46ae90ae92ab034cd557c3e5b865a7fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getParentBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>addc7128b79bc27c26fa764aa451ce644</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa2eb3ca91def6c54cc7161e7a79a8f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const Skeleton &gt;</type>
      <name>getSkeleton</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a9ba2298842daa800567e545ebf9cdb7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransformFromParentBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4b86d9681d4519cca8b4fa4046333f5d</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransformFromChildBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a048d55f67f4caa7108e5416cb733d0cb</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getTransformFromParentBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2d096d1ac6a4d79070fc5d43e358012f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getTransformFromChildBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0cf31e9e9ae066be9835932781dd1888</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLimitEnforced</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa069a41f8bcac2ded08f5b008e8f3983</anchor>
      <arglist>(bool _isPositionLimited)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEPRECATED</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a867ca6841b54d0761d4daa1129d014c6</anchor>
      <arglist>(5.0) void setPositionLimited(bool _isPositionLimited)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPositionLimitEnforced</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aaaf2c1c363aab354feef09da7334c134</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEPRECATED</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>acdb3f9695d527f337f95401a83aa38e3</anchor>
      <arglist>(5.0) bool isPositionLimited() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getJointIndexInSkeleton</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a44031105be529d66c057faedb55cb001</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getJointIndexInTree</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ad93efac54d165e3e0399f2999e68eb0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getTreeIndex</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac77c3419da7c5044ff02832e7f611df0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getLocalTransform</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac0493cc445b8744277914dcb980b7fda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getLocalSpatialVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2d2dff6236fbcd15e1594e12a90c5f2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getLocalSpatialAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aebb425dcaa45ae4f92d5ea17c06e4b32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getLocalPrimaryAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa619c9fadeb9fcafaf21fe722de57da5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyGLTransform</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2fca60e45344427bce74aff078ab51b2</anchor>
      <arglist>(renderer::RenderInterface *_ri)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkSanity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac7e837a5bed7d3d123b366953c389fa9</anchor>
      <arglist>(bool _printWarnings=true) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a0443a07b573a10879daacf1900730a8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Vector3d</type>
      <name>convertToPositions</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a8aa037cb97bb24b53477e0d13f37fcfd</anchor>
      <arglist>(const RotationType &amp;_rotation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Isometry3d</type>
      <name>convertToTransform</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a114b04d9dd8169a864e01da755eda5ee</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Matrix3d</type>
      <name>convertToRotation</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a1a64743339e6c4733bbef5faedefb11e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BallJoint</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a1c17e99522b8f6fd12ef3fd68eb88442</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Joint *</type>
      <name>clone</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>afe4a1631ae64661cd4f19b718b93cb17</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>integratePositions</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>ab5b19daf7d07c0f6b699adb0719ad7cd</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a87dcd85816aeffd1f1a5aaeedbe07946</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalTransform</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a110a6977a022df6079912ba76e904c57</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalJacobian</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a5427467c5ed0bb334c7c4171fbdbc12b</anchor>
      <arglist>(bool _mandatory=true) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalJacobianTimeDeriv</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a22d4ae53dc804886129d2cca6181ba83</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getR</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a58a79f9ec4afe3b895efd664cf3edd51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MultiDofJoint</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aebce84f6be7a9725f43ff57816acfc71</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerDofs</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aeaa5491853b61e017037841989f4de83</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvMassMatrix</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4c5ffb2c7f73817abe9d584053eefe51</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvAugMassMatrix</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aed2b4924d7542a7ed69201ef94eea591</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForceForInvMassMatrix</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adf534f80e0cb806c8e52b07f6a6e12d6</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvMassMatrixSegment</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a21056e75791130fdce115cdd6c33a8ea</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvAugMassMatrixSegment</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0184659838e653f452447e50ddcdd306</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addInvMassMatrixSegmentTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aceea69dfce5684e82ff689b2bbc63782</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>getSpatialToGeneralized</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a69407379e7f265fab6e775201aeb8f13</anchor>
      <arglist>(const Eigen::Vector6d &amp;_spatial) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>acc2eec4a251207980ec8c328eb2527eb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a954a8a6b0d4dc82387566682e60cc7ff</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, 6, DOF &gt; &amp;</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab98130f46f0278228203c7e57189ead1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Eigen::Matrix&lt; double, 6, DOF &gt;</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ae69cc19c7389d7fa2707cbe44bfd1c34</anchor>
      <arglist>(const Eigen::Matrix&lt; double, DOF, 1 &gt; &amp;_positions) const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const math::Jacobian</type>
      <name>getLocalJacobianTimeDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab1d663aabcaeefb4af8999f814104dd8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, 6, DOF &gt; &amp;</type>
      <name>getLocalJacobianTimeDerivStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a58c6a50be34213d3d0b41b97d0e390a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, DOF, DOF &gt; &amp;</type>
      <name>getInvProjArtInertia</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a528d2b4dda452b480f37caeae48d13ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, DOF, DOF &gt; &amp;</type>
      <name>getInvProjArtInertiaImplicit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a75ee9b5c626bd4b1c6d7d682aad5642b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalSpatialVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a59b84b398e739afcdc7af4a463671542</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalSpatialAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>abb9e1037840164e8a504a9525e8f9c93</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalPrimaryAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6f1602aee14aa6da2fa20b0f5468fc07</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a695b7ca508d75c0ec05a6f44193a0d32</anchor>
      <arglist>(Eigen::Vector6d &amp;_vel) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPartialAccelerationTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a38538782270de20a7719bef4cce0941f</anchor>
      <arglist>(Eigen::Vector6d &amp;_partialAcceleration, const Eigen::Vector6d &amp;_childVelocity) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addAccelerationTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0c67ba1920904739f256c2ffc5c36edc</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addVelocityChangeTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7131af687c5441f5367f6509af59fac3</anchor>
      <arglist>(Eigen::Vector6d &amp;_velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addChildArtInertiaTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a21333ff1ff5616ed9b2cf5c4c8630dd8</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaImplicitTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab04f3cfd4ed528821b3c824f0e8f2246</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertia</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a1106a8dac228592b4179cf3e6a893c27</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad28d890eb2ef95bcb712da59c209b61f</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4d7cbeb67047ed72a7dc451f2f6de4a2</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce, const Eigen::Vector6d &amp;_childPartialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasImpulseTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a43065522936c0ff17261943bb07939de</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasImpulse, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a54a29f386653b06973ef62080cac2ba0</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad7bdb6946f0f4ba5df2abad1cf5f0b5b</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetTotalImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a58230b7b40ab0ad4c7e7c4fe773cb27b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a59bde4536c6423d0119b8765aac3db01</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocityChange</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afca2a5aa43a036e09f77aa76e84fa494</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateForceID</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad9029a773828ec608ab87d488b3218f6</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateForceFD</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8852308c120e782aeee0644afbc11d53</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateImpulseID</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a1e188f117097d459c1ed1d18f005a19e</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateImpulseFD</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a9f455f7297554c35d02ee7836d38689b</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0c67477f166553f29bf6eb039fd40332</anchor>
      <arglist>(double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Joint</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a7c93024452a51b984d33f30094e593b4</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DegreeOfFreedom *</type>
      <name>createDofPointer</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af2141734f995960d40b6ee9bbb2d4598</anchor>
      <arglist>(size_t _indexInJoint)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>notifyPositionUpdate</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a57977210b66f005c446a3c33b0bb578e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>notifyVelocityUpdate</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a8fe413bf4e47765f2cdff2f5db4a14eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>notifyAccelerationUpdate</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a52639faf7a863932fb97bd4ab97c42a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateArticulatedInertia</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a3fd1e735dc9f700a2768e7ad4d88c889</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Isometry3d</type>
      <name>mR</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a9456934b38ce8d6a3f59704a909ec18b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MultiDofJoint&lt; DOF &gt;::UniqueProperties</type>
      <name>mMultiDofP</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af26673521ed4c68536c0aa17bbd38616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::array&lt; DegreeOfFreedom *, DOF &gt;</type>
      <name>mDofs</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0295360af9292b9413f7711a800f1650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a47310e00f6bafa84e892c2a6de7d1078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a67686193eb1f3a00406c6964051baf19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mPositionDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad4b863b741157b8d6a0c4c272e2c63fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ae3514a550010fdb8247277d1e483aa7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocitiesDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a205518d1d940bd7a58da3c4797dcd976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a1914d76f4a10a70cb769cfb078e6e761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mAccelerationsDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a24897f6727c7e9b94b1b180712ba3354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a05eb3dd0d1a6babd1b64e0b32a87b52f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mForcesDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adff503ec796639073c6e89c9aaeb8c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocityChanges</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a175dc6b707e8768cceef85b9c25cf8a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a53e7b885ab3872ef75077d43c2098546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mConstraintImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7767c5503325a2797dcd818a898c9059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, 6, DOF &gt;</type>
      <name>mJacobian</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a35d34745d97230e6cd88e56603df41f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, 6, DOF &gt;</type>
      <name>mJacobianDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a949b3d7c16f880871b2a304e50e1b812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, DOF, DOF &gt;</type>
      <name>mInvProjArtInertia</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a40e1ebd071a7c4fb42f5ee953215722d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, DOF, DOF &gt;</type>
      <name>mInvProjArtInertiaImplicit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a5e665fa058bfd2c8809db6901ea26127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6c1af9cc0ef9fc1326ac13ff1e67c403</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a15f2342b6a09189540789f930d769951</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvM_a</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7387fa0865e340d0442cdacb5e54f0f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvMassMatrixSegment</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aac97c52601a280fb48d48f057512bc63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mJointP</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a76d8f3bc4af2da4fcf8cf8f85c9c294d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BodyNode *</type>
      <name>mChildBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a7560aa4130a25f6f0eaa52e10239ef01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Isometry3d</type>
      <name>mT</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ad65b631e90dae3b36cc3df3b3492d4f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mSpatialVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a568d47e98b81b92fae26c210c7bc9a98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mSpatialAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a47f82accdbd66200f5aff217d3d83df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mPrimaryAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0b56730e3b67a130d162b950f00d7192</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedTransformUpdate</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a50923451aa330ac28e04c610643ee825</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedSpatialVelocityUpdate</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a3aaf7f3d32a13723cd1f90506c64c758</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedSpatialAccelerationUpdate</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a01114a7acdcc297dd045a4b2ae85e719</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedPrimaryAccelerationUpdate</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a27a5575d06590e88e62afb6fafea2ce7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsLocalJacobianDirty</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a501e511cf97c695f83c7ff34046ada79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsLocalJacobianTimeDerivDirty</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aaaeaa2eb7d9789c1a0c586cb15c4f34c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d7/de3/classdart_1_1dynamics_1_1BallJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, DOF, 1 &gt;</type>
      <name>Vector</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a71c69d0d332861662f5a9dc33103148d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ActuatorType</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0ebfbc0f07ef58dd7a7e03d7e7d3b1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FORCE</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0ebfbc0f07ef58dd7a7e03d7e7d3b1c0a06863aecb18c1e4db3d2b539710fa8a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PASSIVE</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0ebfbc0f07ef58dd7a7e03d7e7d3b1c0a625b49f4d13c0b144a6fb5d9f8c8696c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SERVO</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0ebfbc0f07ef58dd7a7e03d7e7d3b1c0a7665da4c4fb1b3fd7d41efd15162be35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ACCELERATION</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0ebfbc0f07ef58dd7a7e03d7e7d3b1c0a90c3cab8aad656a90e61a80c63111146</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>VELOCITY</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0ebfbc0f07ef58dd7a7e03d7e7d3b1c0aee9d1e2c47b42f33defec1e05f214caf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOCKED</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0ebfbc0f07ef58dd7a7e03d7e7d3b1c0a6f1ffdd78326e87ccb4ac6f08b862baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const ActuatorType</type>
      <name>DefaultActuatorType</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ab1f38e3e1945586f2e6dd0446f6d8bd6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::BallJoint::Properties</name>
    <filename>db/ded/structdart_1_1dynamics_1_1BallJoint_1_1Properties.html</filename>
    <base>dart::dynamics::MultiDofJoint::Properties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>db/ded/structdart_1_1dynamics_1_1BallJoint_1_1Properties.html</anchorfile>
      <anchor>adde1d666dc81a5f60816fd4c29a7fd0b</anchor>
      <arglist>(const MultiDofJoint&lt; 3 &gt;::Properties &amp;_properties=MultiDofJoint&lt; 3 &gt;::Properties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>db/ded/structdart_1_1dynamics_1_1BallJoint_1_1Properties.html</anchorfile>
      <anchor>aa761f3766ac5ba7330fc2c10488327f9</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d5/dbc/structdart_1_1dynamics_1_1MultiDofJoint_1_1Properties.html</anchorfile>
      <anchor>adae727a3749a5c6099e28ed9d8593eab</anchor>
      <arglist>(const Joint::Properties &amp;_jointProperties=Joint::Properties(), const UniqueProperties &amp;_multiDofProperties=UniqueProperties())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d8/d60/structdart_1_1dynamics_1_1Joint_1_1Properties.html</anchorfile>
      <anchor>a80b83f1a75451d933aabf129e289f4e7</anchor>
      <arglist>(const std::string &amp;_name=&quot;Joint&quot;, const Eigen::Isometry3d &amp;_T_ParentBodyToJoint=Eigen::Isometry3d::Identity(), const Eigen::Isometry3d &amp;_T_ChildBodyToJoint=Eigen::Isometry3d::Identity(), bool _isPositionLimited=false, ActuatorType _actuatorType=DefaultActuatorType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>ae36c78f98305dc286203ab5fb76fb86a</anchor>
      <arglist>(const Vector &amp;_positionLowerLimits=Vector::Constant(-DART_DBL_INF), const Vector &amp;_positionUpperLimits=Vector::Constant(DART_DBL_INF), const Vector &amp;_velocityLowerLimits=Vector::Constant(-DART_DBL_INF), const Vector &amp;_velocityUpperLimits=Vector::Constant(DART_DBL_INF), const Vector &amp;_accelerationLowerLimits=Vector::Constant(-DART_DBL_INF), const Vector &amp;_accelerationUpperLimits=Vector::Constant(DART_DBL_INF), const Vector &amp;_forceLowerLimits=Vector::Constant(-DART_DBL_INF), const Vector &amp;_forceUpperLimits=Vector::Constant(DART_DBL_INF), const Vector &amp;_springStiffness=Vector::Constant(0.0), const Vector &amp;_restPosition=Vector::Constant(0.0), const Vector &amp;_dampingCoefficient=Vector::Constant(0.0), const Vector &amp;_coulombFrictions=Vector::Constant(0.0))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a0e53d6cc6436e8d87d5b922d3824ab70</anchor>
      <arglist>(const UniqueProperties &amp;_other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniqueProperties</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a02bf14f98f70aca82e9d09ab977a6e7d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>d8/d60/structdart_1_1dynamics_1_1Joint_1_1Properties.html</anchorfile>
      <anchor>af9d9c8bcd478c6747da0166dcb5c8ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Isometry3d</type>
      <name>mT_ParentBodyToJoint</name>
      <anchorfile>d8/d60/structdart_1_1dynamics_1_1Joint_1_1Properties.html</anchorfile>
      <anchor>ace19bfd6ada39e60dfe6310057649853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Isometry3d</type>
      <name>mT_ChildBodyToJoint</name>
      <anchorfile>d8/d60/structdart_1_1dynamics_1_1Joint_1_1Properties.html</anchorfile>
      <anchor>afa6ac92e4eb4da9a3f560054d05de1f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mIsPositionLimited</name>
      <anchorfile>d8/d60/structdart_1_1dynamics_1_1Joint_1_1Properties.html</anchorfile>
      <anchor>a948f5e324b34eb7950aa941443aaabc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ActuatorType</type>
      <name>mActuatorType</name>
      <anchorfile>d8/d60/structdart_1_1dynamics_1_1Joint_1_1Properties.html</anchorfile>
      <anchor>a51aa44e581418a345365ee3f45981422</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mPositionLowerLimits</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a5272a4e5ac4125c43453b665c7a6ec1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mPositionUpperLimits</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a620581d04a27c412e342380fa04e3543</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mInitialPositions</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a6383db5ed27eaddf20dc894df545cdbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mVelocityLowerLimits</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a120747933f3c020e570293b207b947f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mVelocityUpperLimits</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>aa87d804dec491e0f7bbb3f4d90e04f34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mInitialVelocities</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a975ecbf78c0df1b277345338437a4346</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mAccelerationLowerLimits</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a9dbfd11c62a9c2ec9b7286750a4de7bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mAccelerationUpperLimits</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>af02ee861075f50decc53940132dcf08b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mForceLowerLimits</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a5a447fd6c0dfef299f59566c0fe32a53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mForceUpperLimits</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a3ba4c2c0bc01478df929dba1c9beaa94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mSpringStiffnesses</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a1573fb8a59b56ca9e4710d873869498a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mRestPositions</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a84d554f876c426f982750a0d9818361a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mDampingCoefficients</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a39488be82d3c2256cb5563efe90298fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Vector</type>
      <name>mFrictions</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a6c73dfafabd0cb161f9c482bdbeee66d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; bool, DOF &gt;</type>
      <name>mPreserveDofNames</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>aa1bb56d06ebd16bbafe6c47769da2d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; std::string, DOF &gt;</type>
      <name>mDofNames</name>
      <anchorfile>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>aba35c944e2d186fa2b5bbb6e52117817</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::BodyNode</name>
    <filename>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</filename>
    <base>dart::dynamics::SkeletonRefCountingBase</base>
    <base>TemplatedJacobianNode&lt; BodyNode &gt;</base>
    <class kind="struct">dart::dynamics::BodyNode::Properties</class>
    <class kind="struct">dart::dynamics::BodyNode::UniqueProperties</class>
    <member kind="typedef">
      <type>common::Signal&lt; void(const BodyNode *, ConstShapePtr _newColShape)&gt;</type>
      <name>ColShapeAddedSignal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>abba79bf32000a92f88ef6c8ea81993b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ColShapeAddedSignal</type>
      <name>ColShapeRemovedSignal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a037c418c74becf8c9089a7e0fe37bea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Signal&lt; void(const BodyNode *)&gt;</type>
      <name>StructuralChangeSignal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af7bfad7a867c6b66d47f92e5f819d6a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Signal&lt; void(const Entity *)&gt;</type>
      <name>EntitySignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ab332df71302a880dcdc570ebdd452bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Signal&lt; void(const Entity *, const Frame *_oldFrame, const Frame *_newFrame)&gt;</type>
      <name>FrameChangedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aa4699d7172811d709b069d584d63b829</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Signal&lt; void(const Entity *, const std::string &amp;_oldName, const std::string &amp;_newName)&gt;</type>
      <name>NameChangedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a1ff3fce90beff5cf6f5abda6c4dd1b36</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Signal&lt; void(const Entity *, ConstShapePtr _newVisShape)&gt;</type>
      <name>VizShapeAddedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a4146d0d8d1eeb7b62bf421c252cf3859</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VizShapeAddedSignal</type>
      <name>VizShapeRemovedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ad088ab7fbe939a9345df8567acb61b16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0b08cc4e8bd99d943d29cd956477f371</anchor>
      <arglist>(const BodyNode &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0c502a6125bf3ecb4e7b30f6907e7b46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a7b44eef798c4a6a7294e4fceca568269</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6870ac18d6a11929f0ee5ba2403e0dbc</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getBodyNodeProperties</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>acf152618191ce3ea2ac701bfb4b3f6d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af1f496a23db89122f6d6da312a195ec1</anchor>
      <arglist>(const BodyNode &amp;_otherBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aeec0de1ea3487390bb304c3f137cc93f</anchor>
      <arglist>(const BodyNode *_otherBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>BodyNode &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af329db481e8fd6d5a9870fca37dc5ff1</anchor>
      <arglist>(const BodyNode &amp;_otherBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a167eb9f10bd4ae23db496942d2a989c2</anchor>
      <arglist>(const std::string &amp;_name) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGravityMode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a7c78f59d4b313cf9ae2325516bf906d6</anchor>
      <arglist>(bool _gravityMode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getGravityMode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3c3af0cab7879cc19b26104b3f7f4a71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCollidable</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac8b945fe1a33f4083500c459d3ea7fda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCollidable</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a7f4e06b90d81f8eb6cbaf2a45c2f9c56</anchor>
      <arglist>(bool _isCollidable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMass</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aef96dfd1a4efa5f7ce179b666dcc97de</anchor>
      <arglist>(double _mass)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMass</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af8f85c76c8ed578a14f118d5e41129dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMomentOfInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a90408d97fdfaa881a91f99a8a1c72ebe</anchor>
      <arglist>(double _Ixx, double _Iyy, double _Izz, double _Ixy=0.0, double _Ixz=0.0, double _Iyz=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMomentOfInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae1354afc33943c59af4b52a3c3c14bc0</anchor>
      <arglist>(double &amp;_Ixx, double &amp;_Iyy, double &amp;_Izz, double &amp;_Ixy, double &amp;_Ixz, double &amp;_Iyz)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Matrix6d &amp;</type>
      <name>getSpatialInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>abef5d034f65c1837a8584fc444e02d83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a7c7c135d173730b2d9f03028afe86757</anchor>
      <arglist>(const Inertia &amp;_inertia)</arglist>
    </member>
    <member kind="function">
      <type>const Inertia &amp;</type>
      <name>getInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6c14b9cca4d2914db86055aa5546f862</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const math::Inertia &amp;</type>
      <name>getArticulatedInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab7e760fa3b69166dfabe6d6718a5b580</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const math::Inertia &amp;</type>
      <name>getArticulatedInertiaImplicit</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a5f4837fc8894fd7ed41a9bd011b32c60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocalCOM</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a766a4e1784fc26e644797603f079b867</anchor>
      <arglist>(const Eigen::Vector3d &amp;_com)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getLocalCOM</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae97605978ececa849e871b442144bafe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOM</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a975844aaa7320e157c81caa478f60f71</anchor>
      <arglist>(const Frame *_withRespectTo=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOMLinearVelocity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a86bad14269a115572ab87b14a186fa07</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialVelocity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>adbabdd3ba03642e3137937aca0b25458</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialVelocity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a58f2b547ad694722b54e58197d7fc14c</anchor>
      <arglist>(const Frame *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOMLinearAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af6230cf662dfed108c6eeb32a226e36c</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a98635b410291ff0692672f746ac1b7ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac760740a4536a6aef5916a81b20516d3</anchor>
      <arglist>(const Frame *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrictionCoeff</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a7f3d878292be0083e16f7dbbb2020371</anchor>
      <arglist>(double _coeff)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFrictionCoeff</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a52a851a4a8497ba80da82d9f00276b18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestitutionCoeff</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a857574b223162ae206b644140f65be1b</anchor>
      <arglist>(double _coeff)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRestitutionCoeff</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4022c8dd16d3a413c1d017d57b54cdf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCollisionShape</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aaa035bfe760054b27720e1565ba26413</anchor>
      <arglist>(const ShapePtr &amp;_shape)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCollisionShape</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a973d4bb1dc3ee6f845ce458d4912cf30</anchor>
      <arglist>(const ShapePtr &amp;_shape)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllCollisionShapes</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a03ad2d6b8d1ff4ccbb212fc5cb57c139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumCollisionShapes</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a646b7079a79b8b1761687c1f2ce25771</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapePtr</type>
      <name>getCollisionShape</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a92cd94630caf1c2628997399cf57855a</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>ConstShapePtr</type>
      <name>getCollisionShape</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0af801ee26afb7bdad4065c82718c46e</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa3fb9940c1c00572c34cd180304853a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a7836cfdd886cceef201289a9505287db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getTreeIndex</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4680f0139dd786ddbe35a75a55556004</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>remove</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3a7c92bc7b6040350d5b9527bd32be5b</anchor>
      <arglist>(const std::string &amp;_name=&quot;temporary&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>moveTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a7e70da1efffcd3b13de641e4bc2e36fa</anchor>
      <arglist>(BodyNode *_newParent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>moveTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a13e6fda5d2e71ea47261377083372c07</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkeleton, BodyNode *_newParent)</arglist>
    </member>
    <member kind="function">
      <type>JointType *</type>
      <name>moveTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4b2829e9787d5221c977a94b7a837eb5</anchor>
      <arglist>(BodyNode *_newParent, const typename JointType::Properties &amp;_joint=typename JointType::Properties())</arglist>
    </member>
    <member kind="function">
      <type>JointType *</type>
      <name>moveTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aab784b3aec408f6de7cf0c5aacd9450d</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkeleton, BodyNode *_newParent, const typename JointType::Properties &amp;_joint=typename JointType::Properties())</arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>split</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6deb29fd8d4108b09ba695d437cdbb2a</anchor>
      <arglist>(const std::string &amp;_skeletonName)</arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>split</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a41d0134b4b879c78497fa270dccb8144</anchor>
      <arglist>(const std::string &amp;_skeletonName, const typename JointType::Properties &amp;_joint=typename JointType::Properties())</arglist>
    </member>
    <member kind="function">
      <type>JointType *</type>
      <name>changeParentJointType</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1800c021fc8cd413e89a51bf64579056</anchor>
      <arglist>(const typename JointType::Properties &amp;_joint=typename JointType::Properties())</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Joint *, BodyNode * &gt;</type>
      <name>copyTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>afa638f3d4854dba8c63dc0cb0b765e32</anchor>
      <arglist>(BodyNode *_newParent, bool _recursive=true)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Joint *, BodyNode * &gt;</type>
      <name>copyTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aab8ca63286b92d07e52c6e52eb5e7627</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkeleton, BodyNode *_newParent, bool _recursive=true) const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; JointType *, BodyNode * &gt;</type>
      <name>copyTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a9d24a047e9efa483b73a3712d1e0b717</anchor>
      <arglist>(BodyNode *_newParent, const typename JointType::Properties &amp;_joint=typename JointType::Properties(), bool _recursive=true)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; JointType *, BodyNode * &gt;</type>
      <name>copyTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a030b3a8d24c8cda58aa2e086eb77dde0</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkeleton, BodyNode *_newParent, const typename JointType::Properties &amp;_joint=typename JointType::Properties(), bool _recursive=true) const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>copyAs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af670ea8f3769ef013219fd3cb4d2102c</anchor>
      <arglist>(const std::string &amp;_skeletonName, bool _recursive=true) const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>copyAs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a54ab03afe846e168f9f9f53fe7c9d539</anchor>
      <arglist>(const std::string &amp;_skeletonName, const typename JointType::Properties &amp;_joint=typename JointType::Properties(), bool _recursive=true) const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a380e6e396c9363b4230d45207c80be6a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>ConstSkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a95afec3d5d4d1332f88ddde4083a4dd6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Joint *</type>
      <name>getParentJoint</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1a834f7e603559f8dc279300ac9b7f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Joint *</type>
      <name>getParentJoint</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af3cc72d08f1892c6df35b0e567427f5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getParentBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a9f179a8c938173842d764995eebfffb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getParentBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa5504dc0d997c94f4bcfb32e5b0ee806</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; JointType *, NodeType * &gt;</type>
      <name>createChildJointAndBodyNodePair</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a27f22fb6df74c3ef9405e63fe40ebd05</anchor>
      <arglist>(const typename JointType::Properties &amp;_jointProperties=typename JointType::Properties(), const typename NodeType::Properties &amp;_bodyProperties=typename NodeType::Properties())</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumChildBodyNodes</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1e93eec79c295219fd9ba9a5978a5711</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getChildBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ada4389c15d8ce510e636706a78ed5687</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getChildBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af6f4bab3fe188fbb445dd238fb05a180</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumChildJoints</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3d62807e74410796cdebc526780b40bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Joint *</type>
      <name>getChildJoint</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a03c45ebb9fc5dae7fb0b7bd5ac8c0d8b</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>const Joint *</type>
      <name>getChildJoint</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>accb09c4c868de5c0e5063b492b7afdf8</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEndEffectors</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6cc97706441c6f112dfbe90eb6e13418</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EndEffector *</type>
      <name>getEndEffector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a08a9a4267a16f25e94abb6ee7403c4ad</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>const EndEffector *</type>
      <name>getEndEffector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a50331d183c9f2b46a481c42854688968</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>EndEffector *</type>
      <name>createEndEffector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a96f2843c294733b57bf4bf7ebf25971f</anchor>
      <arglist>(const EndEffector::Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>EndEffector *</type>
      <name>createEndEffector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a75efe36e5bf5e39bd9a1afb2f15e9445</anchor>
      <arglist>(const std::string &amp;_name=&quot;EndEffector&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMarker</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>abde98a000f8560b43feffb3a6da5b339</anchor>
      <arglist>(Marker *_marker)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumMarkers</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a72b3c7f939b667861cb6c3342c8977af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Marker *</type>
      <name>getMarker</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa0b63da79eda69709972d1324ef8a06a</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>const Marker *</type>
      <name>getMarker</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa3d0f89fe9345f170426d43a749a7dd8</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dependsOn</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6f1092663af77499fb4d28b6e6fbc469</anchor>
      <arglist>(size_t _genCoordIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumDependentGenCoords</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a51388927fd95b3706aced3cd1b2918c5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getDependentGenCoordIndex</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab76616819ff2a790530c808450903083</anchor>
      <arglist>(size_t _arrayIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; size_t &gt; &amp;</type>
      <name>getDependentGenCoordIndices</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a564cf93546d59dbe098b94d0b19fb9a4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumDependentDofs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a64a602f7d7389fb72b2a5aebb5b0e3c1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDependentDof</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a7cf9bb88c698fd22436903edda3bb132</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDependentDof</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>adcc77dbcb49bce32773639889ea8f2f1</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; DegreeOfFreedom * &gt; &amp;</type>
      <name>getDependentDofs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af5e97ff03bc4c44d7db63d6fbe09dba7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const DegreeOfFreedom * &gt; &amp;</type>
      <name>getDependentDofs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac894042473c828387cbed4f7429b112c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>getChainDofs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a8d5f63662b1c8fc5183ff68a8e0191b1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getRelativeTransform</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a5d08e4e279c585e070790f1f594bd2a5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialVelocity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>afc66d8ea5bccfbb75e9fe633d434deb7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a9c528aea879554f31115a2c841cc3fa2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getPrimaryRelativeAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a9bc8cdb94436ea991bddce56a513cf41</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getPartialAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4dfb633efee7db996e5823f433b1d201</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getJacobian</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa7e99dc0e6eeb4d062c0997b50508884</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getWorldJacobian</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a5c200c373121f6781c8b3087308ed8e9</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aaefb42c9da73712f4498f7c0c2deeb1b</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a14c15810af75be3294baa7da00614967</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getBodyVelocityChange</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a2587e5d36ca364d5abfe5310f0467a0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColliding</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a85607f15b8a1926b68efdd3935b9facd</anchor>
      <arglist>(bool _isColliding)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColliding</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a261b29ae8872adcb6a0944ad0c0e534e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExtForce</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4332e12156d1845039b89b05eb0c136e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_force, const Eigen::Vector3d &amp;_offset=Eigen::Vector3d::Zero(), bool _isForceLocal=false, bool _isOffsetLocal=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtForce</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aecadf275cda4f6cad395e4e0f5fc58a5</anchor>
      <arglist>(const Eigen::Vector3d &amp;_force, const Eigen::Vector3d &amp;_offset=Eigen::Vector3d::Zero(), bool _isForceLocal=false, bool _isOffsetLocal=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExtTorque</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ad58bad9a2b71b4f216a0c5da6a7f3efc</anchor>
      <arglist>(const Eigen::Vector3d &amp;_torque, bool _isLocal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtTorque</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1ec55b0a0bf4a06a85c521f7705a50a3</anchor>
      <arglist>(const Eigen::Vector3d &amp;_torque, bool _isLocal=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearExternalForces</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a2dcaa23587f44597a89ccf2ca867eb52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearInternalForces</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3c5d7e2a2c8da2a9a862ae2c84b50548</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getExternalForceLocal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6b8dc588ce4ece5df435b62a15106647</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getExternalForceGlobal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6b96a42d2328c65cf357872b4f9002a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getBodyForce</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa22300784c8a11eff3f2e47ca81637cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReactive</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4e0cc4563ca391dee223d014e5ce6454</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af911163885ad67e7ff33ff3dc5a39a78</anchor>
      <arglist>(const Eigen::Vector6d &amp;_constImp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConstraintImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a02148a7e919dbac7b020cf11af3127a9</anchor>
      <arglist>(const Eigen::Vector6d &amp;_constImp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConstraintImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae32a15dd2a04eab0c1329ada65d6e1d1</anchor>
      <arglist>(const Eigen::Vector3d &amp;_constImp, const Eigen::Vector3d &amp;_offset, bool _isImpulseLocal=false, bool _isOffsetLocal=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearConstraintImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a32ebcfea04b07480db84aefcd3081407</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getConstraintImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a29dc788b3ca557f612e9408737521646</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getKineticEnergy</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae017b4eeab6e96f7b706f99860fe0190</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPotentialEnergy</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa8e9e12835dab655152d2f1de4ed3261</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getLinearMomentum</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a69296995610fc03fdba7611ba49d8c92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getAngularMomentum</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac1ca4998f971b35ea16a2a3455f92e03</anchor>
      <arglist>(const Eigen::Vector3d &amp;_pivot=Eigen::Vector3d::Zero())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawMarkers</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac95fd094492b0f37ba8382a2e428a239</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, const Eigen::Vector4d &amp;_color=Eigen::Vector4d::Ones(), bool _useDefaultColor=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyTransformUpdate</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a783cd66b7959865ed4f726ba094fa0bd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyVelocityUpdate</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa42ceefa2dbf4a6927b3106e89b2e13a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyAccelerationUpdate</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ad2809512086966a0db5e21d3397a9508</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyArticulatedInertiaUpdate</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1118bb5fbc5f7028575e588e5a7298db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyExternalForcesUpdate</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab58b32aabbbdf50b2563a74bf56923af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyCoriolisUpdate</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a2199bcd7af128fd8069db670b15ef139</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JointType *</type>
      <name>moveTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a11b4acfeece4b446520275e81736f602</anchor>
      <arglist>(BodyNode *_newParent, const typename JointType::Properties &amp;_joint)</arglist>
    </member>
    <member kind="function">
      <type>JointType *</type>
      <name>moveTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aefe27af902644bf477a4169f6baf4233</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkeleton, BodyNode *_newParent, const typename JointType::Properties &amp;_joint)</arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>split</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a63316210860a092b708321303b4bd519</anchor>
      <arglist>(const std::string &amp;_skeletonName, const typename JointType::Properties &amp;_joint)</arglist>
    </member>
    <member kind="function">
      <type>JointType *</type>
      <name>changeParentJointType</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a00b105ee8435aa28ad09e75cc920718c</anchor>
      <arglist>(const typename JointType::Properties &amp;_joint)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; JointType *, BodyNode * &gt;</type>
      <name>copyTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a043eae107a6c3d26a1345978cd0613d2</anchor>
      <arglist>(BodyNode *_newParent, const typename JointType::Properties &amp;_joint, bool _recursive)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; JointType *, BodyNode * &gt;</type>
      <name>copyTo</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a8ccddd72d3ca879a2512b33b6f465b0c</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkeleton, BodyNode *_newParent, const typename JointType::Properties &amp;_joint, bool _recursive) const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>copyAs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a451904207631ec9fcfca43adad4a3f72</anchor>
      <arglist>(const std::string &amp;_skeletonName, const typename JointType::Properties &amp;_joint, bool _recursive) const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; JointType *, NodeType * &gt;</type>
      <name>createChildJointAndBodyNodePair</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a482b0bc0b1c67a9629c7f06b0ffa7ee5</anchor>
      <arglist>(const typename JointType::Properties &amp;_jointProperties, const typename NodeType::Properties &amp;_bodyProperties)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Skeleton &gt;</type>
      <name>getSkeleton</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>a5097fc0bfad73097ccdbdebf1ab650b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const Skeleton &gt;</type>
      <name>getSkeleton</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>a66b09f3013315ff3683add88b8b28322</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a8fd81cc04ada6b02ed7c4842fc30f7f8</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a531b80f05b016b0915a4f5e7603ec927</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>afb371c7e47a231166aca6461d7d381eb</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>af3652e978abed8aa00a5b8e614757ac0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ac89ab3e414a897d2b4920b02b06956ee</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a81a6b3668f4b4fd634fd09e8d2fbf06b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>aabb89db808e85b02daf5139e2bcfd819</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a700632cc2ff39a87c2d6e065f2c0084c</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a0d95daa11cd05b002167aa73837b7ba4</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a9b524b02e9c31a3465f7959470c00524</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ab733691474b95a7dbec5e31dca1f6b35</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a80d6ff9dc602068fc0cfd539ecd60c21</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ab1510f2aa590dfb41eebd761d242792e</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>acf274904bcec4c31e5f9e498ac3263ea</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>af57f99782db722f589751f88e1065d6b</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JacobianNode</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a5c0c5695ce37ed65ac056b3cfd5dcfe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JacobianNode</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aafc10f6336f58c14cfc8133669feb8e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; InverseKinematics &gt; &amp;</type>
      <name>getIK</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ad625e8db7a649bd9c9d6502add43fb55</anchor>
      <arglist>(bool _createIfNull=false)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; InverseKinematics &gt; &amp;</type>
      <name>getOrCreateIK</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a8c4f6611187977b8ac6f77823b2fba1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const InverseKinematics &gt;</type>
      <name>getIK</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a435970ec41a083eab79c8d4d7c59fcfc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; InverseKinematics &gt; &amp;</type>
      <name>createIK</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a739010d24becd440fe6fe41b98140ce8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearIK</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aed02db81d0e67a2ac05df23fd813ec92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyJacobianUpdate</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aafa0012f8fea007dbfb708a756c51b3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyJacobianDerivUpdate</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ad2b87d518644f9804335384c2008c8bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Frame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ad9a0a07845f5042d17e271c7449eff68</anchor>
      <arglist>(const Frame &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Frame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>af9603dedf9dcb0cb65f60356fafc6699</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getWorldTransform</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ae90b9401bcdbdbbbaa4dfe280ce94769</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getTransform</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>aa78f1921a5743eaa9af041b1c71a60b8</anchor>
      <arglist>(const Frame *_withRespectTo=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getTransform</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a9befce37ccf4c831ad569538fae2b057</anchor>
      <arglist>(const Frame *withRespectTo, const Frame *inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getSpatialVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a51776674c6eaa08d8014440513904958</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getSpatialVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>af2a2c3e7c27a0bbb09205c5fa085749e</anchor>
      <arglist>(const Frame *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getSpatialVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>aa9072a90944c917e03da4b435d5401ce</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getSpatialVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a36222eeec6097a502f638e8644d53989</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getLinearVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a751a640d050f860a64fa1a72d8ded34a</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getLinearVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a48fcf199aceab5e81018e562344a8255</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getAngularVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a55d2e26a410701f1ad9d00a7ce596e2d</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getSpatialAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>aa167319969b147569c67ade05a28e6ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getSpatialAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>afa22c6acbec15979674a60405104f275</anchor>
      <arglist>(const Frame *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getSpatialAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a95726a0e48fd5f72ec912bf7fc81781d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getSpatialAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a43d136c2876bf85f3bfcaba14511a6a8</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_relativeTo, const Frame *_inCoordinatesOf) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getLinearAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a0b2c43c79b40ef5d7d19be39ed7094b0</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getLinearAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ad60d3dc2ad85ab00af59bab96da618b7</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getAngularAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>af2aea6060c7be8408001d82ad654f062</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; Entity * &gt; &amp;</type>
      <name>getChildEntities</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a282869ec36877e519a5fd52afa2fd37f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; const Entity * &gt;</type>
      <name>getChildEntities</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>af7b7047e2c04f15749b1cc87ad600f48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumChildEntities</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a4e19dd811c97b7b447c903f755e34a68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; Frame * &gt; &amp;</type>
      <name>getChildFrames</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a71d04a6a68ad292992b5d9dde3758c56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; const Frame * &gt;</type>
      <name>getChildFrames</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a5dc7c0d7506c1ed4680690e35acb5c16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumChildFrames</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ae1d419bad68007629c4bdf93aec860c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWorld</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ad21e049e9bac9c61d69a5865a50852f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a29aef49d04490515236529e168cf0fd7</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, const Eigen::Vector4d &amp;_color=Eigen::Vector4d::Ones(), bool _useDefaultColor=true, int _depth=0) const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entity</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a23f997010dba7bd9c1424e074827cf58</anchor>
      <arglist>(Frame *_refFrame, const std::string &amp;_name, bool _quiet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entity</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>abf7d735bc5013e746620a91a671b85ee</anchor>
      <arglist>(const Entity &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Entity</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a69539cfb17b2b8c6f39d5cd3aa988c9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a8025e750b8fe09094d52f4bd30a553ac</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getEntityProperties</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a89d0c0c84ec66c109753c18b8ab9453c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aae2d21b64396e3f4a40620ded33e3876</anchor>
      <arglist>(const Entity &amp;_otherEntity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a5f1f78022b901078dbace24f7c092469</anchor>
      <arglist>(const Entity *_otherEntity)</arglist>
    </member>
    <member kind="function">
      <type>Entity &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a9da6cd8cd0e46b9bf68456c7ac6d9223</anchor>
      <arglist>(const Entity &amp;_otherEntity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>af2d2a856387f1462d1040fda6e537c74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addVisualizationShape</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aef462dfe3a23e10a4ea615105b88493d</anchor>
      <arglist>(const ShapePtr &amp;_shape)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeVisualizationShape</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a9b6570ed652043f8ea7daea39a3af9a2</anchor>
      <arglist>(const ShapePtr &amp;_shape)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeAllVisualizationShapes</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>abb964d1de78cbe0c3161748d70eaf889</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumVisualizationShapes</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a3b465437d7cbea30e4a71e5fbf711a96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ShapePtr</type>
      <name>getVisualizationShape</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a8bb0c3cd898e0fb27b195c2792c0fa0d</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>ConstShapePtr</type>
      <name>getVisualizationShape</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>afdaf722ad3b2a7bdd0c2fceef29452c9</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; ShapePtr &gt; &amp;</type>
      <name>getVisualizationShapes</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a294da46f1ea08d4cf73b59773969d79f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; ConstShapePtr &gt; &amp;</type>
      <name>getVisualizationShapes</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a974812b276480910ccde5384b6560aef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Frame *</type>
      <name>getParentFrame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a10c4c8b43980159e9bb8570ba50f0da6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Frame *</type>
      <name>getParentFrame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a9fa665e65bc5d84c75ca058d1f3095ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>descendsFrom</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aa04f3ce00045e926c7c87c33affcf9b9</anchor>
      <arglist>(const Frame *_someFrame) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFrame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>acb790b0d5c01f9e3c393e01b31802dd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isQuiet</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ac29c9312055acba0453bfb1b13d35c1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsTransformUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a42aeb59b1bc894f994e5dcadf81c1c70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsVelocityUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a815d2334f52d850e8b4658f692bf4126</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsAccelerationUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a1d79f755abc93dceddf79200f9fd46f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Node</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>aabce31d5c1b43e2e5a686db2aa95b50e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>BodyNodePtr</type>
      <name>getBodyNodePtr</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a0083d0d8e79a5be14d5a01b5686af09b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstBodyNodePtr</type>
      <name>getBodyNodePtr</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>afd1e2ac39cc519db0636b5a03bd6abfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRemoved</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a6381ebc8c88e055a4907b34e43233861</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; ColShapeAddedSignal &gt;</type>
      <name>onColShapeAdded</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4bb327a7ab6844f336ee96d7e3d3dad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; ColShapeRemovedSignal &gt;</type>
      <name>onColShapeRemoved</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0f6394adcc0a70d38ee27c4bba921306</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; StructuralChangeSignal &gt;</type>
      <name>onStructuralChange</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a8ed16e69922699e5b81580ef26d66ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; FrameChangedSignal &gt;</type>
      <name>onFrameChanged</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a89f99a8be1ca0eb6188bc2304b53dfcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; NameChangedSignal &gt;</type>
      <name>onNameChanged</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ae2c6b33adbe52d11d254b0876d63026c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; VizShapeAddedSignal &gt;</type>
      <name>onVizShapeAdded</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aa3f0cf00f4aaca6134858f00dedf80ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; EntitySignal &gt;</type>
      <name>onTransformUpdated</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ab2bb7564cd388637e5f4a479ed5ee928</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; EntitySignal &gt;</type>
      <name>onVelocityChanged</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a7310594d6402a9dca7a886ba14a9bdd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; EntitySignal &gt;</type>
      <name>onAccelerationChanged</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aed12275bbcbca8e518590ea10307748c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>acd6dccaf7d8e34a432ec2a5e173ff4f8</anchor>
      <arglist>(BodyNode *_parentBodyNode, Joint *_parentJoint, const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual BodyNode *</type>
      <name>clone</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a151b3bf8954b8789cb71c8b1265faf5e</anchor>
      <arglist>(BodyNode *_parentBodyNode, Joint *_parentJoint) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af32e7420689d67bfe7220ceb79f3dc9f</anchor>
      <arglist>(const SkeletonPtr &amp;_skeleton)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0bb5b5622a63dc614d173e03286fba80</anchor>
      <arglist>(BodyNode *_body)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>processNewEntity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a799127a9f4f516d2ce2991d9a3b5b560</anchor>
      <arglist>(Entity *_newChildEntity) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>processRemovedEntity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af6d16c2a98c2133c3465fec5b2c5d05f</anchor>
      <arglist>(Entity *_oldChildEntity) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTransform</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a585ca6615f35f4c573a35a6141d25bfa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateVelocity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab0aa8672f1952b0138f70278377aba20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updatePartialAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3a7ba5b13a6090d2c3d53f613599504e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateArtInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa19588bac1d7f7953ea47a4fd31e9e56</anchor>
      <arglist>(double _timeStep) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateBiasForce</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a23a6968918f2cbf3a5d1413c7cd87b0e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateBiasImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a5cb7dae3a84a57966c1e41eb450e8758</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateAccelerationID</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ad18dc8c54bc95609002b29590d24786d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateAccelerationFD</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a2f38cac239902a63a11c1f80df2b737a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateVelocityChangeFD</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3c5d826b7c36cc75f4b93007a5564b4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTransmittedForceID</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a41b259510fce78e86c540a2efff456df</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity, bool _withExternalForces=false)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTransmittedForceFD</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ad793d5b523b595b2e3e633fbe468fc04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTransmittedImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a5cd722dc136f4933c6c07ea9d486d998</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateJointForceID</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a005c0e8da47dd7ae03f3139e838d1f4f</anchor>
      <arglist>(double _timeStep, double _withDampingForces, double _withSpringForces)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateJointForceFD</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a9dcc26b0cee712a5c0cf9a3225ee3255</anchor>
      <arglist>(double _timeStep, double _withDampingForces, double _withSpringForces)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateJointImpulseFD</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a76e5c424e1d34c51953c84710dcc5627</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1e6bff158a37e795660a972e78423354</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateMassMatrix</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac7b68021b42e780a1a3009d74ba36c2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateMassMatrix</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a80bd9efab3f701a39c47d82f35cf7b3d</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MCol, size_t _col)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateAugMassMatrix</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>accae1acca9b3b6f97be12dc02cc10972</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MCol, size_t _col, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateInvMassMatrix</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a9a2d786a60e5c782f825482722aa16c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateInvAugMassMatrix</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a12a273db0c65c109a540b56c106420ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateInvMassMatrix</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a75a497476bf1af32a0acb6be3c4572cb</anchor>
      <arglist>(Eigen::MatrixXd &amp;_InvMCol, size_t _col)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateInvAugMassMatrix</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac856de42389fbc975c7558b67f604d18</anchor>
      <arglist>(Eigen::MatrixXd &amp;_InvMCol, size_t _col, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateCoriolisForceVector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a98a7aa35580f985b264d2e0e6ccc33da</anchor>
      <arglist>(Eigen::VectorXd &amp;_C)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateGravityForceVector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab13f7a76f549c61af7ec9e4e80f4a377</anchor>
      <arglist>(Eigen::VectorXd &amp;_g, const Eigen::Vector3d &amp;_gravity)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateCombinedVector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a43ff741556625aebfc5e5e4e3211bc88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateCombinedVector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae0cd6a9bfaeac7ba37eb016d8a1d70be</anchor>
      <arglist>(Eigen::VectorXd &amp;_Cg, const Eigen::Vector3d &amp;_gravity)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateExternalForces</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aff17d73313815405b2d494611421722a</anchor>
      <arglist>(Eigen::VectorXd &amp;_Fext)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateSpatialToGeneralized</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4319ff06a5816181b50910e7adce4058</anchor>
      <arglist>(Eigen::VectorXd &amp;_generalized, const Eigen::Vector6d &amp;_spatial)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBodyJacobian</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae0ca78019f5a7acfd27b66e1759a0143</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateWorldJacobian</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0aafc087e51c8bf592abab6728496a08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBodyJacobianSpatialDeriv</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa79339007fdc17c3b7eaa07a3b10c5a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateWorldJacobianClassicDeriv</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6ef799d38c7b48e7460d78da8a66abe5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SkeletonRefCountingBase</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>ab44eb3a667cc01c9331c3e3f50009818</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TemplatedJacobianNode</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ac2851d8aced93ce6c279d9ef520c99fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Frame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ac3df347a45d070ce29a47362541434e9</anchor>
      <arglist>(Frame *_refFrame, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Frame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>af6371243d3bc9591695ac9b61073fefc</anchor>
      <arglist>(ConstructAbstract_t)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>changeParentFrame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a2ed3bd11ddad0473f2c3687c7606bd91</anchor>
      <arglist>(Frame *_newParentFrame) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Entity</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a86a404b6489a7cc1532a84278c6b0f33</anchor>
      <arglist>(ConstructFrame_t)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Entity</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a31e8a9f0d19008b36dd5c4578e3c4c61</anchor>
      <arglist>(ConstructAbstract_t)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Node</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a53866d89ce173deb175751fbd89ffea1</anchor>
      <arglist>(ConstructNode_t, BodyNode *_bn)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Node</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>aa1e63aa3672405a758319aa29dd55b35</anchor>
      <arglist>(ConstructBodyNode_t)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Node</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a93f3718a8fbb17d215ea05553d0ab836</anchor>
      <arglist>(ConstructAbstract_t)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>attach</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a0d2e70846471e02c576e1f2e88c5ecba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>stageForRemoval</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>ad58cf787042834b39c4efe9bd44304f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mID</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ad237b37d53baa7256bf9f158a515c41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mBodyP</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a978e29446f780e28fb8e57643d88e32f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsColliding</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a0f1603a424339e96a386b4db1cba0f85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mIndexInSkeleton</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a93ff1f0ab70fc03e75ae1872b6eb6983</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mIndexInTree</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a71f603bfe71703f92aef8db95ad8439e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mTreeIndex</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a69f4dcaf764651491f4bb22079c7c129</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Joint *</type>
      <name>mParentJoint</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3ac0fbe1a5566e6f75cfa08178b64602</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BodyNode *</type>
      <name>mParentBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a280ec016e7a9136b0f161098c3a552d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>mChildBodyNodes</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a4d8f1ca460fa03edf51b64cd0fca9f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; Entity * &gt;</type>
      <name>mNonBodyNodeEntities</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a061b223ee9ef17a0c2c3fd67c97427c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; EndEffector * &gt;</type>
      <name>mEndEffectors</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a83f8f7f6c29af0a0c24fa0f3bc1d1b6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Marker * &gt;</type>
      <name>mMarkers</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a312901cf3b7cd5197c43a1b9d0f1917e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; const Node *, std::shared_ptr&lt; NodeDestructor &gt; &gt;</type>
      <name>mNodeMap</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae6d34fc5fbfd9235c52b3938b98eac2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>mDependentGenCoordIndices</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a01c1e2600bbc236afbf89f73766ea92a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; DegreeOfFreedom * &gt;</type>
      <name>mDependentDofs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3f3fd7d6e99d166c8b70badc55023e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>mConstDependentDofs</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a98fdb236bede56eec50647fc9dd74cdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mBodyJacobian</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aef7157582025f90bacc33095ecdaa7cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mWorldJacobian</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa43ae0299745d46a3a2443608240ab9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mBodyJacobianSpatialDeriv</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a178b098f1fe6e086cc59cab4f327cfd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mWorldJacobianClassicDeriv</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af10276f3dc848c7ee218565696ca60bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mPartialAcceleration</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a191c815a9d72c3fdf1e1c99e959e735c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsPartialAccelerationDirty</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>adf5b1666f383840393d7d3416fb24b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mF</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a1e90a0ad870961fd6ab76265431646c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mFext</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a16a9b4b7816d5b5b1a1e3b0ed18ee0de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mFgravity</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aecfaff76502e28eeb3b4db7a8bdac62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Inertia</type>
      <name>mArtInertia</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6655e9ad881ec774d2e93c586b22ced8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Inertia</type>
      <name>mArtInertiaImplicit</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>afc0fbe3acd10f643c144de297eab79e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mBiasForce</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ad7a72bc5fa002df0d38a5f37c9e7b2b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mCg_dV</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a419af114c4bcba9499a16ad948fc9441</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mCg_F</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac57e023aa4438ab0e79beb24104f1c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mG_F</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6abc016b0b83d6931e0602b503c477a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mFext_F</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>af53cf5b6ab4a95fe0565d22217fbcafc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mM_dV</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa4e3aadace5b16fa50b26da2aec78800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mM_F</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a244bac2e6dc950b6bf7ed1dae54b71f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mInvM_c</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aa112eb1fe9012acb67f41563731312c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mInvM_U</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a3b556ca3604e0f9714752d5320da0e41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mArbitrarySpatial</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ae997246a3dffc11dc60d22ff63ed3a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mDelV</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab417ce330020874e8df8ca8b95416115</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mBiasImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>aafef66da8da154cc0989ae094eb0de2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mConstraintImpulse</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a54625f7b3d4e57aa61ae366f84c101a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mImpF</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>add7ea8589802d385e36edbbb6453a324</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ColShapeAddedSignal</type>
      <name>mColShapeAddedSignal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ac19bf3481c2ad7ad22201dfc5901d779</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ColShapeRemovedSignal</type>
      <name>mColShapeRemovedSignal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a29ff916983dbf784320ccaddbba5db06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StructuralChangeSignal</type>
      <name>mStructuralChangeSignal</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a67d7cc1ac274c78b080571abe2af3e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; Skeleton &gt;</type>
      <name>mSkeleton</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>ac3414be18a9812f62d7b5f845e504150</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; int &gt;</type>
      <name>mReferenceCount</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>aad6d17ebace17f70ed6ce8e3cc9a7a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; Skeleton &gt;</type>
      <name>mReferenceSkeleton</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>ad81100175c31706da74165fd9ba6bfb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; MutexedWeakSkeletonPtr &gt;</type>
      <name>mLockedSkeleton</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>a400422e72f10c1d80a54dff183d68ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsBodyJacobianDirty</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>abbe4f56462d8fad3c441263156308ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsWorldJacobianDirty</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ad6a6d69a44f423d63b839ae0c116ea7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsBodyJacobianSpatialDerivDirty</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a564f48e08d56186e811c627e64991df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsWorldJacobianClassicDerivDirty</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ae896131903056a28ad39280bb4de5242</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; InverseKinematics &gt;</type>
      <name>mIK</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a4ae0339caf1adf4e83ef565e8164c736</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_set&lt; JacobianNode * &gt;</type>
      <name>mChildJacobianNodes</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a1e967204251a4b590b46f7d7560cc5f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Isometry3d</type>
      <name>mWorldTransform</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a476d3518e3912b2e4ec72f4ee4c229db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a998dba8b9a76cac9df26dee76a11aeaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>afc58a2afca86b1629ad00fa4888ea67c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; Frame * &gt;</type>
      <name>mChildFrames</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a5c6fb9d277328a7f383124d903f252bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; Entity * &gt;</type>
      <name>mChildEntities</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a017f7a11835dadf9ab5155fd9fc3616e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mEntityP</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aae19930f19f26e8b45d9d09021733e25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Frame *</type>
      <name>mParentFrame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a5cec7baa6bc3c423742d36e14e99edee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedTransformUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ab801c61fd3438c6a916be8264d1ac6d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedVelocityUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ad14eb572f3b82efee46ea88c3f46b0af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedAccelerationUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a91cbe1081892564b1f84d2d09470c93d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FrameChangedSignal</type>
      <name>mFrameChangedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a3c139811e7f4cfc361a868fac330c2ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NameChangedSignal</type>
      <name>mNameChangedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aadfdfede108bfa24d07cdd9920bf64cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>VizShapeAddedSignal</type>
      <name>mVizShapeAddedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a99a7c1eaedaf9ae33555195152b387b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>VizShapeRemovedSignal</type>
      <name>mVizShapeRemovedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>adad0cdc06b4a1c2587e05ce95e54721c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EntitySignal</type>
      <name>mTransformUpdatedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a6714c8e1ce5b89d01ad6bea5894d7ecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EntitySignal</type>
      <name>mVelocityChangedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a7b6717c5b297dc3f65519eef2615c559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EntitySignal</type>
      <name>mAccelerationChangedSignal</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a11c38bdf0fafb4c16bb17c17676b0522</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; NodeDestructor &gt;</type>
      <name>mDestructor</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a6729f60f63bb95d26f4a1de37995fd94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BodyNode *</type>
      <name>mBodyNode</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a9a2ecc7d4a7224b2e2c4d0fa4a062282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static size_t</type>
      <name>msBodyNodeCount</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a69aade0c385731eebcfefd05d2c4d20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; NodeDestructor &gt;</type>
      <name>mSelfDestructor</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>ab3f81018e4ed78b0481553635ba89e21</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Joint</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a2b27269e818d7b63995be0e0f812bf54</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>EndEffector</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a675c233a38e7db8b610228796a2a5591</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>SoftBodyNode</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a90a04ea25f677ead394ad8d4ebe0133b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>PointMass</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a2891ad00d7d39eadfb0738378a56f5ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Node</name>
      <anchorfile>d5/d2e/classdart_1_1dynamics_1_1BodyNode.html</anchorfile>
      <anchor>a6db9d28bd448a131448276ee03de1e6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Frame *</type>
      <name>World</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a6531fc7ae10eb122b887cb10946bc9d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ConstructAbstract_t</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a5cb1d2564e2836177b7bfa6c3b32dbd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>ConstructAbstract</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a5cb1d2564e2836177b7bfa6c3b32dbd3ab3f1d69a3074c5b221b7c37f7a5bf3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ConstructFrame_t</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a6afd736c6528075fe201f7eba1820931</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>ConstructFrame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a6afd736c6528075fe201f7eba1820931abc1e3dd9885e9dbc8c5d4da3af679ec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ConstructAbstract_t</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a60693f2b2e6b22fd5ed2a3faddda6374</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>ConstructAbstract</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a60693f2b2e6b22fd5ed2a3faddda6374a0376d0cc62fda4f1de1ed180db40c418</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ConstructNode_t</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a866ba821119c7cb9bb034f042611e53d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>ConstructNode</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a866ba821119c7cb9bb034f042611e53dadaa79e435d1b58ef2245fc56c43e9753</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ConstructBodyNode_t</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a0fe05443f01702b7eaf3d051a616974e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>ConstructBodyNode</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a0fe05443f01702b7eaf3d051a616974eaa39afa0914ae77339cfdc8d188f09ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ConstructAbstract_t</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a0e117ff10d48017ad44e08d48ea0109d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <type>@</type>
      <name>ConstructAbstract</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a0e117ff10d48017ad44e08d48ea0109dadaeba62cb08fba20f7d1a17ab86fd336</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::BodyNode::Properties</name>
    <filename>da/df3/structdart_1_1dynamics_1_1BodyNode_1_1Properties.html</filename>
    <base>dart::dynamics::Entity::Properties</base>
    <base>dart::dynamics::BodyNode::UniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>da/df3/structdart_1_1dynamics_1_1BodyNode_1_1Properties.html</anchorfile>
      <anchor>a202efbe2234ee45856f65fe956ba22af</anchor>
      <arglist>(const Entity::Properties &amp;_entityProperties=Entity::Properties(&quot;BodyNode&quot;), const UniqueProperties &amp;_bodyNodeProperties=UniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>da/df3/structdart_1_1dynamics_1_1BodyNode_1_1Properties.html</anchorfile>
      <anchor>a30a58685501f94aa92f21a3aa1078fb5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d8/d61/structdart_1_1dynamics_1_1Entity_1_1Properties.html</anchorfile>
      <anchor>a418146a1c6a1fdea67ddf1d37c80ca80</anchor>
      <arglist>(const std::string &amp;_name=&quot;&quot;, const std::vector&lt; ShapePtr &gt; &amp;_vizShapes=std::vector&lt; ShapePtr &gt;())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d0/d20/structdart_1_1dynamics_1_1BodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>ab3ce77d73eba2e9ff666e60d954bf14b</anchor>
      <arglist>(const Inertia &amp;_inertia=Inertia(), const std::vector&lt; ShapePtr &gt; &amp;_collisionShapes=std::vector&lt; ShapePtr &gt;(), bool _isCollidable=true, double _frictionCoeff=DART_DEFAULT_FRICTION_COEFF, double _restitutionCoeff=DART_DEFAULT_RESTITUTION_COEFF, bool _gravityMode=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniqueProperties</name>
      <anchorfile>d0/d20/structdart_1_1dynamics_1_1BodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>a4edc9da84722b98d4741850c5591ec7f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>d8/d61/structdart_1_1dynamics_1_1Entity_1_1Properties.html</anchorfile>
      <anchor>a9d1308f6306ff2004c0c25a0745a5d7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ShapePtr &gt;</type>
      <name>mVizShapes</name>
      <anchorfile>d8/d61/structdart_1_1dynamics_1_1Entity_1_1Properties.html</anchorfile>
      <anchor>adb67f92b468036ba35b448d955b34978</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Inertia</type>
      <name>mInertia</name>
      <anchorfile>d0/d20/structdart_1_1dynamics_1_1BodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>aaf588afe2d3f0dfadb406e82c0c70923</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ShapePtr &gt;</type>
      <name>mColShapes</name>
      <anchorfile>d0/d20/structdart_1_1dynamics_1_1BodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>a70b3bcab1502320970a9d6a24daaa892</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mIsCollidable</name>
      <anchorfile>d0/d20/structdart_1_1dynamics_1_1BodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>a2c07c4461f7b26ff0f233d5b870a370e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mFrictionCoeff</name>
      <anchorfile>d0/d20/structdart_1_1dynamics_1_1BodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>af7053d36948717f1e513deac4a991f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mRestitutionCoeff</name>
      <anchorfile>d0/d20/structdart_1_1dynamics_1_1BodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>a5d0818f3ef2a6b5f737cdb0c12b6e26b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mGravityMode</name>
      <anchorfile>d0/d20/structdart_1_1dynamics_1_1BodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>ac02126e294bccad74a6f17821ca72e1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Marker::Properties &gt;</type>
      <name>mMarkerProperties</name>
      <anchorfile>d0/d20/structdart_1_1dynamics_1_1BodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>a777327314900f18d871fe5b71ffbd54e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::BodyNode::UniqueProperties</name>
    <filename>d0/d20/structdart_1_1dynamics_1_1BodyNode_1_1UniqueProperties.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::BoxShape</name>
    <filename>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>BoxShape</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a5cc09d23451bc597526bca46d2493e65</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxShape</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>ae26897cfb3225572170f4ae649541a00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a1eeed4a6cbd8f2aa23d75120f854b4b6</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getSize</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a32499e9f5d57dece0e1a4d12577ba12e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>ada996f5748a19c057dfa7fd09d140607</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, const Eigen::Vector4d &amp;_col=Eigen::Vector4d::Ones(), bool _default=true) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a963014147578d2a4eda6f769c17ac6fd</anchor>
      <arglist>(double _mass) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRGBA</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a26f4536851e2859d9bbd530d43e4e8c1</anchor>
      <arglist>(const Eigen::Vector4d &amp;_rgba)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAlpha</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a41155ea94a17916ee89a5931bb12911b</anchor>
      <arglist>(double _alpha)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeVolume</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>ac1b6fe9bc3335e396cd2fba337cad712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mSize</name>
      <anchorfile>d4/d45/classdart_1_1dynamics_1_1BoxShape.html</anchorfile>
      <anchor>a373340b90b4093560753c534d55ada3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Branch</name>
    <filename>dd/d80/classdart_1_1dynamics_1_1Branch.html</filename>
    <base>dart::dynamics::Linkage</base>
    <class kind="struct">dart::dynamics::Branch::Criteria</class>
    <member kind="function">
      <type>bool</type>
      <name>isStillBranch</name>
      <anchorfile>dd/d80/classdart_1_1dynamics_1_1Branch.html</anchorfile>
      <anchor>aa74e32f364be8a3ac8a91a98f4c941ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAssembled</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>afc5953ded253e44e5839830be4fe344d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reassemble</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>a50eca25d3461245bff7cdd6ef9f7bc6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>satisfyCriteria</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>a8def9d3515deca5d03a49425fb80c853</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReferentialSkeleton &amp;</type>
      <name>operator=</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a92bff147e2e6a231ac4c7c004cd8926a</anchor>
      <arglist>(const ReferentialSkeleton &amp;_other)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ReferentialSkeleton</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2f799440c097b1123dd8834cd364fea4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a0174eb5b11f6676f9e8a49b15df8d47e</anchor>
      <arglist>(const std::string &amp;_name) override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a3636f5137b591ca4f388cf04b5088231</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumBodyNodes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ab132b52d6a679f829a292563fd3c62ce</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a110a338439749c11dfdcec0754a86957</anchor>
      <arglist>(size_t _idx) override</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a622043894510a9674d4d02453cd3bc41</anchor>
      <arglist>(size_t _idx) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; BodyNode * &gt; &amp;</type>
      <name>getBodyNodes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>abb92eb609f7b1f2c3b43281efa8d1eda</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const BodyNode * &gt; &amp;</type>
      <name>getBodyNodes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af3a5ae0bbc99a18851832b56d0ed8646</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a465771c0dbc27b299ff73002d236a967</anchor>
      <arglist>(const BodyNode *_bn, bool _warning=true) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumJoints</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ad082862f2895e1cd98fbc658d362b534</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Joint *</type>
      <name>getJoint</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a55f210f7240c961ddedb331fd6ea8227</anchor>
      <arglist>(size_t _idx) override</arglist>
    </member>
    <member kind="function">
      <type>const Joint *</type>
      <name>getJoint</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a9eb912290ff9cfa9e4b0bafce85f45e1</anchor>
      <arglist>(size_t _idx) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a93a9a2555862a9da67e4fea5a0013841</anchor>
      <arglist>(const Joint *_joint, bool _warning=true) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumDofs</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aa35f5cfed3eca967b26350761511ec14</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ad20ae625019d0fba125e3d62622497a8</anchor>
      <arglist>(size_t _idx) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a6ee3b2967964398b3f14a06cfb1e90a9</anchor>
      <arglist>(size_t _idx) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; DegreeOfFreedom * &gt; &amp;</type>
      <name>getDofs</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a239cafbed2d21c762f85001b01c7f088</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>getDofs</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ae9dda8d7c8a4ab5a679052a2f242058a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2842ce9771beeeff533522e2210ee726</anchor>
      <arglist>(const DegreeOfFreedom *_dof, bool _warning=true) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a5170a2f0c7daf8304e67a9b38629acf6</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a487a4ec4f2a39cf0f60e7cbc2949c291</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a544b63de3fc8ca1028afda654aa18f55</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a6d995ff98234e5b21ffa48cceff3a387</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2dd2740ed742fdc4883db8842f9c40e0</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a6bcbac764910e439edddb8e67ed09732</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>abafab57306b3061ca1623c1c18185003</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2dac01542cfe56e49b3449001aae262d</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a8407f5b662dbedad44d3bf4b37ab7ec4</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a86e1948d4eb91796b0d510eb89f9a7ed</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aa3850d2bf9d76169a6f3ec2ee83c9f69</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a0b47fba262d46c2b54eb712f2d360615</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a61aa1b4ba51e78630f1a427721899b94</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>afb85fa6e8bd17d4c266fd1854152ce46</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2f040c9359f3c320319e9ed3726be3c2</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aea35739dc9072773e6ce85bf413b0d84</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ad20a2c806d772e064a896660d34b5b0d</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af9c76d6c96c07ca11130e248a4801ecb</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset=Eigen::Vector3d::Zero(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobianDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a150e8479bf2195bd4985f657cc984a91</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMass</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a369a2830d8cc4ebb10e58bcf21c19b35</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getMassMatrix</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a95530f3dc4152df4ed81560db1d0a6e1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getAugMassMatrix</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a4902ddfd5b6ac8dddaf7c78cc60e53a5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getInvMassMatrix</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a434cf2e7f22ca0599277d8ee2bdf43c0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getInvAugMassMatrix</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>abf863d2e8f11ac02d7e6bb5f282d89f8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getCoriolisForces</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a511ca2b3110a517c65cd756f67896211</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getGravityForces</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ac4f1ee2e1c5318ac96b8cc0acb1802f8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getCoriolisAndGravityForces</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ad72bc23072b656afca6e871aa62b0ec6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getExternalForces</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a28b5aaaeb2a9df78cdc4638ee095c772</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getConstraintForces</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a07d1d15358c3dc7308d1097c8b59b783</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearExternalForces</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a18767247ed30505020bc6e5be85de850</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearInternalForces</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a8a009d6467f3bd5699d52dfb5025d381</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getKineticEnergy</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af43100e2f5edae4e250a91679b53f406</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPotentialEnergy</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2da09e9d1cbd00f913d628614acf3939</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOM</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af30b74c8fdfca18df578435a3185fc8f</anchor>
      <arglist>(const Frame *_withRespectTo=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialVelocity</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af06c5f57c4f8120636c849cedc6f2fc0</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOMLinearVelocity</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a563836c1f8bb281556db2962c0715ed3</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialAcceleration</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a220402f26655595649a85a49aa548594</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOMLinearAcceleration</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ae0ede1093b86e19a6db579bf1d84141b</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getCOMJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a37fc989733d51827a2fb11916e6982eb</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getCOMLinearJacobian</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a028b005d84d882b21a93e78c7ee61574</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getCOMJacobianSpatialDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af0a02d3177345ca2740a62d6c7be7082</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getCOMLinearJacobianDeriv</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>af2272bf8c03aa647331a10f236afdb73</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MetaSkeleton</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab7569e723777b2834b4fd409e7b11703</anchor>
      <arglist>(const MetaSkeleton &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MetaSkeleton</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a14623e1df9e8f179facf21ebb66b238a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommand</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aac90c1edb94e7747ccbb9af94dda257d</anchor>
      <arglist>(size_t _index, double _command)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCommand</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a12327f84bd6660b01f6f6cb053e08885</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommands</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a8815caf719bd8c7fb6e3fa42cf4506bf</anchor>
      <arglist>(const Eigen::VectorXd &amp;_commands)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommands</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a755993805cc2d144c4cc385c3bd64fc7</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_commands)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>afafbccf2253f7330a905fc0df2f1e92b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a8235a29750013d36e433636dcab6b41c</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;_indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCommands</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a05f03894dc8e7604cacf3ea9319d9fe7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a9545c2cbd8dce8bcc18104c8f400979a</anchor>
      <arglist>(size_t index, double _position)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aa8113058b221b9b6b3b464993e89abaa</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a864a9a58092a513d9aedabbab1b7f0ae</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ae1d7aa5b5a57343dc473fcbc037274ac</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_positions)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a8689b2438d521350c2ce433b40f68ba0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ae9dbae6a66b57d83e6ee05335e2ce426</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;_indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPositions</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a2d5743bd10523f194d37c7daf62d9da5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a64aa936c8793aae03a6339f47654e68f</anchor>
      <arglist>(size_t _index, double _position)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a1d4d9990d8d9a31049cb778bcb30855e</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab78ef0c377a6394bd25821eab84d3b43</anchor>
      <arglist>(size_t _index, double _position)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aaf0f4bb1048687fe5c17da2f81f90095</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>af293b75e121bbda685a90d49c6cd0ba7</anchor>
      <arglist>(size_t _index, double _velocity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a3586ea48871fd90aa266e1e6bccf28ad</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a7c6ed483b8a6cc6195da0a0c7151e620</anchor>
      <arglist>(const Eigen::VectorXd &amp;_velocities)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a3cdaa62102cd0719f1d8c4733f10ae78</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_velocities)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab7d4d84098a2c146023739b7b11af064</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a81f006d558281a5393893cd9f7fbc316</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;_indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocities</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a65c11584b555e59d2226439def15a3e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a913c2c30dea3152a05e44affe20de9ae</anchor>
      <arglist>(size_t _index, double _velocity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac60e5596d205fb1b4ce501ab5d0a5c56</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>abb2a738385d03335bd60db6cd705c255</anchor>
      <arglist>(size_t _index, double _velocity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a1b98d38144858c99f6861fcacca0b353</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a9e72c2733afdea56396173c21c3486f2</anchor>
      <arglist>(size_t _index, double _acceleration)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a1497f8db0a13c9b570a6c3e5fba83af2</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aafb640ad61ea2ddc9c8b2a30b69ea3bf</anchor>
      <arglist>(const Eigen::VectorXd &amp;_accelerations)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab11972c43c4681087a0078971923be93</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;_indices, const Eigen::VectorXd &amp;_accelerations)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a0732a4c1bd2159e711efbc23ab7cefca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a62ae4a88fff7aefc7c8fc747783dec01</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;_indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAccelerations</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a252522fc88f5b4606de8119920a5a2dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a47ea80f8f9f05bd5776a0514622b3795</anchor>
      <arglist>(size_t _index, double _acceleration)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a0059b16a76a82e6206cb41e60e07161b</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ad76b993caa074796c7e3c50aa68fec66</anchor>
      <arglist>(size_t _index, double _acceleration)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a2462d86a317f41c84c3f690b291e1481</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a97834982572f08566b88c4afc4c8dba6</anchor>
      <arglist>(size_t _index, double _force)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aa9c653c052292e9e5f7963323ff87a21</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a7215484511907665ef49e0b4e92e3ae4</anchor>
      <arglist>(const Eigen::VectorXd &amp;_forces)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>af88705a0926df534515e8b3f629331a1</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;_index, const Eigen::VectorXd &amp;_forces)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a51eca2a587d2360699e0e08a7c5a75b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>abe79f8a9434f35f642648d7f7b905e31</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;_indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetGeneralizedForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a57825238cb68f955e405e5bd8aaf78e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a5c8384536f7b0ce994b91226109f235e</anchor>
      <arglist>(size_t _index, double _force)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aa1d979b35e075e769d30a043c6d1c4e5</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a19118b6c3655ac67dca58151c2b3f82e</anchor>
      <arglist>(size_t _index, double _force)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a71f704f189de1e66e99916f82810333c</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityChanges</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a7c1199282560b98e011841a7a16fdd8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJointConstraintImpulses</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>af3e9c9aa288d6c5347928730696b74c9</anchor>
      <arglist>(const Eigen::VectorXd &amp;_impulses)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getJointConstraintImpulses</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a179199e1c053e24848431f6bbb5c6227</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BranchPtr</type>
      <name>create</name>
      <anchorfile>dd/d80/classdart_1_1dynamics_1_1Branch.html</anchorfile>
      <anchor>ac6a5a5f5e763f5c12da262eb7ab1ef8f</anchor>
      <arglist>(const Branch::Criteria &amp;_criteria, const std::string &amp;_name=&quot;Branch&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LinkagePtr</type>
      <name>create</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>aac3c41390795cdf256b0de24d8cfb897</anchor>
      <arglist>(const Criteria &amp;_criteria, const std::string &amp;_name=&quot;Linkage&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Branch</name>
      <anchorfile>dd/d80/classdart_1_1dynamics_1_1Branch.html</anchorfile>
      <anchor>a85e036c35fbb1410313923ac399bdade</anchor>
      <arglist>(const Branch::Criteria &amp;_criteria, const std::string &amp;_name=&quot;Branch&quot;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>dd/d80/classdart_1_1dynamics_1_1Branch.html</anchorfile>
      <anchor>a69d1a3bed3d35ce561d11e170fd66f3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Linkage</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>a3c8eb0801e1d9ec5e93732ddab2b467c</anchor>
      <arglist>(const Criteria &amp;_criteria, const std::string &amp;_name=&quot;Linkage&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ReferentialSkeleton</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ae426f3dd84cc9197387229813fcdf8fa</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerBodyNode</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ac90644f5bf6bd902c82b4a2152b2b081</anchor>
      <arglist>(BodyNode *_bn)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerDegreeOfFreedom</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2f327945deedc9e049da6effe93da1af</anchor>
      <arglist>(DegreeOfFreedom *_dof)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unregisterBodyNode</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aaefcda9a8a6883c32e29bbfb15f61397</anchor>
      <arglist>(BodyNode *_bn)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unregisterDegreeOfFreedom</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ad9dfacf4f93cb7ff85ee8a16f55eb7cf</anchor>
      <arglist>(BodyNode *_bn, size_t _localIndex, bool removeBnIfEmpty=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCaches</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a1b5711f0ab5746de7addee75647ac9f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MetaSkeleton</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a80a4245d052e54458455d2885ae304f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>mNumChildNodes</name>
      <anchorfile>dd/d80/classdart_1_1dynamics_1_1Branch.html</anchorfile>
      <anchor>a641ca02704c26d5e0af28ca610617b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Criteria</type>
      <name>mCriteria</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>af3b9272bf9eade128e6c681e3511b77a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; WeakBodyNodePtr &gt;</type>
      <name>mParentBodyNodes</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>a943d8aa3949b0f9169c9c26c21f7c536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; MetaSkeleton &gt;</type>
      <name>mPtr</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aa229e19e3f85ae9c4cb36deb9cfae6a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2143d22159c61d191468bd87cd1b9f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; BodyNodePtr &gt;</type>
      <name>mBodyNodes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a3b1b1faab634e61655fce162d16cc6f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>mRawBodyNodes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aa79b2228d86ea1d3dc8cb98bbfefcc97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; const BodyNode * &gt;</type>
      <name>mRawConstBodyNodes</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a2f2a21e5f8415dd5a6bb34f05d7c93ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; DegreeOfFreedomPtr &gt;</type>
      <name>mDofs</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a399a92f1621b614a3c10ed04f2c5e1a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; DegreeOfFreedom * &gt;</type>
      <name>mRawDofs</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a87656443923b6295e3ab124b54c37d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>mRawConstDofs</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>aa1c59ded783973917d49c312ab770718</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; const BodyNode *, IndexMap &gt;</type>
      <name>mIndexMap</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ab760fee8ae4700933ac34344b3accf92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mM</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a6c92e7b589bc45e7dce39592491ccb67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mAugM</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a16c51c4b57dd1120ab2091d82d752b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mInvM</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ab731b9da81142974de5b7cc323ae5518</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mInvAugM</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a7da2693dace1dcc8014510a880adb7ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mCvec</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a36449ddd13a2ee9eee80f00087a50fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mG</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>ad84efd55973b6b59f5af547b3faf7681</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mCg</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a1f74d5dac133153587d4172e28adc154</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mFext</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a470b474413b781756b0abddf616e8154</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mFc</name>
      <anchorfile>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</anchorfile>
      <anchor>a8aee33a8f6a2c73bb1116bc0f3aa72bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NameChangedSignal</type>
      <name>mNameChangedSignal</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a25a31c6b43a3070a7901965ac69de281</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>common::Signal&lt; void(std::shared_ptr&lt; const MetaSkeleton &gt; _skeleton, const std::string &amp;_oldName, const std::string &amp;_newName)&gt;</type>
      <name>NameChangedSignal</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a1ddbf3d540e1d9ee7398c51a14abe594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; NameChangedSignal &gt;</type>
      <name>onNameChanged</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac5fd03d4f660de35f67c8252c253015a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Branch::Criteria</name>
    <filename>d1/d21/structdart_1_1dynamics_1_1Branch_1_1Criteria.html</filename>
    <member kind="function">
      <type></type>
      <name>Criteria</name>
      <anchorfile>d1/d21/structdart_1_1dynamics_1_1Branch_1_1Criteria.html</anchorfile>
      <anchor>a602dadf8bb1cf287243aef8179c7d6a2</anchor>
      <arglist>(BodyNode *_start)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>satisfy</name>
      <anchorfile>d1/d21/structdart_1_1dynamics_1_1Branch_1_1Criteria.html</anchorfile>
      <anchor>a28b24bfc150920c0038832ba1bfcbd5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Linkage::Criteria</type>
      <name>convert</name>
      <anchorfile>d1/d21/structdart_1_1dynamics_1_1Branch_1_1Criteria.html</anchorfile>
      <anchor>a0398e64f89d0da97b031aeccda1f005b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Linkage::Criteria</name>
      <anchorfile>d1/d21/structdart_1_1dynamics_1_1Branch_1_1Criteria.html</anchorfile>
      <anchor>aec642f3a98a34daab49b6c0235b89b46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>WeakBodyNodePtr</type>
      <name>mStart</name>
      <anchorfile>d1/d21/structdart_1_1dynamics_1_1Branch_1_1Criteria.html</anchorfile>
      <anchor>a6aa2610b4c4c4e469e1de3e30a33a149</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Chain</name>
    <filename>d3/d43/classdart_1_1dynamics_1_1Chain.html</filename>
    <base>dart::dynamics::Linkage</base>
    <class kind="struct">dart::dynamics::Chain::Criteria</class>
    <member kind="enumeration">
      <type></type>
      <name>IncludeBoth_t</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>a6e2abfccee2e23817102eb7dcb0c9cf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IncludeBoth</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>a6e2abfccee2e23817102eb7dcb0c9cf6ae06f90381bbb267d8be68b3b67887711</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStillChain</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>a0243c0faa4cc72a1cf64eddf8899f827</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ChainPtr</type>
      <name>create</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>ad87dd8d0bf3f2a3056b36559c86980e4</anchor>
      <arglist>(const Chain::Criteria &amp;_criteria, const std::string &amp;_name=&quot;Chain&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ChainPtr</type>
      <name>create</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>aa4e71b2c87eabcbf90ba7f4fba2b8324</anchor>
      <arglist>(BodyNode *_start, BodyNode *_target, const std::string &amp;_name=&quot;Chain&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ChainPtr</type>
      <name>create</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>a44106755134c9111d7fc50616f94d438</anchor>
      <arglist>(BodyNode *_start, BodyNode *_target, IncludeBoth_t, const std::string &amp;_name=&quot;Chain&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Chain</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>a126f7008ee3a01e52aebb98dea3be2c6</anchor>
      <arglist>(const Chain::Criteria &amp;_criteria, const std::string &amp;_name=&quot;Chain&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Chain</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>a3b57f447c737ab5dd429d54df40c8ce5</anchor>
      <arglist>(BodyNode *_start, BodyNode *_target, const std::string &amp;_name=&quot;Chain&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Chain</name>
      <anchorfile>d3/d43/classdart_1_1dynamics_1_1Chain.html</anchorfile>
      <anchor>a019e9a681043ea3a5765beaf57b2d4d9</anchor>
      <arglist>(BodyNode *_start, BodyNode *_target, IncludeBoth_t, const std::string &amp;_name=&quot;Chain&quot;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>d8/d57/classdart_1_1dynamics_1_1Linkage.html</anchorfile>
      <anchor>a6e4b64dcfb4789c15e0fbd3dfacea17d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Chain::Criteria</name>
    <filename>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</filename>
    <member kind="function">
      <type></type>
      <name>Criteria</name>
      <anchorfile>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</anchorfile>
      <anchor>a5b4ca600debebadfbcd0ec783e1a5ce0</anchor>
      <arglist>(BodyNode *_start, BodyNode *_target, bool _includeBoth=false)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>satisfy</name>
      <anchorfile>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</anchorfile>
      <anchor>a7a04b272d22ca452367fefe3564e8cef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Linkage::Criteria</type>
      <name>convert</name>
      <anchorfile>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</anchorfile>
      <anchor>afb26457ee8e53f9b4c6971bda4546ec9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Linkage::Criteria</name>
      <anchorfile>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</anchorfile>
      <anchor>a0a20d3c12e99657a7670e503f93b2f6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>WeakBodyNodePtr</type>
      <name>mStart</name>
      <anchorfile>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</anchorfile>
      <anchor>a85b115f01a96aad00e50775277c0f579</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WeakBodyNodePtr</type>
      <name>mTarget</name>
      <anchorfile>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</anchorfile>
      <anchor>a38745c91ea79e82843618fa201ae12a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mIncludeBoth</name>
      <anchorfile>d3/d0c/structdart_1_1dynamics_1_1Chain_1_1Criteria.html</anchorfile>
      <anchor>a82efee81e7d844e615530c3df4a0763f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::CylinderShape</name>
    <filename>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</type>
      <name>CylinderShape</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a829aeadbd4103a478669be65815f867c</anchor>
      <arglist>(double _radius, double _height)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRadius</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>afb43ed668b0add2601b277647ee3faad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a1873b2df9f8725f197ccb15d61efa452</anchor>
      <arglist>(double _radius)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getHeight</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>ac580922aa36bfcf93b197a26bd1fe703</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a7aa79d94f90ae5b4326b869e769ab6b0</anchor>
      <arglist>(double _height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>aa093997ab44a6027a2c5306a15f94316</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, const Eigen::Vector4d &amp;_color=Eigen::Vector4d::Ones(), bool _useDefaultColor=true) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a3f7e5abb92c993730ac157160347e870</anchor>
      <arglist>(double _mass) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>computeVolume</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a4302bffc339ea9b6362417729fb5ad9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateBoundingBoxDim</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a35c9bea18129341834775fd7c172ca6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mRadius</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>a903af8b02264b4e21417769ed3d11072</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mHeight</name>
      <anchorfile>d3/d73/classdart_1_1dynamics_1_1CylinderShape.html</anchorfile>
      <anchor>aa759ba117b9136bd01a9b314e63af8c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::MultiDofJoint</name>
    <filename>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</filename>
    <templarg></templarg>
    <base>dart::dynamics::Joint</base>
    <class kind="struct">dart::dynamics::MultiDofJoint::Properties</class>
    <class kind="struct">dart::dynamics::MultiDofJoint::UniqueProperties</class>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, DOF, 1 &gt;</type>
      <name>Vector</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a71c69d0d332861662f5a9dc33103148d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiDofJoint</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af626d0306f74cd951e031101a065214a</anchor>
      <arglist>(const MultiDofJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiDofJoint</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af6a9dbc1d32bc19282dd2d784d6b6a09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a299a4e22dac4533d9ce2b70724f1915a</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>abd96574381a94874d9e84296cf7449f1</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getMultiDofJointProperties</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a3a9870bdfc370aa7326c759e462979f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab590e4cb52f518b1f2e7bcd10280d13c</anchor>
      <arglist>(const MultiDofJoint&lt; DOF &gt; &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>abbafd3e163f18addef1de282091c7d48</anchor>
      <arglist>(const MultiDofJoint&lt; DOF &gt; *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>MultiDofJoint&lt; DOF &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a42eb718b902a70d65c35ad83fd737602</anchor>
      <arglist>(const MultiDofJoint&lt; DOF &gt; &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a121f549c73c7463665ba5acb94f327b6</anchor>
      <arglist>(size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a56d39570b2bb0bfbb2515f8e30542923</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumDofs</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a43a55801341a1ecdb127aaff1b78676b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setDofName</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adb967d0bd025a7022346e226f33a7142</anchor>
      <arglist>(size_t _index, const std::string &amp;_name, bool _preserveName=true) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preserveDofName</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a234cca59d9673ae5f28512fd7279693a</anchor>
      <arglist>(size_t _index, bool _preserve) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDofNamePreserved</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8ac283f8f50690cee8a8b584cfa05bbe</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDofName</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2a516155574e94f8a72008e68b1ef2a4</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aa17ed0219109c8ae2431a6e5739d9244</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a179161b249126cbb2043c48fddb393f9</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCommand</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a727996b761aad451731ddebb81a50944</anchor>
      <arglist>(size_t _index, double _command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getCommand</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8bfa2493feb1a3ed13c5c5bc062c6ba1</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7a9d49697439f840a757c7287c3c4859</anchor>
      <arglist>(const Eigen::VectorXd &amp;_commands) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab9d418428de330f652228f267be8dfaf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aab84af08eade0cf0eee6815be8f93217</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a08f0c0c5d64b94ee71de186198b023cb</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab47e064e7551d7f66730642db1fbd40d</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7f1517584abd1d7284d6d190ea734743</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>add02dcf2d93b654d041d0de03f9e6a58</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2e25654883ffff27907744175f76fddf</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afc54796a247eb78d6e76845f5cdc4669</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0d4f3e8a4672b054f1fad9c830526ac9</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a80d2c51a235f7241c645fca5a42affdd</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a448bfb5fe02ffeb564d24b09afc7d1b7</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a074314a5fc9e7e217e5c0d0550409d29</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adc933b3962a5802395350ce3c75c2d34</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a11f6e67224ddcc930524ed0b8730e8fd</anchor>
      <arglist>(size_t _index, double _initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4262578db4f2978f17f351c2f51de7df</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a83944e598a597dd3b19abeb7adec3929</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>addd227452dd8a5e65add41c1756262cb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a67d9e136e29cbe61b5098b15e4430212</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aca5afc185be722fe5c30eee9447f0770</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>acaa6d8794f1639a8ad5d3e3229251aef</anchor>
      <arglist>(const Eigen::VectorXd &amp;_velocities) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab81c6cedf1f85bc30bed3cf505748823</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a22780c2deaa80cabda5908cd35c6afb8</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a82d366feb9087830f85bf23099e7777d</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a561d74b2f5db70355aec1481a59995e0</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afd4b8551b8a6ef9e05e1914824530340</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>acb6f7ab189ffab40dfcba01331d0329b</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af4f53e6fbf34ad1a6fffb9ea6a687f60</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a959d2e8f15b30fd4498e53cfb00ec8e1</anchor>
      <arglist>(size_t _index, double _initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6c4f2e641f513bffdcf1c1cace017928</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2817ed658653a05b99533ba6f7a03dde</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a34c8c9aabd08674a66a87ea6c37ccc7c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a5c387d73f3004daf5693693f1f2b9ff2</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad6902d9231cfa45897f2fca00cf08156</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a399d191ca1e5256cec2ba323f0c2d177</anchor>
      <arglist>(const Eigen::VectorXd &amp;_accelerations) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a90680f6bc529b710bfcdd311cb5fe665</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a63a40d8664532662f0a3a2345d0edb13</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7f4d9de0294c7d6302ca8c2ef1d8e34d</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0dae14fe97df9b494565026b3f5fac14</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6116417594649d5db6cd5a06055aed55</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a07a49215410387408e9936688622fdf6</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6fad871fcd744ecddb2323e7a794a563</anchor>
      <arglist>(const Vector &amp;_positions)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getPositionsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4a3470038964cfe8184a6ba728412548</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocitiesStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ae7aa931fd1bf727daafb2651e376e384</anchor>
      <arglist>(const Vector &amp;_velocities)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getVelocitiesStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6d6c4264b76dadab5e323b596d9d7f78</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2daf7ae406e645b3d48234c2634b5eb4</anchor>
      <arglist>(const Vector &amp;_accels)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getAccelerationsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a680528ecb078201e4ec2e37f8d492729</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afbf6552d9c8b3964979b678c883e24d0</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a79e3c4d16c1e3ce1d1aa64b0d9a3b807</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a520cce075a9b7095f7f23e244bf6f31d</anchor>
      <arglist>(const Eigen::VectorXd &amp;_forces) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7d94197af44eab04f5402d109ddd7498</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0abdaffd27d50ce6c3710bf04ca5604c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a19155cb2e4a2ea0aa476af158cd46f20</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a944337a16109d0bd86682581ce386be2</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af88cda0e5f201c5ff1b13367175a96f9</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7c08e0a4de4cd813019cb21588e57096</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVelocityChange</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a478d5beb8cc51000a02ade8d54da13e0</anchor>
      <arglist>(size_t _index, double _velocityChange) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getVelocityChange</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad2b3ac4079775bde2b713da6f1f9408c</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adedbdef5f59e76d7591d312c33a24582</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a61653481cfbbe0967f3a80c4f8114d00</anchor>
      <arglist>(size_t _index, double _impulse) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a567d1bb04d2fbe5632da52b434d78f30</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ac7c3c20f9fd5c769ca51ad7cde7de99b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integratePositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ac700e98c99b1ade0cbf63ab77174a0d7</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integrateVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8db24e20a58ae3945c98c4680693d04e</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a9f942a4aea8a3cd9376930fdc4d7f749</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q2, const Eigen::VectorXd &amp;_q1) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Matrix&lt; double, DOF, 1 &gt;</type>
      <name>getPositionDifferencesStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a3e10c4cebae8d8112554897fe9123926</anchor>
      <arglist>(const Vector &amp;_q2, const Vector &amp;_q1) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPotentialEnergy</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aa733b6e36f54bedfe297feb5e5275b0d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Vector6d</type>
      <name>getBodyConstraintWrench</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a141165d9d4794cf922e965d101f6571d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSpringStiffness</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a69a802fa145ed4331a856e069bab8c7f</anchor>
      <arglist>(size_t _index, double _k) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSpringStiffness</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a90af83b809eebf98ae7e185243ef6436</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRestPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4f7bc7e0d5c10e324969c7df101bde77</anchor>
      <arglist>(size_t _index, double _q0) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRestPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2b4555bdb9b5e46bcf9b766a292d6f94</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a466ff4b4e4260b2637f7bf8a4c69f354</anchor>
      <arglist>(size_t _index, double _d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aa597a7c4a2b5f00f73ad2200424d1ee8</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCoulombFriction</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af05accc9d0a1f386badb06f3756776e8</anchor>
      <arglist>(size_t _index, double _friction) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getCoulombFriction</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a5a9bbe735bb3a3c68b92322c5e979eec</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae2d6d52f59fc7887fc7168b73c4ac2e2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isCyclic</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a68a052c76333a0db3c670a3e9367aa09</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MultiDofJoint</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aebce84f6be7a9725f43ff57816acfc71</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerDofs</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aeaa5491853b61e017037841989f4de83</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvMassMatrix</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4c5ffb2c7f73817abe9d584053eefe51</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvAugMassMatrix</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aed2b4924d7542a7ed69201ef94eea591</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForceForInvMassMatrix</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adf534f80e0cb806c8e52b07f6a6e12d6</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvMassMatrixSegment</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a21056e75791130fdce115cdd6c33a8ea</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvAugMassMatrixSegment</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0184659838e653f452447e50ddcdd306</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addInvMassMatrixSegmentTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aceea69dfce5684e82ff689b2bbc63782</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>getSpatialToGeneralized</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a69407379e7f265fab6e775201aeb8f13</anchor>
      <arglist>(const Eigen::Vector6d &amp;_spatial) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Joint *</type>
      <name>clone</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a79f88baad0ca5a053a6531e3d212e3da</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2c496f22f2789325ce5c5f1bc0f7f144</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateLocalTransform</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a6e2314747fed4eab2b4196abfa8099c6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateLocalJacobian</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a40c06ccb1298f20bceeb204222e85869</anchor>
      <arglist>(bool _mandatory=true) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateLocalJacobianTimeDeriv</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a254b26f52f276f16fc3d44125e562ae7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MultiDofJoint&lt; DOF &gt;::UniqueProperties</type>
      <name>mMultiDofP</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af26673521ed4c68536c0aa17bbd38616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::array&lt; DegreeOfFreedom *, DOF &gt;</type>
      <name>mDofs</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0295360af9292b9413f7711a800f1650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a47310e00f6bafa84e892c2a6de7d1078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a67686193eb1f3a00406c6964051baf19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mPositionDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad4b863b741157b8d6a0c4c272e2c63fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ae3514a550010fdb8247277d1e483aa7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocitiesDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a205518d1d940bd7a58da3c4797dcd976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a1914d76f4a10a70cb769cfb078e6e761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mAccelerationsDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a24897f6727c7e9b94b1b180712ba3354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a05eb3dd0d1a6babd1b64e0b32a87b52f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mForcesDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adff503ec796639073c6e89c9aaeb8c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocityChanges</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a175dc6b707e8768cceef85b9c25cf8a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a53e7b885ab3872ef75077d43c2098546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mConstraintImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7767c5503325a2797dcd818a898c9059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, 6, DOF &gt;</type>
      <name>mJacobian</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a35d34745d97230e6cd88e56603df41f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, 6, DOF &gt;</type>
      <name>mJacobianDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a949b3d7c16f880871b2a304e50e1b812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, DOF, DOF &gt;</type>
      <name>mInvProjArtInertia</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a40e1ebd071a7c4fb42f5ee953215722d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, DOF, DOF &gt;</type>
      <name>mInvProjArtInertiaImplicit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a5e665fa058bfd2c8809db6901ea26127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6c1af9cc0ef9fc1326ac13ff1e67c403</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a15f2342b6a09189540789f930d769951</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvM_a</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7387fa0865e340d0442cdacb5e54f0f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvMassMatrixSegment</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aac97c52601a280fb48d48f057512bc63</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>acc2eec4a251207980ec8c328eb2527eb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, 6, DOF &gt; &amp;</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab98130f46f0278228203c7e57189ead1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a954a8a6b0d4dc82387566682e60cc7ff</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Eigen::Matrix&lt; double, 6, DOF &gt;</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ae69cc19c7389d7fa2707cbe44bfd1c34</anchor>
      <arglist>(const Eigen::Matrix&lt; double, DOF, 1 &gt; &amp;_positions) const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const math::Jacobian</type>
      <name>getLocalJacobianTimeDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab1d663aabcaeefb4af8999f814104dd8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, 6, DOF &gt; &amp;</type>
      <name>getLocalJacobianTimeDerivStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a58c6a50be34213d3d0b41b97d0e390a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, DOF, DOF &gt; &amp;</type>
      <name>getInvProjArtInertia</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a528d2b4dda452b480f37caeae48d13ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, DOF, DOF &gt; &amp;</type>
      <name>getInvProjArtInertiaImplicit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a75ee9b5c626bd4b1c6d7d682aad5642b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalSpatialVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a59b84b398e739afcdc7af4a463671542</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalSpatialAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>abb9e1037840164e8a504a9525e8f9c93</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalPrimaryAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6f1602aee14aa6da2fa20b0f5468fc07</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a695b7ca508d75c0ec05a6f44193a0d32</anchor>
      <arglist>(Eigen::Vector6d &amp;_vel) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPartialAccelerationTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a38538782270de20a7719bef4cce0941f</anchor>
      <arglist>(Eigen::Vector6d &amp;_partialAcceleration, const Eigen::Vector6d &amp;_childVelocity) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addAccelerationTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0c67ba1920904739f256c2ffc5c36edc</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addVelocityChangeTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7131af687c5441f5367f6509af59fac3</anchor>
      <arglist>(Eigen::Vector6d &amp;_velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addChildArtInertiaTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a21333ff1ff5616ed9b2cf5c4c8630dd8</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaImplicitTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab04f3cfd4ed528821b3c824f0e8f2246</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertia</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a1106a8dac228592b4179cf3e6a893c27</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad28d890eb2ef95bcb712da59c209b61f</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4d7cbeb67047ed72a7dc451f2f6de4a2</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce, const Eigen::Vector6d &amp;_childPartialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasImpulseTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a43065522936c0ff17261943bb07939de</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasImpulse, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a54a29f386653b06973ef62080cac2ba0</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad7bdb6946f0f4ba5df2abad1cf5f0b5b</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetTotalImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a58230b7b40ab0ad4c7e7c4fe773cb27b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a59bde4536c6423d0119b8765aac3db01</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocityChange</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afca2a5aa43a036e09f77aa76e84fa494</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateForceID</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad9029a773828ec608ab87d488b3218f6</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateForceFD</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8852308c120e782aeee0644afbc11d53</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateImpulseID</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a1e188f117097d459c1ed1d18f005a19e</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateImpulseFD</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a9f455f7297554c35d02ee7836d38689b</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0c67477f166553f29bf6eb039fd40332</anchor>
      <arglist>(double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildArtInertiaToDynamic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2453783a699891abf31a88403d36e32c</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildArtInertiaToKinematic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a1c3f2806eb6581a9796dd4a21b392eca</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildArtInertiaImplicitToDynamic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0aa54cdf7308ebee3f1d2ae20db46b30</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildArtInertiaImplicitToKinematic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad88f461a629a40249e52d35edadf9a26</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateInvProjArtInertiaDynamic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad184f8a6ec1e93ad9980f80c4e6cba45</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateInvProjArtInertiaKinematic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a02403fca8f69704d42317635a2b96511</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicitDynamic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6826a5941fe64ec30bcdc06f027a0c8a</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicitKinematic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad8ec05f41beecfa43e6f37692f7ce0b4</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildBiasForceToDynamic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a918e82116551623e85c97c82dcd4a86f</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce, const Eigen::Vector6d &amp;_childPartialAcc)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildBiasForceToKinematic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aef3edc23b1df961ba38c5c580131e64d</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce, const Eigen::Vector6d &amp;_childPartialAcc)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildBiasImpulseToDynamic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a431ac2a7fa5456c716e15cb9393fb4c7</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasImpulse, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasImpulse)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildBiasImpulseToKinematic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a5291131e48b5888d13f59559bdc84326</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasImpulse, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasImpulse)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateTotalForceDynamic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a65a818543d9849d073bb4761675d1985</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateTotalForceKinematic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0a8557c7bd49f1d7ad86d0d9e8f9653e</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateTotalImpulseDynamic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad326501abdeaf068ae44afe5ed5ef3a6</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateTotalImpulseKinematic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a31bd5344a11963343f34d5435910a576</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateAccelerationDynamic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a1bb7e37305ad6602d99971799dda943d</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateAccelerationKinematic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7f83442680194e7343640adbe94d9f1b</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateVelocityChangeDynamic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad8c4d396878221d6c82958f25a430fbf</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_velocityChange)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateVelocityChangeKinematic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ac481652f8dc3b1186ee346e9fe9a6abf</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_velocityChange)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateConstrainedTermsDynamic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aa0a8b13509e16aed0933a2f79a71b303</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateConstrainedTermsKinematic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6831c0f57c3c1ea8173856f898b8b77c</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::MultiDofJoint::Properties</name>
    <filename>d5/dbc/structdart_1_1dynamics_1_1MultiDofJoint_1_1Properties.html</filename>
    <base>dart::dynamics::Joint::Properties</base>
    <base>dart::dynamics::MultiDofJoint::UniqueProperties</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>d5/dbc/structdart_1_1dynamics_1_1MultiDofJoint_1_1Properties.html</anchorfile>
      <anchor>a1925501c76834552012de5b4c4d23254</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::MultiDofJoint::UniqueProperties</name>
    <filename>d1/dad/structdart_1_1dynamics_1_1MultiDofJoint_1_1UniqueProperties.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::DegreeOfFreedom</name>
    <filename>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</filename>
    <base virtualness="virtual">dart::common::Subject</base>
    <member kind="function">
      <type></type>
      <name>DegreeOfFreedom</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a38e97f9a4dc7b48e01d113337038533f</anchor>
      <arglist>(const DegreeOfFreedom &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>aeb4b5f50c9a12054c1ec7a47a508f330</anchor>
      <arglist>(const std::string &amp;_name, bool _preserveName=true)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a374ff502cd4202bb9760f742ba936af2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preserveName</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>abb0fc08e06e8523d5bc09726d90e1089</anchor>
      <arglist>(bool _preserve)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNamePreserved</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>aea2cf2c1f4b29003ebc6542a5ca64f99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>add2ec1d2f979e9056b466b1be5ee1a86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a40090e1bfc2e61901e6d653962f1409d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInJoint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a6c0fa6b7fdbba7b7d3fa655c26834b76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getTreeIndex</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a48baa4fbbc970d1c2bfa04b7a491161b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommand</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a766f0239dae9baff95de3f8b0a5fa834</anchor>
      <arglist>(double _command)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCommand</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a19a068e0ab4dd6eab90e998beb1d6ca9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCommand</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a587972f807f8bce5ea243ceaa6231f37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>aec9e528d91a9c09c174ed8a7d60ab9cc</anchor>
      <arglist>(double _position)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>acbe1ab5fbd06ef4f57cfa8831096f8f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a8f3ad68159541dee8bafef10b0f8dc8d</anchor>
      <arglist>(double _lowerLimit, double _upperLimit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a9ab15aa03276815a18a7a918be384471</anchor>
      <arglist>(const std::pair&lt; double, double &gt; &amp;_limits)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; double, double &gt;</type>
      <name>getPositionLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a562f320112ffa1599f74ac522058e639</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>af78929bb86347ba712cac092cbe917ba</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>afe09fc07b046b11921c7257f200e2c0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>abe7b59064fd38b4ead57d6003523d70d</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a684e1aca1964f4b9db05f93111e83e3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCyclic</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a5ca795f03e3511f1dcb52dd75bf228e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>aba515d30d1a6fc66af1cb0a7400468e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPosition</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a1be451e0547ba180c81fc10f31684779</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPosition</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a8fed3479888c351bfb851202021afd4e</anchor>
      <arglist>(double _initial)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialPosition</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a4a4699ee543de7622c66adba258c63ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a07919edec439cb7679e23fde8fbdd7b9</anchor>
      <arglist>(double _velocity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a1842dd6a7886ea884e9b5a37e1b80bda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>acd3d2639e62dd5ef5acde52febfcfbbc</anchor>
      <arglist>(double _lowerLimit, double _upperLimit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a1b6892cb3f1cd15e61548cba8e12e118</anchor>
      <arglist>(const std::pair&lt; double, double &gt; &amp;_limits)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; double, double &gt;</type>
      <name>getVelocityLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a7cabc34efae4746de269fdbecfcbd352</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a6c4c17ff11eee3c090d49a6fef73e6ab</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a858d56b746321957562a03184066de91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a8fbde9a2a40f925a27d14cbed232ad7c</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a6d7efcf7546e9061f984735fcf1891ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocity</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>afac54afdbadea249ae4023bffbd4555a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocity</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ada1d0fe302361c430148c1232e0ad050</anchor>
      <arglist>(double _initial)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialVelocity</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a0c6c2e19a709bebff600dff10f79dd34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a2efe2b2022cf5cc77d0c2701d791baea</anchor>
      <arglist>(double _acceleration)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a4d78fb7b3fcb3ec99a2a13ae263265cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAcceleration</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ae834277a05318c8adea9a7550649f0f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a075e718fee2ef1e2664d931b5314169b</anchor>
      <arglist>(double _lowerLimit, double _upperLimit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ae85ed5602b203813f422848c8a49e795</anchor>
      <arglist>(const std::pair&lt; double, double &gt; &amp;_limits)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; double, double &gt;</type>
      <name>getAccelerationLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a04db2de533eb15877236b1f7ad0fd2ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a72479ea21d2b58bf8d98fb81f1d5221c</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>af812ceffc8983a546ed1259bfb6fb2b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a0db97ca53131bf0be5c81a8ef48a902c</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a9a6c1c4104d7d3774ff85cc86fdb9ff2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a35d2282bb48d197207283bcd63b0f437</anchor>
      <arglist>(double _force)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a601029faf95673798ba1ec5b96d66047</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetForce</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a05de61928807faeeb8dd287039752f33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a9543f3222fcd7e5c6144a216d3362a17</anchor>
      <arglist>(double _lowerLimit, double _upperLimit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ad86e51df5b0f5231f37e58b88ef72811</anchor>
      <arglist>(const std::pair&lt; double, double &gt; &amp;_limits)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; double, double &gt;</type>
      <name>getForceLimits</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a8cbae7c4503b0472ef051ec0fe612202</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>acad847eec2661de425fe40d4d7d2449e</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a407d559133ef9063b124db5a9b7c6d34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>af1d1d893f68ac3eec65b1223e7ab2967</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ae095187fb4122e5e1b0317c342f5ba4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityChange</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>aae8c43a609304fc02fbd2e89ff1810ac</anchor>
      <arglist>(double _velocityChange)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityChange</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a793aff4f748af6e2afafe1bfa945031f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocityChange</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>af0c468512b3afc4c1d9b4877bf95aa50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ac2640f9e1d11edb566a17adb13f1b927</anchor>
      <arglist>(double _impulse)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ae6f422bb4f15b5c81c6325f7060f7346</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetConstraintImpulse</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a2bd2d47f63421385e1e4ea0a88417d48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpringStiffness</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a750e22162274209f3926d003f08923b9</anchor>
      <arglist>(double _k)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpringStiffness</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a6803760ccde054b380c62f8e91f417cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestPosition</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a64e5497dd1a706e02dcfe429242d1727</anchor>
      <arglist>(double _q0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRestPosition</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a856a514c64896ed5211dd12377088831</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a610a30e97eae9a5fae53de5a1028752e</anchor>
      <arglist>(double _coeff)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a71be56982c293c99977c6232e06362ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoulombFriction</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a3ac99e2599c7f9869dcd49172675bfb9</anchor>
      <arglist>(double _friction)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCoulombFriction</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ae2b11dec5368a113b0b403e2a0783a72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Joint *</type>
      <name>getJoint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a4f9166e956300af431447aceab442962</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Joint *</type>
      <name>getJoint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ae7cd13f1918bb01ce25ef29a60aeae0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ab56861ca61eb682d4b310b87436025e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstSkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>acd918acb3a74c538b8db40eae20c605b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getChildBodyNode</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a3387cb9f9aeeab634b8b510d262c0715</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getChildBodyNode</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a9ff8b97f1667c0368f2bcb8232e0a2ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getParentBodyNode</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a916c16b49a1a13f360bc10d24f3f2b21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getParentBodyNode</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a02eb249111260681b1c6327d135de728</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DegreeOfFreedom</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ad46ce8d6846dc961e611aaeb4652447c</anchor>
      <arglist>(Joint *_joint, size_t _indexInJoint)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mIndexInJoint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a6dff598d8b9d8b6bbc16e7beb5a1e710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mIndexInSkeleton</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a24f25f495c49ccec85a21a44e095fab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mIndexInTree</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a9accf91d28aeb44918b13db9c940e23c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Joint *</type>
      <name>mJoint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>abae21e2528be496528b3d1732f5a7514</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Joint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a2b27269e818d7b63995be0e0f812bf54</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>SingleDofJoint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>ad31cc087f0ac9ac50e860d73cfe4e9e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>MultiDofJoint</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>added7c08f59c0cac1eea44589343b7ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>de/db7/classdart_1_1dynamics_1_1DegreeOfFreedom.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::MutexedWeakSkeletonPtr</name>
    <filename>de/d69/structdart_1_1dynamics_1_1MutexedWeakSkeletonPtr.html</filename>
    <member kind="variable">
      <type>std::mutex</type>
      <name>mMutex</name>
      <anchorfile>de/d69/structdart_1_1dynamics_1_1MutexedWeakSkeletonPtr.html</anchorfile>
      <anchor>ae99b07a21b689fc4a701632d2dae61ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::weak_ptr&lt; const Skeleton &gt;</type>
      <name>mSkeleton</name>
      <anchorfile>de/d69/structdart_1_1dynamics_1_1MutexedWeakSkeletonPtr.html</anchorfile>
      <anchor>a064f9c58e46829ad633b31b030634dda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SkeletonRefCountingBase</name>
    <filename>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</filename>
    <member kind="function" protection="private">
      <type>void</type>
      <name>incrementReferenceCount</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>a64fac8ddc9d6179823310a614f2bf16d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>decrementReferenceCount</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>a4f2ff3db1bcfee39dc241224e0f89733</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateBodyNodePtr</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>ab03141eaad52bc5fde8ba32b8414c307</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateWeakBodyNodePtr</name>
      <anchorfile>d1/d38/classdart_1_1dynamics_1_1SkeletonRefCountingBase.html</anchorfile>
      <anchor>af3f6424130a51834774ff8bdb617eb93</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateBodyNodePtr</name>
    <filename>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</filename>
    <templarg>BodyNodeT</templarg>
    <member kind="function">
      <type></type>
      <name>TemplateBodyNodePtr</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a701aebe8d4fe456f3abbf5055127ca68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateBodyNodePtr</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a9ffbfea0bfc648b5cff606bba82c079d</anchor>
      <arglist>(BodyNodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateBodyNodePtr</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>ab2de0184c2a78bef08d70d7adecac249</anchor>
      <arglist>(const TemplateBodyNodePtr &amp;_bnp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateBodyNodePtr</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a24fb06ddef47a413f8b89c2a4a32e91c</anchor>
      <arglist>(const TemplateBodyNodePtr&lt; OtherBodyNodeT &gt; &amp;_bnp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TemplateBodyNodePtr</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>ab4b8cdbc16851a7ee80ecbd6e317e921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TemplateBodyNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>ad4e4313415b0f3c0d3714c7ce61f3243</anchor>
      <arglist>(const TemplateBodyNodePtr&lt; OtherBodyNodeT &gt; &amp;_bnp)</arglist>
    </member>
    <member kind="function">
      <type>TemplateBodyNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a593a6ec66439490ef75ada1d18812401</anchor>
      <arglist>(BodyNodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BodyNodeT *</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>aca19d1b6e494db49ca1139a943740b01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNodeT &amp;</type>
      <name>operator*</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a8f1e9b2d80ca67051b07f2f741949f59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNodeT *</type>
      <name>operator-&gt;</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a9b723bf68b18931ffc061a1136eb1d9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNodeT *</type>
      <name>get</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a010bb70b67700bab234f929d5a1a5fe0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a80276f9298b9e4161ea85b72eea23673</anchor>
      <arglist>(BodyNodeT *_ptr)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BodyNodeT *</type>
      <name>mPtr</name>
      <anchorfile>d1/d01/classdart_1_1dynamics_1_1TemplateBodyNodePtr.html</anchorfile>
      <anchor>a2491098b31a85f7a0ea5bf264dc93762</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateWeakBodyNodePtr</name>
    <filename>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</filename>
    <templarg>BodyNodeT</templarg>
    <member kind="function">
      <type></type>
      <name>TemplateWeakBodyNodePtr</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a462348b0d170b9d517de3d97bd24b6f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakBodyNodePtr</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a176fc15c8fc06d8610a236335d5501ac</anchor>
      <arglist>(BodyNodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakBodyNodePtr</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a73b2e4a4d13dbd6a5d0565931221685b</anchor>
      <arglist>(const TemplateWeakBodyNodePtr&lt; OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakBodyNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a0724cc4c55ddb23d3ed1b0acf49a06d0</anchor>
      <arglist>(BodyNodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakBodyNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a6b5a9f58133cfa4fe2d7ef6987c513db</anchor>
      <arglist>(const TemplateWeakBodyNodePtr&lt; OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>lock</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a4d1b4033c0ee3f37fc3c787b4112ebe2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a05584de0a754b6b637e40dfde6a27c4a</anchor>
      <arglist>(BodyNodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a26eaed2c1c9a53e827fcd37ee511caaa</anchor>
      <arglist>(const TemplateWeakBodyNodePtr&lt; OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>expired</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>ad4ac94cabf1dff46ef9cbe7b8ec9341f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BodyNodeT *</type>
      <name>mPtr</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>a0bc0fc9039197c397be1a9af0be2a755</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; MutexedWeakSkeletonPtr &gt;</type>
      <name>mLocker</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>acae0717e4f508c9493b90f9c532ac9b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateWeakBodyNodePtr</name>
      <anchorfile>d2/d0d/classdart_1_1dynamics_1_1TemplateWeakBodyNodePtr.html</anchorfile>
      <anchor>af3f6424130a51834774ff8bdb617eb93</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateDegreeOfFreedomPtr</name>
    <filename>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>TemplateDegreeOfFreedomPtr</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a419d5fb64b441518c2f3c2317a5b67f4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateDegreeOfFreedomPtr</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a4f873f2bb700ead8d88036a93eda7976</anchor>
      <arglist>(DegreeOfFreedomT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateDegreeOfFreedomPtr</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a6838f70f18229ac0f65f3e1fde0c120f</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDegreeOfFreedomT, OtherBodyNodeT &gt; &amp;_dofp)</arglist>
    </member>
    <member kind="function">
      <type>TemplateDegreeOfFreedomPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a7728fcfd82173ef39c2b030caa9ded9b</anchor>
      <arglist>(DegreeOfFreedomT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateDegreeOfFreedomPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>aca2ac8cc7f4a5138cf5cca6e38fa4d7e</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDegreeOfFreedomT, OtherBodyNodeT &gt; &amp;_dofp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator DegreeOfFreedomT *</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>af7884cff00399dc444adedc01c138bec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedomT &amp;</type>
      <name>operator*</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a72264079eda915d5c9449a14418195a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedomT *</type>
      <name>operator-&gt;</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a2f87ca36892453d4e6c8bb7500c694da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedomT *</type>
      <name>get</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a2df1c111d2f1f224a7a37478c49d0084</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TemplateBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>getBodyNodePtr</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a966d2959495f1b9081023b51e0de1f95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalIndex</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>af2a30ffdebbf562f9a53c4815dbfe19e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a7f28e8aefcaaac554cbe7a564c5d9ed4</anchor>
      <arglist>(DegreeOfFreedomT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>aed434c04726819adabdf44a5da37a7fd</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>ac7a227cefb69f99fb0592d5152937d0f</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>af24de19a5f87877e0f37ff7323bf38f4</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a5161c0faf499c66a078f31a8c849c6b5</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a0f66a548b371dc0ca2f8de939afad241</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a0af3a79eb82455f762c58128a31bdcb0</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TemplateBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>mBodyNodePtr</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a0fc0549bda77bcb859a725799b98aef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>mIndex</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a5720bc8491bf3ed36c27c48508f516ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateDegreeOfFreedomPtr</name>
      <anchorfile>d2/d70/classdart_1_1dynamics_1_1TemplateDegreeOfFreedomPtr.html</anchorfile>
      <anchor>af442ca2a2b600657ce0b061353f97dc4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateWeakDegreeOfFreedomPtr</name>
    <filename>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>TemplateWeakDegreeOfFreedomPtr</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a2a5f2fb08edcc43953b80529c9a16618</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakDegreeOfFreedomPtr</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a6fe887baeee404f96eaf84f36bac936f</anchor>
      <arglist>(DegreeOfFreedomT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakDegreeOfFreedomPtr</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a155bb1b691d1cd4f0379b0e84508a7f3</anchor>
      <arglist>(const TemplateWeakDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakDegreeOfFreedomPtr</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a1766d6439428981200e8c680b5a01ae4</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_strongPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakDegreeOfFreedomPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a992950f171c8d7ac98b0780c3d93ddab</anchor>
      <arglist>(DegreeOfFreedomT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakDegreeOfFreedomPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a0d4705bfba72e0584679fb0954a9cc76</anchor>
      <arglist>(const TemplateWeakDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakDegreeOfFreedomPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a480a06eb7b2fa6a0b805f8d0bfb122ad</anchor>
      <arglist>(const TemplateDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_strongPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateDegreeOfFreedomPtr&lt; DegreeOfFreedomT, BodyNodeT &gt;</type>
      <name>lock</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a0ef5e83f6d35d587957540dad9790876</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a0a6da469aa4e40decf28dc5e76340c65</anchor>
      <arglist>(DegreeOfFreedomT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a75625421ed9284f741679474b201419f</anchor>
      <arglist>(const TemplateWeakDegreeOfFreedomPtr&lt; OtherDofT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TemplateWeakBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>mWeakBodyNode</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a49fa95097614a916a6973e7cdd7dae23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>mIndex</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>aa82f2be4779465b3998e7ac3b8f37d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateWeakDegreeOfFreedomPtr</name>
      <anchorfile>d7/d70/classdart_1_1dynamics_1_1TemplateWeakDegreeOfFreedomPtr.html</anchorfile>
      <anchor>a40bce841a8f61fbd831fe9eb633a3905</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateInverseKinematicsPtr</name>
    <filename>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</filename>
    <templarg>IkType</templarg>
    <templarg>JacobianNodePtrT</templarg>
    <member kind="typedef">
      <type>IkType</type>
      <name>element_type</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a879a55f935e3cbd86f4e8604cf8a2ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateInverseKinematicsPtr</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a7dd523b9c03ab99929e5b8055a3e099e</anchor>
      <arglist>(const std::shared_ptr&lt; element_type &gt; &amp;sptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateInverseKinematicsPtr</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>ad87977cec4559c38ab868d8a6371a14a</anchor>
      <arglist>(std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateInverseKinematicsPtr</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a0d558ed12823bffa14f0ac0db252400a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateInverseKinematicsPtr</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a3d54372079b18443155da149e4e8b5b5</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodePtrT &gt; &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::shared_ptr&lt; element_type &gt;</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a0d6551c3974fdc519840acd2e2a02afd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateInverseKinematicsPtr</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a795708988235b6c6df62c4cbb344638b</anchor>
      <arglist>(const std::shared_ptr&lt; OtherIkT &gt; &amp;sptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateInverseKinematicsPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a25de0d473178a702a6f7ab8b53c58a6a</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodePtrT &gt; &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateInverseKinematicsPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>aac3254fb7a0480204914585dc343dbd7</anchor>
      <arglist>(const SharedPtrT &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateInverseKinematicsPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a3fd1fe26b3c2a1301d7bda413bed7a83</anchor>
      <arglist>(std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a18270247999a66039742b81b7986f06e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>element_type &amp;</type>
      <name>operator*</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a6f0b3366225860c9f179172248ae1a46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>element_type *</type>
      <name>operator-&gt;</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a39faa42ea71b6e6ca2b88fe819993f1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>element_type *</type>
      <name>get</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a9125c8a5ab7e8549cf2879bc582c1d40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; element_type &gt;</type>
      <name>get_shared</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a5c1f192c11f7b96b676de2a758cfbe61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>aa651837034988be6e1a16516ea0c7d69</anchor>
      <arglist>(const std::shared_ptr&lt; IkType &gt; &amp;sptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a1292030351a239d10bc6b343ff529668</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a1bb384d1bd4e6a89b26562c47dad9ad6</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a1aa8acb6014951f872f3458dd5985e4a</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a982fe0f7bb2c3e9b3f0b1ed6c71f8e6f</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>ae9521fc82ca1ee531dae758f0dbaa878</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a9d0eba213d17259292e566eaa002511d</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; element_type &gt;</type>
      <name>mIK</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a8b60fa044976a16ff054c668719001af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>JacobianNodePtrT</type>
      <name>mJacNodePtr</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a6b3b09324f68e733b8a0eb98a65aaf04</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateInverseKinematicsPtr</name>
      <anchorfile>dd/dbc/classdart_1_1dynamics_1_1TemplateInverseKinematicsPtr.html</anchorfile>
      <anchor>a6a416fcf8ba11e55919ff2a2f013e000</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateWeakInverseKinematicsPtr</name>
    <filename>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>InverseKinematicsT</type>
      <name>element_type</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>af64da281a080555550fcce634058a65e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakInverseKinematicsPtr</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>a5e21e9cea1d9e948c9a2ccd315fd1154</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakInverseKinematicsPtr</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>ac4cd0dda70a13fed21678dce68992583</anchor>
      <arglist>(const PtrType &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakInverseKinematicsPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>a595eec7724db16beb67e45f526e1e928</anchor>
      <arglist>(const PtrType &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateInverseKinematicsPtr&lt; InverseKinematicsT, JacobianNodePtrT &gt;</type>
      <name>lock</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>a245792824d5ee8b1093662e01832df80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>a52f4cd6422bf620512fa99192f86a47d</anchor>
      <arglist>(const TemplateInverseKinematicsPtr&lt; OtherIkT, OtherJacNodePtrT &gt; &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>a2805854a68ddded1e8c1c04718bc94bd</anchor>
      <arglist>(const TemplateWeakInverseKinematicsPtr&lt; OtherIkT, OtherJacNodeT &gt; &amp;_ptr)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; InverseKinematicsT &gt;</type>
      <name>mWeakIK</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>a8dbbcbbf44a970c1e2952e690c9deb18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>JacobianNodePtrT</type>
      <name>mWeakJacNode</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>a84e6590e5c9a8e76f58eb5d14c6f0252</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateWeakInverseKinematicsPtr</name>
      <anchorfile>d9/d6b/classdart_1_1dynamics_1_1TemplateWeakInverseKinematicsPtr.html</anchorfile>
      <anchor>ace773ba830a1ed02acc9437d8e05ecc5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateJointPtr</name>
    <filename>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</filename>
    <templarg>JointT</templarg>
    <templarg>BodyNodeT</templarg>
    <member kind="typedef">
      <type>JointT</type>
      <name>element_type</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>aaef25767cc47c829dfb94ddda08cb907</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateJointPtr</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a1a90726b7151478c639e97c1265fed27</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateJointPtr</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a19f187da42d2f350af803981fc4866c4</anchor>
      <arglist>(JointT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateJointPtr</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a7e6da674b35ce44caa2e2558e5dfb024</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_jptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateJointPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a13436e73a4ec31bd034311c13ce794b7</anchor>
      <arglist>(JointT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateJointPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>af51408a2899c29293ebf039cb6c4f93e</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_jptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator JointT *</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a694f94ab66869156034ad76cbd7579fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointT &amp;</type>
      <name>operator*</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>ab4046a932009f38322279528403b4848</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointT *</type>
      <name>operator-&gt;</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a71d1534f2bc5d4317ce79fd5e27d5bab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JointT *</type>
      <name>get</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>aa50a858f1dac04af69c7defa8338479c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a454e4845a5ec0ce911a4d2ebcc2d4f21</anchor>
      <arglist>(JointT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a0430303d9dd88ed00fcf9e9268cb1de6</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a6f4242202898af077c71f50cc6ddbbef</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>abc1cc7662fa70892c0441c573bf4ae1d</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>af84421d70a37fd78ea282445b835eea6</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>ad540c69dd6d170fd7b894c44661d06a4</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a4d7bf3a85ef8a82507d55c0c4a29013b</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_rhs)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TemplateBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>mBodyNodePtr</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>ae1a667fcbd7df3cb279e0eb754c62086</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateJointPtr</name>
      <anchorfile>d0/d2f/classdart_1_1dynamics_1_1TemplateJointPtr.html</anchorfile>
      <anchor>a3021d253b6e5ca623ce1d71a819d511c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateWeakJointPtr</name>
    <filename>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</filename>
    <templarg>JointT</templarg>
    <templarg>BodyNodeT</templarg>
    <member kind="function">
      <type></type>
      <name>TemplateWeakJointPtr</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>ac7c2aa91795fbc1d83a4aab6963e9cd9</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakJointPtr</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>a370cacdff338b7e2243738bacf0a9f4f</anchor>
      <arglist>(JointT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakJointPtr</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>a1cfb148b46abcdc01a356b372eedbe40</anchor>
      <arglist>(const TemplateWeakJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakJointPtr</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>ae178f8357860fa9c418afad4dd8d2ca1</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_strongPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakJointPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>aa150daab20ecc9e58b99875b4b309eb2</anchor>
      <arglist>(JointT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakJointPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>acce5d943e06930149870dc3842ccbce5</anchor>
      <arglist>(const TemplateWeakJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakJointPtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>a13c9f5fafd203eb8c2d128f078ca3eb0</anchor>
      <arglist>(const TemplateJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_strongPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateJointPtr&lt; JointT, BodyNodeT &gt;</type>
      <name>lock</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>a90dbfcb17ff997189df072139f5da094</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>a9eca89ac3708cdbde233c0e018caea0c</anchor>
      <arglist>(JointT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>adb42c6faa50c16b6dbd93d5bb2fc1fd7</anchor>
      <arglist>(const TemplateWeakJointPtr&lt; OtherJointT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TemplateWeakBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>mWeakBodyNode</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>af9a63d1021fdf0a1e7c306b11c661a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateWeakJointPtr</name>
      <anchorfile>d8/d37/classdart_1_1dynamics_1_1TemplateWeakJointPtr.html</anchorfile>
      <anchor>a25edc8761f7a8acdb8b944b17934bd52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateNodePtr</name>
    <filename>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</filename>
    <templarg>NodeT</templarg>
    <templarg>BodyNodeT</templarg>
    <member kind="typedef">
      <type>NodeT</type>
      <name>element_type</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a67c69c0b378164524f2ae4188261566b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateNodePtr</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a6260221dd0c064e1e35616a092b2ae4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateNodePtr</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a86d902004d42b04bddee1b3b320a7f20</anchor>
      <arglist>(NodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateNodePtr</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a518b910d354a3dfc65f0e9f13747d6d0</anchor>
      <arglist>(const TemplateNodePtr&lt; OtherNodeT, OtherBodyNodeT &gt; &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>afd15ff753789e5c45b0c6a8769b166da</anchor>
      <arglist>(NodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a861d2daadc3e11bfdf951069808ccd08</anchor>
      <arglist>(const TemplateNodePtr&lt; OtherNodeT, OtherBodyNodeT &gt; &amp;_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator NodeT *</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a86414a4450f3b43a81ce65b47708b065</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodeT &amp;</type>
      <name>operator*</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>ac5ee15c5985c6c22a9a1d13d46dae051</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodeT *</type>
      <name>operator-&gt;</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>afa9ca11d2251248a076611863f463c33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodeT *</type>
      <name>get</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>ade65dbb1e0c02495fa324bb9bd5a1e28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>aec26235ea529a84ea177747362110e85</anchor>
      <arglist>(NodeT *_ptr)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NodeT *</type>
      <name>mNode</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>ae8769d6ce0464921d1dd6b2c7f324435</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; NodeDestructor &gt;</type>
      <name>mDestructor</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a78f3b547ac79f4369c2edb8fe61e6bf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TemplateBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>mBodyNodePtr</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a37b3ba8963d32e74214eebade636ed0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateNodePtr</name>
      <anchorfile>d9/dff/classdart_1_1dynamics_1_1TemplateNodePtr.html</anchorfile>
      <anchor>a1a3d8e9e0914d57bab6a8b9ef2cc21dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplateWeakNodePtr</name>
    <filename>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</filename>
    <templarg>NodeT</templarg>
    <templarg>BodyNodeT</templarg>
    <member kind="function">
      <type></type>
      <name>TemplateWeakNodePtr</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a58736772d7c7c38e6b6a9b8120d7b43d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakNodePtr</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a69aeb09b0396080f89dd2a759d3c7c5e</anchor>
      <arglist>(NodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakNodePtr</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>ae3fd6eac73026468ed5a17dc27fdd721</anchor>
      <arglist>(const TemplateWeakNodePtr&lt; OtherNodeT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TemplateWeakNodePtr</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a9d2403d43f7529ffa8c7235d1b497a96</anchor>
      <arglist>(const TemplateNodePtr&lt; OtherNodeT, OtherBodyNodeT &gt; &amp;_strongPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>addb293e33ce2a3add8cb70189cd28fa1</anchor>
      <arglist>(NodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a181f63708cbe18487e53653e8d2d9c55</anchor>
      <arglist>(const TemplateWeakNodePtr&lt; OtherNodeT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateWeakNodePtr &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a148f808fd2ed579371457f28a1afd608</anchor>
      <arglist>(const TemplateNodePtr&lt; OtherNodeT, OtherBodyNodeT &gt; &amp;_strongPtr)</arglist>
    </member>
    <member kind="function">
      <type>TemplateNodePtr&lt; NodeT, BodyNodeT &gt;</type>
      <name>lock</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a767a46825bc66fc7ac558a5185426daf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>ad16fab7cb85e0440bc75aed5e40fb99e</anchor>
      <arglist>(NodeT *_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>ac79d9bf0601c28050a2bb243483a53d8</anchor>
      <arglist>(const TemplateWeakNodePtr&lt; OtherNodeT, OtherBodyNodeT &gt; &amp;_weakPtr)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NodeT *</type>
      <name>mNode</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a06e953bef7a344c1ee57642a86045a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; NodeDestructor &gt;</type>
      <name>mWeakDestructor</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a31593cb79170fb34c3c0f5305814b354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TemplateWeakBodyNodePtr&lt; BodyNodeT &gt;</type>
      <name>mWeakBodyNodePtr</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>ade4bbe43c0ff8609d4fa91fcc081ba23</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateWeakNodePtr</name>
      <anchorfile>d5/db5/classdart_1_1dynamics_1_1TemplateWeakNodePtr.html</anchorfile>
      <anchor>a1dc904ae4e952e78708ec0f6cfe0e22e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::EllipsoidShape</name>
    <filename>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>EllipsoidShape</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a4a52a88b00684566535d78169ec47b6b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EllipsoidShape</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>ab357790e4655e1478e1919132e2e9c40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>ac96ed47474e8fd075870632034b4ac4b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getSize</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a159808e5461ff9c3f9dc990fbe56b65e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a67cfa4b3e63ec9f83549c35cd92eda75</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, const Eigen::Vector4d &amp;_col=Eigen::Vector4d::Ones(), bool _useDefaultColor=true) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a51bf1c1645850931042d9dc95ccd537b</anchor>
      <arglist>(double _mass) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSphere</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a1c9afbef5b42181cba134fa03f476a70</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeVolume</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a4620525da6ced54c47bb487de208e1b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mSize</name>
      <anchorfile>db/da3/classdart_1_1dynamics_1_1EllipsoidShape.html</anchorfile>
      <anchor>a813941bdbdc4436c1de7294fd52f5c5d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Support</name>
    <filename>d9/d4f/classdart_1_1dynamics_1_1Support.html</filename>
    <member kind="function">
      <type></type>
      <name>Support</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>a69b27bd3dc6dce84127bb3ca67fd44b7</anchor>
      <arglist>(EndEffector *_ee)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeometry</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>ac8446e7b2ebf4392d7c48297db98f87a</anchor>
      <arglist>(const math::SupportGeometry &amp;_newSupport)</arglist>
    </member>
    <member kind="function">
      <type>const math::SupportGeometry &amp;</type>
      <name>getGeometry</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>aef735a3564f29ca4f259115ab197a38d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActive</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>aaf6b770c600c0aa4e0612a51802672fb</anchor>
      <arglist>(bool _supporting=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>a57e9aea95d363afa7ceb35a525bfa0ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::SupportGeometry</type>
      <name>mGeometry</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>a6f6a9462eefcd2f1fcb15c26483897f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mActive</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>a30db5198ef97709bcc4507bc202eaa82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EndEffector *</type>
      <name>mEndEffector</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1Support.html</anchorfile>
      <anchor>a3c3160d412d8216f3952bffafb847017</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::EndEffector</name>
    <filename>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</filename>
    <base>dart::dynamics::FixedFrame</base>
    <base>dart::dynamics::AccessoryNode</base>
    <base>TemplatedJacobianNode&lt; EndEffector &gt;</base>
    <class kind="struct">dart::dynamics::EndEffector::Properties</class>
    <class kind="struct">dart::dynamics::EndEffector::UniqueProperties</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EndEffector</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>acac5b2ccc66a41a7c1c5cdc0635715bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a849de0f6c00e72700710f429934ee732</anchor>
      <arglist>(const Properties &amp;_properties, bool _useNow=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a6acc2399f0fbbab7d8c5edde682edbc5</anchor>
      <arglist>(const UniqueProperties &amp;_properties, bool _useNow=true)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getEndEffectorProperties</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a5c0681c332f07f32462a023baa9355d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>af89d4f498d4bebcdadb3ddd6e2f54d95</anchor>
      <arglist>(const EndEffector &amp;_otherEndEffector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>acedae02a8f5cf0839e9fc03eb3c5852f</anchor>
      <arglist>(const EndEffector *_otherEndEffector)</arglist>
    </member>
    <member kind="function">
      <type>EndEffector &amp;</type>
      <name>operator=</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>aeaf7419486e996ee378c5f1e3ebf2c36</anchor>
      <arglist>(const EndEffector &amp;_otherEndEffector)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a74da783d5525ce930b4b877fd0229f04</anchor>
      <arglist>(const std::string &amp;_name) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeTransform</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>afb2cd547a243f3c6b19956e2b8dbfa25</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_newRelativeTf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultRelativeTransform</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a75133a3451c5b37a6d59ff6e129cf94d</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_newDefaultTf, bool _useNow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetRelativeTransform</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a710f8c7f7bd913d242144f96b4f42f43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Support *</type>
      <name>getSupport</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a650714d20fb17f7db460081ddd96312d</anchor>
      <arglist>(bool _createIfNull=false)</arglist>
    </member>
    <member kind="function">
      <type>const Support *</type>
      <name>getSupport</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a1d4457ab561358562cbbdc4c999805b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Support *</type>
      <name>createSupport</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>ad80929775dec5cbcbd64dd530bc48fc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseSupport</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a88629c08026623cc27336d96a3e332ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Skeleton &gt;</type>
      <name>getSkeleton</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>ad8cfb3df042d2b5dd34b8981326887db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const Skeleton &gt;</type>
      <name>getSkeleton</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>ae4dbbb82702ca64abc9147a86cd6189c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dependsOn</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>ac1e0d54604f52bcf3800968a4fce7ec0</anchor>
      <arglist>(size_t _genCoordIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumDependentGenCoords</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a0d0c01030436002bcb8f214d58833613</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getDependentGenCoordIndex</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a9ceb67afd42a4eeee29a4e04eecaf854</anchor>
      <arglist>(size_t _arrayIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; size_t &gt; &amp;</type>
      <name>getDependentGenCoordIndices</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>ace4d9bf0d85f83cffbcefdf4c4e2215e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumDependentDofs</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a0d52d883f31950a597c15e4cad280a61</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDependentDof</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>ac47d2c664f318026e008e982165c23fb</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDependentDof</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>aaeade87c5fe695ee972326341b4a4730</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; DegreeOfFreedom * &gt; &amp;</type>
      <name>getDependentDofs</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>afd52a163b67e7bdcdbc019a702c028c3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const DegreeOfFreedom * &gt; &amp;</type>
      <name>getDependentDofs</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>aebffd82cecfe0fa8187ccd4e3fc4081a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>getChainDofs</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>af24d5f1893b8329984b5f25906a7437c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getParentBodyNode</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a80790996ecee593c58a930446da4acba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getParentBodyNode</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>aa6126e4ecdaa8052bc990461c8928731</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a4e6ccdcac2a2d2be06bfb941fd230cc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getTreeIndex</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a7dbd19e297d4f62db0d56263f1187610</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getJacobian</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>ada25581b2c5ee3012bbc79a074d56b73</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getWorldJacobian</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>afeb9dc1ebdcc825feef6b1d0bc43cb8d</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>abae8da06ef5b351d2fac6263609c3843</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>ad973c974c0aced185c5d3a17f75679fe</anchor>
      <arglist>() const overridefinal</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FixedFrame</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>aacf3e5bf1abc2343c14668f9c96b4ebb</anchor>
      <arglist>(Frame *_refFrame, const std::string &amp;_name, const Eigen::Isometry3d &amp;_relativeTransform=Eigen::Isometry3d::Identity())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FixedFrame</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>a284ba1e6fc1ebb1c030d9e56ae95d91d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getRelativeTransform</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>afa03e240c1736ab12e5f973fb0a8bf6b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialVelocity</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>af09781f381e76aec84b366962024b498</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialAcceleration</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>a97c75d000b50df45ce15a48a808c9656</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getPrimaryRelativeAcceleration</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>a63bfc40e3dba66cfa564d1d114843d63</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getPartialAcceleration</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>adff2e94ec30251f5c8d8e59842a46e0f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyAccelerationUpdate</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>afbaa31c92bfa9c4b6048a6c570818182</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AccessoryNode</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>aaaefa338164bfb34dd222d6de1d5ab91</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>a2f962c729cbdc6040809125fd558ebdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reattach</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>a43fce4fd79eb7eb81d62a063f9c50e8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a8fd81cc04ada6b02ed7c4842fc30f7f8</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a531b80f05b016b0915a4f5e7603ec927</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>afb371c7e47a231166aca6461d7d381eb</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>af3652e978abed8aa00a5b8e614757ac0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ac89ab3e414a897d2b4920b02b06956ee</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a81a6b3668f4b4fd634fd09e8d2fbf06b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>aabb89db808e85b02daf5139e2bcfd819</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a700632cc2ff39a87c2d6e065f2c0084c</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a0d95daa11cd05b002167aa73837b7ba4</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a9b524b02e9c31a3465f7959470c00524</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ab733691474b95a7dbec5e31dca1f6b35</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a80d6ff9dc602068fc0cfd539ecd60c21</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ab1510f2aa590dfb41eebd761d242792e</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>acf274904bcec4c31e5f9e498ac3263ea</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>af57f99782db722f589751f88e1065d6b</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BodyNode</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>ab59408dd3d4e7a025ca332d546a5688b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mEndEffectorP</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>aaf907784a12ee75282228b9358da8e6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mIndexInSkeleton</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a18675dd9d0e25e4a6b49e6669d4067ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mIndexInBodyNode</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a8383a987036d345d80b17f449e0b02bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; Support &gt;</type>
      <name>mSupport</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>abdfa1edc058c22fc785f4003974188ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mEffectorJacobian</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>aa8333d31ad8cbb25a4346a80bb34fcd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mWorldJacobian</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a13175151c07bf501ef337ae2d661718e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mEffectorJacobianSpatialDeriv</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a5c28340d432fab0ff7a57f87fed94c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mWorldJacobianClassicDeriv</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>af242f6be925e42f4dae573857be1e478</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyTransformUpdate</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a47ec0e1eb69ceb89fd2042902061bc2b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyVelocityUpdate</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a2ba271e99517658404d40522a62099bf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EndEffector</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>abc5a703d12f3b4229e6ceba4ab07af21</anchor>
      <arglist>(BodyNode *_parent, const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual EndEffector *</type>
      <name>clone</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a1fea336aa43b2fb8a9da27e85d6cbcc1</anchor>
      <arglist>(BodyNode *_parent) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateEffectorJacobian</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a8265ca00fd04f8093c827cd38278bae6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateWorldJacobian</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>af148c6cadb68c2b7819ee1b00687a4db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateEffectorJacobianSpatialDeriv</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a944b795d1f0e76db5de35dbad468a00e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateWorldJacobianClassicDeriv</name>
      <anchorfile>db/d3c/classdart_1_1dynamics_1_1EndEffector.html</anchorfile>
      <anchor>a66c97c2e7923f760e416c9e477bd413c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>processNewEntity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a2f08842b9f2d57889c9f5add7f3a30f6</anchor>
      <arglist>(Entity *_newChildEntity)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>processRemovedEntity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a682ad78a596a6b23a4f039bd5b9213c4</anchor>
      <arglist>(Entity *_oldChildEntity)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AccessoryNode</name>
      <anchorfile>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</anchorfile>
      <anchor>aa5d34583ad73ab59db688e578a60a1c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TemplatedJacobianNode</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ac2851d8aced93ce6c279d9ef520c99fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Isometry3d</type>
      <name>mRelativeTf</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>aba8bb423a886f58b11db059af25aabfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const Eigen::Vector6d</type>
      <name>mZero</name>
      <anchorfile>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</anchorfile>
      <anchor>a8a04b423055016a8b4e89a5f31b07d07</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::EndEffector::Properties</name>
    <filename>d2/d60/structdart_1_1dynamics_1_1EndEffector_1_1Properties.html</filename>
    <base>dart::dynamics::Entity::Properties</base>
    <base>dart::dynamics::EndEffector::UniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d2/d60/structdart_1_1dynamics_1_1EndEffector_1_1Properties.html</anchorfile>
      <anchor>ac45c62421532c55bc901af6aee2f86b4</anchor>
      <arglist>(const Entity::Properties &amp;_entityProperties=Entity::Properties(), const UniqueProperties &amp;_effectorProperties=UniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>d8/d61/structdart_1_1dynamics_1_1Entity_1_1Properties.html</anchorfile>
      <anchor>a7a24b622b2394139b520ced56b0d19c0</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d8/de9/structdart_1_1dynamics_1_1EndEffector_1_1UniqueProperties.html</anchorfile>
      <anchor>abbc7c22a05a0a9f33c6cd0fb86b452ab</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_defaultTransform=Eigen::Isometry3d::Identity(), const math::SupportGeometry &amp;_supportGeometry=math::SupportGeometry(), bool _supporting=false)</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Isometry3d</type>
      <name>mDefaultTransform</name>
      <anchorfile>d8/de9/structdart_1_1dynamics_1_1EndEffector_1_1UniqueProperties.html</anchorfile>
      <anchor>a60ebc6632f3a388d6a2a78331cc3db11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::EndEffector::UniqueProperties</name>
    <filename>d8/de9/structdart_1_1dynamics_1_1EndEffector_1_1UniqueProperties.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Entity</name>
    <filename>d7/d42/classdart_1_1dynamics_1_1Entity.html</filename>
    <base virtualness="virtual">dart::common::Subject</base>
    <class kind="struct">dart::dynamics::Entity::Properties</class>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aa33107c44376136b415fab0fbd918810</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aaad025a3526a6ccc0fcabd96187c82a0</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, const Eigen::Vector4d &amp;_color=Eigen::Vector4d::Ones(), bool _useDefaultColor=true, int _depth=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyTransformUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ab67377987c332b0e8158b16ed204ea1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyVelocityUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>ab116df52d83cb7b6edc3b3f9b1bc96ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyAccelerationUpdate</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a618443c8bad16c985f432897381396cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>changeParentFrame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a65d524a41527aa134b586405f2a0f5e6</anchor>
      <arglist>(Frame *_newParentFrame)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Frame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>aee3a66b0ddf3b769f015c89b610db0c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const bool</type>
      <name>mAmQuiet</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a4169c654d2a5e50d95b22922379f88dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mAmFrame</name>
      <anchorfile>d7/d42/classdart_1_1dynamics_1_1Entity.html</anchorfile>
      <anchor>a1b1ed11d66b4113ebd8577927c3766f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Entity::Properties</name>
    <filename>d8/d61/structdart_1_1dynamics_1_1Entity_1_1Properties.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Detachable</name>
    <filename>df/dc4/classdart_1_1dynamics_1_1Detachable.html</filename>
    <base virtualness="virtual">dart::dynamics::Entity</base>
    <member kind="function">
      <type></type>
      <name>Detachable</name>
      <anchorfile>df/dc4/classdart_1_1dynamics_1_1Detachable.html</anchorfile>
      <anchor>a2505a534150e858955e85cacc64d9ba9</anchor>
      <arglist>(Frame *_refFrame, const std::string &amp;_name, bool _quiet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParentFrame</name>
      <anchorfile>df/dc4/classdart_1_1dynamics_1_1Detachable.html</anchorfile>
      <anchor>affcdfa10f62780eaf14ba3db2b5515fe</anchor>
      <arglist>(Frame *_newParentFrame)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Detachable</name>
      <anchorfile>df/dc4/classdart_1_1dynamics_1_1Detachable.html</anchorfile>
      <anchor>af4e32415b5ad3ee4a9b0f37035ce04e8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::EulerJoint</name>
    <filename>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</filename>
    <base>MultiDofJoint&lt; 3 &gt;</base>
    <class kind="struct">dart::dynamics::EulerJoint::Properties</class>
    <class kind="struct">dart::dynamics::EulerJoint::UniqueProperties</class>
    <member kind="enumeration">
      <type></type>
      <name>AxisOrder</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a3c88256f004b0adc4f3a11c5a248f0c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AO_ZYX</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a3c88256f004b0adc4f3a11c5a248f0c1ae7b17b4af226cea4128e4e18785cc8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AO_XYZ</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a3c88256f004b0adc4f3a11c5a248f0c1af86e7f51eaa50f51d6762670b42e5dce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EulerJoint</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a94113290cb25aedaf61fcc46fa7ad696</anchor>
      <arglist>(const EulerJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EulerJoint</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a456f60d529d88aac13968f8dc95b2357</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a6f03535f34741a25aa5327be6dcf6944</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a040f7cb051422f3d2e1ed846470a2ae4</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getEulerJointProperties</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a4a45578f7093db57ecf61a8f57a5ccb0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a341a430b6121c2155a5f11d80a52421f</anchor>
      <arglist>(const EulerJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>ac6a40a2d76dcd46582457cdd6cb6c0c1</anchor>
      <arglist>(const EulerJoint *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>EulerJoint &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a945d7140cf6d288020afc5452c646acb</anchor>
      <arglist>(const EulerJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>ad698007390db695fc26d903c77a2a902</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCyclic</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a99d63c0cc5f9802531c4b9903edd61f1</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxisOrder</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a2947580ce65af2df1f25e19f99a85b14</anchor>
      <arglist>(AxisOrder _order, bool _renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>AxisOrder</type>
      <name>getAxisOrder</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a0608b7cc9cabf06b70907db8650a7c1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>convertToPositions</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a0090f556ea1a9fbdc3ef8d39f770117c</anchor>
      <arglist>(const RotationType &amp;_rotation) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>convertToTransform</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a5c2d930352ecc038a132d3ce21122609</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>convertToRotation</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>af3930c7824b306b9705163c45f8d2a95</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 6, 3 &gt;</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a223297fc4c7eb4111609ebc45a8c353b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integratePositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ac700e98c99b1ade0cbf63ab77174a0d7</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>ae423cfb40e991d4be0baf0a69ddde9d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Vector3d</type>
      <name>convertToPositions</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a0a5008be5732260123f42aabc7da805d</anchor>
      <arglist>(const RotationType &amp;_rotation, AxisOrder _ordering)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Isometry3d</type>
      <name>convertToTransform</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a8ddb8237e4e93414046e56089cedc04c</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions, AxisOrder _ordering)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Matrix3d</type>
      <name>convertToRotation</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a9aaaef407195f5388136348fef381899</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions, AxisOrder _ordering)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EulerJoint</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>aa531657830ead22ce03c6b453d7be992</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Joint *</type>
      <name>clone</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>ad0f4af3e0ccb333ab0eab97c9f3e4884</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a9de1af7d61192a90f3987f27a03ca9d0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalTransform</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>af24329ef13073dae65e4769a0eb6f70f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobian</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a42a8233eae871eeb905a8011c95ea30c</anchor>
      <arglist>(bool=true) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobianTimeDeriv</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>ad15f0b4588bbb97151251bec4e14b0f7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mEulerP</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a6ac9e2e180eafb3e169eaac3cde3af80</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d2/d87/classdart_1_1dynamics_1_1EulerJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::EulerJoint::Properties</name>
    <filename>df/de0/structdart_1_1dynamics_1_1EulerJoint_1_1Properties.html</filename>
    <base>dart::dynamics::MultiDofJoint::Properties</base>
    <base>dart::dynamics::EulerJoint::UniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>df/de0/structdart_1_1dynamics_1_1EulerJoint_1_1Properties.html</anchorfile>
      <anchor>a54fdc7e8edd3cadae2ea87791f782001</anchor>
      <arglist>(const MultiDofJoint&lt; 3 &gt;::Properties &amp;_multiDofProperties=MultiDofJoint&lt; 3 &gt;::Properties(), const EulerJoint::UniqueProperties &amp;_eulerJointProperties=EulerJoint::UniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>df/de0/structdart_1_1dynamics_1_1EulerJoint_1_1Properties.html</anchorfile>
      <anchor>a95bb06e3d3e570ab905951d091047ee8</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d0/dcc/structdart_1_1dynamics_1_1EulerJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a9d08746ddf42605e2f1fabb510c151ac</anchor>
      <arglist>(AxisOrder _axisOrder=AO_XYZ)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniqueProperties</name>
      <anchorfile>d0/dcc/structdart_1_1dynamics_1_1EulerJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a213d8b2bc286baffc805249b79c7dc44</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>AxisOrder</type>
      <name>mAxisOrder</name>
      <anchorfile>d0/dcc/structdart_1_1dynamics_1_1EulerJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a7dde82365219cecc1c682d17a4419e30</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::EulerJoint::UniqueProperties</name>
    <filename>d0/dcc/structdart_1_1dynamics_1_1EulerJoint_1_1UniqueProperties.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::FixedFrame</name>
    <filename>d8/d17/classdart_1_1dynamics_1_1FixedFrame.html</filename>
    <base virtualness="virtual">dart::dynamics::Frame</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyTransformUpdate</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ae18d442162b1e7dd1cd55c2502e40c5c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyVelocityUpdate</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a85f57d1939e626446070be1d1ce09221</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Frame</name>
    <filename>db/d38/classdart_1_1dynamics_1_1Frame.html</filename>
    <base virtualness="virtual">dart::dynamics::Entity</base>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::Isometry3d &amp;</type>
      <name>getRelativeTransform</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>af3cdd8f9baaf0941f202fd38573cb1bc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialVelocity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a56266fc322dc4915f762c1347aeee6a3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ae6a85312c5dbfba5c78b18e89fa2519d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::Vector6d &amp;</type>
      <name>getPrimaryRelativeAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a79abd92e6bef6efb58ffae4b2988a72f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::Vector6d &amp;</type>
      <name>getPartialAcceleration</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a2f0f4068238a39f6aff37428d5e42378</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="enumeration" protection="private">
      <type></type>
      <name>ConstructWorld_t</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ae6f548bcdbdb5ec26df7de116fd2cf1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <type>@</type>
      <name>ConstructWorld</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>ae6f548bcdbdb5ec26df7de116fd2cf1fa0f22a2cb742313a96324231a4a1eeedd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Frame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a62c24d853255cfa765652f6cbcb80d53</anchor>
      <arglist>(ConstructWorld_t)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const bool</type>
      <name>mAmWorld</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a3bd1e48a1fcdd3ad084f89a3e33fdd1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Entity</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a614439ccac0344926adc4c0165d64060</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>WorldFrame</name>
      <anchorfile>db/d38/classdart_1_1dynamics_1_1Frame.html</anchorfile>
      <anchor>a289ce3131b796e0e3ec34d284249cdaa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::WorldFrame</name>
    <filename>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</filename>
    <base>dart::dynamics::Frame</base>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getRelativeTransform</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>a0db4293698b656813be113a5bf437fd3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialVelocity</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>a1233f8ca9c21152611c812236ba228d9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialAcceleration</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>a416ac3582402af15cedffd7b117a5f4c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getPrimaryRelativeAcceleration</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>a5c76e5f379768a4c0e46af3f71b82bac</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getPartialAcceleration</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>a29c7aba6a1a8600602e1133adf55b1e2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>WorldFrame</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>af8c9a39291f05c38178a89f9960338da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Eigen::Isometry3d</type>
      <name>mRelativeTf</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>a0d59244f1dea78fc0aa99e718657fcd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const Eigen::Vector6d</type>
      <name>mZero</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>a944be965ab58d08a5394fdf99299ce1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Frame</name>
      <anchorfile>d0/df8/classdart_1_1dynamics_1_1WorldFrame.html</anchorfile>
      <anchor>aee3a66b0ddf3b769f015c89b610db0c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::FreeJoint</name>
    <filename>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</filename>
    <base>MultiDofJoint&lt; 6 &gt;</base>
    <class kind="struct">dart::dynamics::FreeJoint::Properties</class>
    <member kind="function">
      <type></type>
      <name>FreeJoint</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a204d737140fec81f4303615493813af0</anchor>
      <arglist>(const FreeJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FreeJoint</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>aee51e1b0ccf3ea427243dafbbe9e7c78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getFreeJointProperties</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a126ae930237b0fca29c3ca9ff26dc4b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>ab034fe5326085db41d5bc37777762b67</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCyclic</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>ae09c3ea0d1f3c727974b911da5f155cb</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpatialMotion</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a668a2489360d6b3dca86e53b6740d577</anchor>
      <arglist>(const Eigen::Isometry3d *newTransform, const Frame *withRespectTo, const Eigen::Vector6d *newSpatialVelocity, const Frame *velRelativeTo, const Frame *velInCoordinatesOf, const Eigen::Vector6d *newSpatialAcceleration, const Frame *accRelativeTo, const Frame *accInCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeTransform</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a01ffce4b0e965bf33256390b57369913</anchor>
      <arglist>(const Eigen::Isometry3d &amp;newTransform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransform</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>ab9e0af27b7fd844a9850b774cf71b0b9</anchor>
      <arglist>(const Eigen::Isometry3d &amp;newTransform, const Frame *withRespectTo=Frame::World())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialVelocity</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a5fbeb4648f6c9c05eeba7ac8fb82fcab</anchor>
      <arglist>(const Eigen::Vector6d &amp;newSpatialVelocity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialVelocity</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a0a5d92ba58b461cbbe26ab04799afac0</anchor>
      <arglist>(const Eigen::Vector6d &amp;newSpatialVelocity, const Frame *inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpatialVelocity</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>af4316321021c5e71bec1f7394a699015</anchor>
      <arglist>(const Eigen::Vector6d &amp;newSpatialVelocity, const Frame *relativeTo, const Frame *inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearVelocity</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a5fc60f9aa03a6c9ee8e99ccfe5990eac</anchor>
      <arglist>(const Eigen::Vector3d &amp;newLinearVelocity, const Frame *relativeTo=Frame::World(), const Frame *inCoordinatesOf=Frame::World())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAngularVelocity</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>ab8d563588f1324da299e17830bcaa6eb</anchor>
      <arglist>(const Eigen::Vector3d &amp;newAngularVelocity, const Frame *relativeTo=Frame::World(), const Frame *inCoordinatesOf=Frame::World())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialAcceleration</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a6132a8389a3b702d34215ac653bdd79a</anchor>
      <arglist>(const Eigen::Vector6d &amp;newSpatialAcceleration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialAcceleration</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>aeff18da2935b23ea99bdfd869a90f7b7</anchor>
      <arglist>(const Eigen::Vector6d &amp;newSpatialAcceleration, const Frame *inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpatialAcceleration</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a8fdbf7e13ec32821d5dbef6d06acbdfc</anchor>
      <arglist>(const Eigen::Vector6d &amp;newSpatialAcceleration, const Frame *relativeTo, const Frame *inCoordinatesOf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearAcceleration</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a22fda685c3c4a053886f5b00d524d44b</anchor>
      <arglist>(const Eigen::Vector3d &amp;newLinearAcceleration, const Frame *relativeTo=Frame::World(), const Frame *inCoordinatesOf=Frame::World())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAngularAcceleration</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a6a54226dfc42516d401594601eb97c89</anchor>
      <arglist>(const Eigen::Vector3d &amp;newAngularAcceleration, const Frame *relativeTo=Frame::World(), const Frame *inCoordinatesOf=Frame::World())</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix6d</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a2439e09bd0942a8516bdcf6726a0e8b5</anchor>
      <arglist>(const Eigen::Vector6d &amp;_positions) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getPositionDifferencesStatic</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a0c70b3e9b5194fad2f52051073d0df12</anchor>
      <arglist>(const Eigen::Vector6d &amp;_q2, const Eigen::Vector6d &amp;_q1) const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiDofJoint</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af626d0306f74cd951e031101a065214a</anchor>
      <arglist>(const MultiDofJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiDofJoint</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af6a9dbc1d32bc19282dd2d784d6b6a09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a299a4e22dac4533d9ce2b70724f1915a</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>abd96574381a94874d9e84296cf7449f1</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getMultiDofJointProperties</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a3a9870bdfc370aa7326c759e462979f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab590e4cb52f518b1f2e7bcd10280d13c</anchor>
      <arglist>(const MultiDofJoint&lt; DOF &gt; &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>abbafd3e163f18addef1de282091c7d48</anchor>
      <arglist>(const MultiDofJoint&lt; DOF &gt; *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>MultiDofJoint&lt; DOF &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a42eb718b902a70d65c35ad83fd737602</anchor>
      <arglist>(const MultiDofJoint&lt; DOF &gt; &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a121f549c73c7463665ba5acb94f327b6</anchor>
      <arglist>(size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a56d39570b2bb0bfbb2515f8e30542923</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumDofs</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a43a55801341a1ecdb127aaff1b78676b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setDofName</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adb967d0bd025a7022346e226f33a7142</anchor>
      <arglist>(size_t _index, const std::string &amp;_name, bool _preserveName=true) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preserveDofName</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a234cca59d9673ae5f28512fd7279693a</anchor>
      <arglist>(size_t _index, bool _preserve) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDofNamePreserved</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8ac283f8f50690cee8a8b584cfa05bbe</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDofName</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2a516155574e94f8a72008e68b1ef2a4</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aa17ed0219109c8ae2431a6e5739d9244</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a179161b249126cbb2043c48fddb393f9</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCommand</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a727996b761aad451731ddebb81a50944</anchor>
      <arglist>(size_t _index, double _command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getCommand</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8bfa2493feb1a3ed13c5c5bc062c6ba1</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7a9d49697439f840a757c7287c3c4859</anchor>
      <arglist>(const Eigen::VectorXd &amp;_commands) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab9d418428de330f652228f267be8dfaf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aab84af08eade0cf0eee6815be8f93217</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a08f0c0c5d64b94ee71de186198b023cb</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab47e064e7551d7f66730642db1fbd40d</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7f1517584abd1d7284d6d190ea734743</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>add02dcf2d93b654d041d0de03f9e6a58</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2e25654883ffff27907744175f76fddf</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afc54796a247eb78d6e76845f5cdc4669</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0d4f3e8a4672b054f1fad9c830526ac9</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a80d2c51a235f7241c645fca5a42affdd</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a448bfb5fe02ffeb564d24b09afc7d1b7</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a074314a5fc9e7e217e5c0d0550409d29</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adc933b3962a5802395350ce3c75c2d34</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a11f6e67224ddcc930524ed0b8730e8fd</anchor>
      <arglist>(size_t _index, double _initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4262578db4f2978f17f351c2f51de7df</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a83944e598a597dd3b19abeb7adec3929</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>addd227452dd8a5e65add41c1756262cb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a67d9e136e29cbe61b5098b15e4430212</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aca5afc185be722fe5c30eee9447f0770</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>acaa6d8794f1639a8ad5d3e3229251aef</anchor>
      <arglist>(const Eigen::VectorXd &amp;_velocities) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab81c6cedf1f85bc30bed3cf505748823</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a22780c2deaa80cabda5908cd35c6afb8</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a82d366feb9087830f85bf23099e7777d</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a561d74b2f5db70355aec1481a59995e0</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afd4b8551b8a6ef9e05e1914824530340</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>acb6f7ab189ffab40dfcba01331d0329b</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af4f53e6fbf34ad1a6fffb9ea6a687f60</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a959d2e8f15b30fd4498e53cfb00ec8e1</anchor>
      <arglist>(size_t _index, double _initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6c4f2e641f513bffdcf1c1cace017928</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2817ed658653a05b99533ba6f7a03dde</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a34c8c9aabd08674a66a87ea6c37ccc7c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a5c387d73f3004daf5693693f1f2b9ff2</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad6902d9231cfa45897f2fca00cf08156</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a399d191ca1e5256cec2ba323f0c2d177</anchor>
      <arglist>(const Eigen::VectorXd &amp;_accelerations) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a90680f6bc529b710bfcdd311cb5fe665</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a63a40d8664532662f0a3a2345d0edb13</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7f4d9de0294c7d6302ca8c2ef1d8e34d</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0dae14fe97df9b494565026b3f5fac14</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6116417594649d5db6cd5a06055aed55</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a07a49215410387408e9936688622fdf6</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6fad871fcd744ecddb2323e7a794a563</anchor>
      <arglist>(const Vector &amp;_positions)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getPositionsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4a3470038964cfe8184a6ba728412548</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocitiesStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ae7aa931fd1bf727daafb2651e376e384</anchor>
      <arglist>(const Vector &amp;_velocities)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getVelocitiesStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6d6c4264b76dadab5e323b596d9d7f78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2daf7ae406e645b3d48234c2634b5eb4</anchor>
      <arglist>(const Vector &amp;_accels)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getAccelerationsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a680528ecb078201e4ec2e37f8d492729</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afbf6552d9c8b3964979b678c883e24d0</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a79e3c4d16c1e3ce1d1aa64b0d9a3b807</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a520cce075a9b7095f7f23e244bf6f31d</anchor>
      <arglist>(const Eigen::VectorXd &amp;_forces) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7d94197af44eab04f5402d109ddd7498</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0abdaffd27d50ce6c3710bf04ca5604c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a19155cb2e4a2ea0aa476af158cd46f20</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a944337a16109d0bd86682581ce386be2</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af88cda0e5f201c5ff1b13367175a96f9</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7c08e0a4de4cd813019cb21588e57096</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVelocityChange</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a478d5beb8cc51000a02ade8d54da13e0</anchor>
      <arglist>(size_t _index, double _velocityChange) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getVelocityChange</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad2b3ac4079775bde2b713da6f1f9408c</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adedbdef5f59e76d7591d312c33a24582</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a61653481cfbbe0967f3a80c4f8114d00</anchor>
      <arglist>(size_t _index, double _impulse) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a567d1bb04d2fbe5632da52b434d78f30</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ac7c3c20f9fd5c769ca51ad7cde7de99b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integrateVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8db24e20a58ae3945c98c4680693d04e</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a9f942a4aea8a3cd9376930fdc4d7f749</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q2, const Eigen::VectorXd &amp;_q1) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Matrix&lt; double, DOF, 1 &gt;</type>
      <name>getPositionDifferencesStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a3e10c4cebae8d8112554897fe9123926</anchor>
      <arglist>(const Vector &amp;_q2, const Vector &amp;_q1) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPotentialEnergy</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aa733b6e36f54bedfe297feb5e5275b0d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Vector6d</type>
      <name>getBodyConstraintWrench</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a141165d9d4794cf922e965d101f6571d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSpringStiffness</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a69a802fa145ed4331a856e069bab8c7f</anchor>
      <arglist>(size_t _index, double _k) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSpringStiffness</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a90af83b809eebf98ae7e185243ef6436</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRestPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4f7bc7e0d5c10e324969c7df101bde77</anchor>
      <arglist>(size_t _index, double _q0) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRestPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2b4555bdb9b5e46bcf9b766a292d6f94</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a466ff4b4e4260b2637f7bf8a4c69f354</anchor>
      <arglist>(size_t _index, double _d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aa597a7c4a2b5f00f73ad2200424d1ee8</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCoulombFriction</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af05accc9d0a1f386badb06f3756776e8</anchor>
      <arglist>(size_t _index, double _friction) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getCoulombFriction</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a5a9bbe735bb3a3c68b92322c5e979eec</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a451786dabe667bed168310e78c3a35af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Vector6d</type>
      <name>convertToPositions</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>acc7a438182cba8bc736dc83ca9df3e6f</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_tf)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::Isometry3d</type>
      <name>convertToTransform</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>acb4ab7d8fec8da1295ac0e9422761e0c</anchor>
      <arglist>(const Eigen::Vector6d &amp;_positions)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTransform</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>ab870c5dc84953c39c3cd5a39bb49f34d</anchor>
      <arglist>(Joint *joint, const Eigen::Isometry3d &amp;tf, const Frame *withRespectTo=Frame::World())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTransform</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a02089cc6bd6d2cecade8c8eb3bd2ef2f</anchor>
      <arglist>(BodyNode *bodyNode, const Eigen::Isometry3d &amp;tf, const Frame *withRespectTo=Frame::World())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTransform</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a61a15d70bd2413d42a15178b7cef0d22</anchor>
      <arglist>(Skeleton *skeleton, const Eigen::Isometry3d &amp;tf, const Frame *withRespectTo=Frame::World(), bool applyToAllRootBodies=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>FreeJoint</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a39f309cc3a37af0de8f6ca516796eaf7</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Joint *</type>
      <name>clone</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>aa3dbffdac0691038ac19af3bfa1137ce</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>integratePositions</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>aa12efb5db61fa61cdf8ec37571ae7e50</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a2c1bca9df00481db2000d87567bb0a3e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalTransform</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>ae519ce4699c59f8294d541a14a493c7f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalJacobian</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>ae5f35f5e822fa6928ac6655d8e01e7e9</anchor>
      <arglist>(bool _mandatory=true) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalJacobianTimeDeriv</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a78f5b937fbacad843bf24d98970b217c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getQ</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a91ed82b4f0aad5ab84f076c26a35b60a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MultiDofJoint</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aebce84f6be7a9725f43ff57816acfc71</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerDofs</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aeaa5491853b61e017037841989f4de83</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvMassMatrix</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4c5ffb2c7f73817abe9d584053eefe51</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvAugMassMatrix</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aed2b4924d7542a7ed69201ef94eea591</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForceForInvMassMatrix</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adf534f80e0cb806c8e52b07f6a6e12d6</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvMassMatrixSegment</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a21056e75791130fdce115cdd6c33a8ea</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvAugMassMatrixSegment</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0184659838e653f452447e50ddcdd306</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addInvMassMatrixSegmentTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aceea69dfce5684e82ff689b2bbc63782</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>getSpatialToGeneralized</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a69407379e7f265fab6e775201aeb8f13</anchor>
      <arglist>(const Eigen::Vector6d &amp;_spatial) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>acc2eec4a251207980ec8c328eb2527eb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a954a8a6b0d4dc82387566682e60cc7ff</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, 6, DOF &gt; &amp;</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab98130f46f0278228203c7e57189ead1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Eigen::Matrix&lt; double, 6, DOF &gt;</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ae69cc19c7389d7fa2707cbe44bfd1c34</anchor>
      <arglist>(const Eigen::Matrix&lt; double, DOF, 1 &gt; &amp;_positions) const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const math::Jacobian</type>
      <name>getLocalJacobianTimeDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab1d663aabcaeefb4af8999f814104dd8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, 6, DOF &gt; &amp;</type>
      <name>getLocalJacobianTimeDerivStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a58c6a50be34213d3d0b41b97d0e390a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, DOF, DOF &gt; &amp;</type>
      <name>getInvProjArtInertia</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a528d2b4dda452b480f37caeae48d13ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, DOF, DOF &gt; &amp;</type>
      <name>getInvProjArtInertiaImplicit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a75ee9b5c626bd4b1c6d7d682aad5642b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalSpatialVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a59b84b398e739afcdc7af4a463671542</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalSpatialAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>abb9e1037840164e8a504a9525e8f9c93</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalPrimaryAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6f1602aee14aa6da2fa20b0f5468fc07</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a695b7ca508d75c0ec05a6f44193a0d32</anchor>
      <arglist>(Eigen::Vector6d &amp;_vel) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPartialAccelerationTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a38538782270de20a7719bef4cce0941f</anchor>
      <arglist>(Eigen::Vector6d &amp;_partialAcceleration, const Eigen::Vector6d &amp;_childVelocity) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addAccelerationTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0c67ba1920904739f256c2ffc5c36edc</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addVelocityChangeTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7131af687c5441f5367f6509af59fac3</anchor>
      <arglist>(Eigen::Vector6d &amp;_velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addChildArtInertiaTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a21333ff1ff5616ed9b2cf5c4c8630dd8</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaImplicitTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab04f3cfd4ed528821b3c824f0e8f2246</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertia</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a1106a8dac228592b4179cf3e6a893c27</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad28d890eb2ef95bcb712da59c209b61f</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4d7cbeb67047ed72a7dc451f2f6de4a2</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce, const Eigen::Vector6d &amp;_childPartialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasImpulseTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a43065522936c0ff17261943bb07939de</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasImpulse, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a54a29f386653b06973ef62080cac2ba0</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad7bdb6946f0f4ba5df2abad1cf5f0b5b</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetTotalImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a58230b7b40ab0ad4c7e7c4fe773cb27b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a59bde4536c6423d0119b8765aac3db01</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocityChange</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afca2a5aa43a036e09f77aa76e84fa494</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateForceID</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad9029a773828ec608ab87d488b3218f6</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateForceFD</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8852308c120e782aeee0644afbc11d53</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateImpulseID</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a1e188f117097d459c1ed1d18f005a19e</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateImpulseFD</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a9f455f7297554c35d02ee7836d38689b</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0c67477f166553f29bf6eb039fd40332</anchor>
      <arglist>(double _timeStep) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Isometry3d</type>
      <name>mQ</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>ad78aafd9c3250d3df8e9342198fbbf7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MultiDofJoint&lt; DOF &gt;::UniqueProperties</type>
      <name>mMultiDofP</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af26673521ed4c68536c0aa17bbd38616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::array&lt; DegreeOfFreedom *, DOF &gt;</type>
      <name>mDofs</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0295360af9292b9413f7711a800f1650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a47310e00f6bafa84e892c2a6de7d1078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a67686193eb1f3a00406c6964051baf19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mPositionDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad4b863b741157b8d6a0c4c272e2c63fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ae3514a550010fdb8247277d1e483aa7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocitiesDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a205518d1d940bd7a58da3c4797dcd976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a1914d76f4a10a70cb769cfb078e6e761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mAccelerationsDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a24897f6727c7e9b94b1b180712ba3354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a05eb3dd0d1a6babd1b64e0b32a87b52f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mForcesDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adff503ec796639073c6e89c9aaeb8c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocityChanges</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a175dc6b707e8768cceef85b9c25cf8a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a53e7b885ab3872ef75077d43c2098546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mConstraintImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7767c5503325a2797dcd818a898c9059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, 6, DOF &gt;</type>
      <name>mJacobian</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a35d34745d97230e6cd88e56603df41f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, 6, DOF &gt;</type>
      <name>mJacobianDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a949b3d7c16f880871b2a304e50e1b812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, DOF, DOF &gt;</type>
      <name>mInvProjArtInertia</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a40e1ebd071a7c4fb42f5ee953215722d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, DOF, DOF &gt;</type>
      <name>mInvProjArtInertiaImplicit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a5e665fa058bfd2c8809db6901ea26127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6c1af9cc0ef9fc1326ac13ff1e67c403</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a15f2342b6a09189540789f930d769951</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvM_a</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7387fa0865e340d0442cdacb5e54f0f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvMassMatrixSegment</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aac97c52601a280fb48d48f057512bc63</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d3/df1/classdart_1_1dynamics_1_1FreeJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, DOF, 1 &gt;</type>
      <name>Vector</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a71c69d0d332861662f5a9dc33103148d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::FreeJoint::Properties</name>
    <filename>d3/d91/structdart_1_1dynamics_1_1FreeJoint_1_1Properties.html</filename>
    <base>dart::dynamics::MultiDofJoint::Properties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d3/d91/structdart_1_1dynamics_1_1FreeJoint_1_1Properties.html</anchorfile>
      <anchor>a394547704b9aff23168ccbd03f07e948</anchor>
      <arglist>(const MultiDofJoint&lt; 6 &gt;::Properties &amp;_properties=MultiDofJoint&lt; 6 &gt;::Properties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>d3/d91/structdart_1_1dynamics_1_1FreeJoint_1_1Properties.html</anchorfile>
      <anchor>a1807340ff846f523f8872fe128d75771</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Group</name>
    <filename>db/db4/classdart_1_1dynamics_1_1Group.html</filename>
    <base>dart::dynamics::ReferentialSkeleton</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Group</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>ae76a96ce16e8dc90513e9b9e76ab7a33</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapBodyNodeIndices</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a6f53c7629b1fecabce7ed2ec5afeefd4</anchor>
      <arglist>(size_t _index1, size_t _index2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapDofIndices</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a4179bf7eb3ae177c30beb60d8b0e6a33</anchor>
      <arglist>(size_t _index1, size_t _index2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBodyNode</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>aa12944b4dd6da9441c0b3c2fbd869ffa</anchor>
      <arglist>(BodyNode *_bn, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBodyNodes</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>aaad7c1647aba12ea95bb68d89e11cab7</anchor>
      <arglist>(const std::vector&lt; BodyNode * &gt; &amp;_bodyNodes, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeBodyNode</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a09efcd268edc04e5fd25b6b0a56cd602</anchor>
      <arglist>(BodyNode *_bn, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeBodyNodes</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a0962a70d1e07bc1b443cf510b95f7b0e</anchor>
      <arglist>(const std::vector&lt; BodyNode * &gt; &amp;_bodyNodes, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDof</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a06e75febbf4da8670c02f30cd3e7ea17</anchor>
      <arglist>(DegreeOfFreedom *_dof, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDofs</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>af1dfa8eddfa2338e3adb444502b32352</anchor>
      <arglist>(const std::vector&lt; DegreeOfFreedom * &gt; &amp;_dofs, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeDof</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a5a538e7fe34f83c11ab90341ac19d209</anchor>
      <arglist>(DegreeOfFreedom *_dof, bool _warning=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeDofs</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a7ee4bc6648533fb5e8fef29f51973732</anchor>
      <arglist>(const std::vector&lt; DegreeOfFreedom * &gt; &amp;_dofs, bool _warning=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GroupPtr</type>
      <name>create</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>ae7c91137e90eeebbab9e97c77f2867a1</anchor>
      <arglist>(const std::string &amp;_name=&quot;Group&quot;, const std::vector&lt; BodyNode * &gt; &amp;_bodyNodes=std::vector&lt; BodyNode * &gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GroupPtr</type>
      <name>create</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a940571795baf9ee611100ed3e79ba149</anchor>
      <arglist>(const std::string &amp;_name, const std::vector&lt; DegreeOfFreedom * &gt; &amp;_dofs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Group</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>a0a9c0f15184bd5f186082c5a1c7c354c</anchor>
      <arglist>(const std::string &amp;_name=&quot;Group&quot;, const std::vector&lt; BodyNode * &gt; &amp;_bodyNodes=std::vector&lt; BodyNode * &gt;())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Group</name>
      <anchorfile>db/db4/classdart_1_1dynamics_1_1Group.html</anchorfile>
      <anchor>aae268ef3c8d23ecbe6b8755404b1215d</anchor>
      <arglist>(const std::string &amp;_name, const std::vector&lt; DegreeOfFreedom * &gt; &amp;_dofs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::HierarchicalIK</name>
    <filename>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</filename>
    <base>dart::common::Subject</base>
    <class kind="class">dart::dynamics::HierarchicalIK::Constraint</class>
    <class kind="class">dart::dynamics::HierarchicalIK::Function</class>
    <class kind="class">dart::dynamics::HierarchicalIK::Objective</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchicalIK</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a7b5e108f2926e82c9780728568acd1e7</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solve</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>aaea5d53d25dab0d574a95c7191cf8bc4</anchor>
      <arglist>(bool _applySolution=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solve</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a53cb002fb86d571ad47a90ba758d05c3</anchor>
      <arglist>(Eigen::VectorXd &amp;positions, bool _applySolution=true)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; HierarchicalIK &gt;</type>
      <name>clone</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a096a2f7f05b1bf7422510d8ca48e59ec</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkel) const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ace3106f744460be171e17eb4e7f8b01d</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_objective)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Function &gt; &amp;</type>
      <name>getObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a6e3a5559d97ffa5223b0af5f7b20571c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Function &gt;</type>
      <name>getObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a469522a7462040e029e79b786c466dc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNullSpaceObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a3fb12a6a67bc9dbfa547b5430383b0ad</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_nsObjective)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Function &gt; &amp;</type>
      <name>getNullSpaceObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ab9bc37e2bbe855f281d3d7f1d351b60e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Function &gt;</type>
      <name>getNullSpaceObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>abfdf3e9b5aa21c6a24c1724a9eb86456</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNullSpaceObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a4eec316087be11c8fa667173d961c70f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Problem &gt; &amp;</type>
      <name>getProblem</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a8f286830406e442f0118d0924d1f7401</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Problem &gt;</type>
      <name>getProblem</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>af1e893fc3d92b9345517f3f1fa94e1d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetProblem</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a1744a89b2f9bf0d096afb9596c8a5cc8</anchor>
      <arglist>(bool _clearSeeds=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolver</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a6814f07af2cfb3826e329e66ab294fed</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Solver &gt; &amp;_newSolver)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Solver &gt; &amp;</type>
      <name>getSolver</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a55f42c0ea8af80753effea41153d7d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Solver &gt;</type>
      <name>getSolver</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a465ccc88deb03763856352cb893f0eee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>refreshIKHierarchy</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a7d8cc0350157f96420cc095656c7337b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>const IKHierarchy &amp;</type>
      <name>getIKHierarchy</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a433cc2ee10a47aeaa9f682a4d67dfca7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Eigen::MatrixXd &gt; &amp;</type>
      <name>computeNullSpaces</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ab7c8f17f4f28cd7f3e47835eed5ab665</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a771082d00aafa54708f520bcb7be6e5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a58c007feb71456be40a5a991cf1e5dd3</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q)</arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ae4beed01bdca7e74ca39dfbc38c7eb2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstSkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a4c57456b6f006442e730faceee9e13dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>getAffiliation</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a88c8ab69f688a4ceec7d39b3dd789573</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstSkeletonPtr</type>
      <name>getAffiliation</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a3f6d78109d94ce0cf4b21b597767e865</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCaches</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a0dd67adc0d3cfe7b0d1ddd661fa6acf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>HierarchicalIK</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ae68d967ad4942b9873c147875b69138c</anchor>
      <arglist>(const SkeletonPtr &amp;_skeleton)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a6c75f2e14b1eadbeb04330b900c69f7a</anchor>
      <arglist>(const std::shared_ptr&lt; HierarchicalIK &gt; my_ptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>copyOverSetup</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a2a8c6a89c8b5c343ec909cfc5232d402</anchor>
      <arglist>(const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_otherIK) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WeakSkeletonPtr</type>
      <name>mSkeleton</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a18916124af441aebbe8bc48dc02e6093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IKHierarchy</type>
      <name>mHierarchy</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a0e547814f5fc0a8c39894bbf4001758c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; optimizer::Problem &gt;</type>
      <name>mProblem</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ad44a2739e55ab7e53d9a137426dfd905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; optimizer::Solver &gt;</type>
      <name>mSolver</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a16df8ff934c1134325ebfc21d064728a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>optimizer::FunctionPtr</type>
      <name>mObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a2cc0ca997c817a95e78ce16223c8ffd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>optimizer::FunctionPtr</type>
      <name>mNullSpaceObjective</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a17e517735e74c512c31e2d9d079ecb6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; HierarchicalIK &gt;</type>
      <name>mPtr</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>a9a6cf7de383c3c47ede262f079a0e447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mLastPositions</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>aa94741a795804e6f5c32936b25027ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Eigen::MatrixXd &gt;</type>
      <name>mNullSpaceCache</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>aac6e5ed67120a122e5780210eddea8f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mPartialNullspaceCache</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ad2182863a87f98fd9cc99691e6f14e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::JacobiSVD&lt; math::Jacobian &gt;</type>
      <name>mSVDCache</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>ad80b43ce92fdc7453aeacf5e76607818</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mJacCache</name>
      <anchorfile>d5/de6/classdart_1_1dynamics_1_1HierarchicalIK.html</anchorfile>
      <anchor>af2aa2f6da386d41948f896c58c825b62</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::HierarchicalIK::Constraint</name>
    <filename>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</filename>
    <base>dart::dynamics::HierarchicalIK::Function</base>
    <base>dart::optimizer::Function</base>
    <member kind="function">
      <type></type>
      <name>Constraint</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>aed43b7169bdb89e1a8b4b31a6a398c54</anchor>
      <arglist>(const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_ik)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Constraint</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>a4be07f394c5f9831939b6f3dbb8b4fd4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>optimizer::FunctionPtr</type>
      <name>clone</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>abdf7908474cc16d70b06a287afdf6cf4</anchor>
      <arglist>(const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_newIK) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>afe31c9f91a4ec19ceaf57791ec657be9</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>a5612a45345ba9317b75ab1dbbc150ee7</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; HierarchicalIK &gt;</type>
      <name>mIK</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>a2372f4ba752d0edf7afdf7733f85e2db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mLevelGradCache</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>af72da1086aae91bf5f514fc2009bfc7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mTempGradCache</name>
      <anchorfile>d0/dd2/classdart_1_1dynamics_1_1HierarchicalIK_1_1Constraint.html</anchorfile>
      <anchor>a0c5861f24e06ac935cc3e314435cb632</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::HierarchicalIK::Function</name>
    <filename>de/d0e/classdart_1_1dynamics_1_1HierarchicalIK_1_1Function.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::HierarchicalIK::Objective</name>
    <filename>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</filename>
    <base>dart::dynamics::HierarchicalIK::Function</base>
    <base>dart::optimizer::Function</base>
    <member kind="function">
      <type></type>
      <name>Objective</name>
      <anchorfile>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</anchorfile>
      <anchor>a0cf639ed9d1dc991251fbb12fe3956fc</anchor>
      <arglist>(const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_ik)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Objective</name>
      <anchorfile>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</anchorfile>
      <anchor>a85722ba4d3b3d772aaf095e1acfa75e5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>optimizer::FunctionPtr</type>
      <name>clone</name>
      <anchorfile>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</anchorfile>
      <anchor>a3f46d649f4d86de2fda1ed5561814747</anchor>
      <arglist>(const std::shared_ptr&lt; HierarchicalIK &gt; &amp;_newIK) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</anchorfile>
      <anchor>a76e6f4dd1158a76ba7d2f0c7dc4005e5</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</anchorfile>
      <anchor>aecbed757bbfd434e6f018845d687b79b</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; HierarchicalIK &gt;</type>
      <name>mIK</name>
      <anchorfile>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</anchorfile>
      <anchor>a8780206879ed5ae6cf7f38d1d125ac60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mGradCache</name>
      <anchorfile>d3/d24/classdart_1_1dynamics_1_1HierarchicalIK_1_1Objective.html</anchorfile>
      <anchor>ac197d1c8e2d500de782c1e76daa82006</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::CompositeIK</name>
    <filename>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</filename>
    <base>dart::dynamics::HierarchicalIK</base>
    <member kind="typedef">
      <type>std::unordered_set&lt; std::shared_ptr&lt; InverseKinematics &gt; &gt;</type>
      <name>ModuleSet</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>ac4bc0f2b9774763f205ad5eee38f783e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_set&lt; std::shared_ptr&lt; const InverseKinematics &gt; &gt;</type>
      <name>ConstModuleSet</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a15eadbacfb3dad2b3de63a0a81c7a0c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; HierarchicalIK &gt;</type>
      <name>clone</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a6fb8ddc767eb76cc01ab57ca582308b8</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkel) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; CompositeIK &gt;</type>
      <name>cloneCompositeIK</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a3db8bfb715fefb1728b6565b363bf857</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkel) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addModule</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>aafd14fb86a0da4cfbc0c5d2b7ab2d22f</anchor>
      <arglist>(const std::shared_ptr&lt; InverseKinematics &gt; &amp;_ik)</arglist>
    </member>
    <member kind="function">
      <type>const ModuleSet &amp;</type>
      <name>getModuleSet</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>acc5a840583a9447cba54e3133aaa3387</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstModuleSet</type>
      <name>getModuleSet</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a78124876a6511fa52849bdbc7b92285e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshIKHierarchy</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a1083f1c727c276e9fc145efd5185e589</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; CompositeIK &gt;</type>
      <name>create</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a2d4208463727a1148103312c1d62dbf4</anchor>
      <arglist>(const SkeletonPtr &amp;_skel)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CompositeIK</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a3775aab31035a023788da1c020601d70</anchor>
      <arglist>(const SkeletonPtr &amp;_skel)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_set&lt; std::shared_ptr&lt; InverseKinematics &gt; &gt;</type>
      <name>mModuleSet</name>
      <anchorfile>d4/de6/classdart_1_1dynamics_1_1CompositeIK.html</anchorfile>
      <anchor>a663bb8ff8b7d8d8ecc76a27941c8ade8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::WholeBodyIK</name>
    <filename>d5/dfe/classdart_1_1dynamics_1_1WholeBodyIK.html</filename>
    <base>dart::dynamics::HierarchicalIK</base>
    <member kind="function">
      <type>std::shared_ptr&lt; HierarchicalIK &gt;</type>
      <name>clone</name>
      <anchorfile>d5/dfe/classdart_1_1dynamics_1_1WholeBodyIK.html</anchorfile>
      <anchor>ad9f2f3de8bad24793f85d1b5735bfa4b</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkel) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; WholeBodyIK &gt;</type>
      <name>cloneWholeBodyIK</name>
      <anchorfile>d5/dfe/classdart_1_1dynamics_1_1WholeBodyIK.html</anchorfile>
      <anchor>ae773cc8e1c8e6013559bca3a59070322</anchor>
      <arglist>(const SkeletonPtr &amp;_newSkel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshIKHierarchy</name>
      <anchorfile>d5/dfe/classdart_1_1dynamics_1_1WholeBodyIK.html</anchorfile>
      <anchor>a9512114f90f850d97a02ca04d22cc419</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; WholeBodyIK &gt;</type>
      <name>create</name>
      <anchorfile>d5/dfe/classdart_1_1dynamics_1_1WholeBodyIK.html</anchorfile>
      <anchor>a89bda32f31d4d9e53e5bb80d8016faf6</anchor>
      <arglist>(const SkeletonPtr &amp;_skel)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WholeBodyIK</name>
      <anchorfile>d5/dfe/classdart_1_1dynamics_1_1WholeBodyIK.html</anchorfile>
      <anchor>a08edac0e76ba0e5cb676b207ac6eb948</anchor>
      <arglist>(const SkeletonPtr &amp;_skel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Inertia</name>
    <filename>d6/d91/classdart_1_1dynamics_1_1Inertia.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Param</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MASS</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411a4bb56e2cb0e3756c43659c3f4065a2d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COM_X</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411a83a24cd22c75d992d152467f2bef60e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COM_Y</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411a521e771f0affbd5ae8c44f9545be1836</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COM_Z</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411aa98d17241e1a10c238caa45fe0ce48cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>I_XX</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411affbfaede838338054962195e6f448986</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>I_YY</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411ae31fdc2da489d15755723b2f4acca79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>I_ZZ</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411a824f3cf04da86061340fe7ed21f3b679</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>I_XY</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411a39c27751ddadadb2ec8c5c23f5a6b33b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>I_XZ</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411ac3b48ccb1d8d998ba2dc90a095af4a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>I_YZ</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a111b859c2031d8adb17012af420f5411af1ea9cac3127a65cc50e0ec54ced7822</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Inertia</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>aeddf0b7cd44544ccdd1f726e56ce2f3b</anchor>
      <arglist>(double _mass=1, const Eigen::Vector3d &amp;_com=Eigen::Vector3d::Zero(), const Eigen::Matrix3d &amp;_momentOfInertia=Eigen::Matrix3d::Identity())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Inertia</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>aa4661f9950d5958efa4c8609d42aedf7</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_spatialInertiaTensor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Inertia</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>ae175b217bd5dc4e20ef8721a58e6ede0</anchor>
      <arglist>(double _mass, double _comX, double _comY, double _comZ, double _Ixx, double _Iyy, double _Izz, double _Ixy, double _Ixz, double _Iyz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameter</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a0d14e1d586bba1fe5a1baf1fbdf8cc82</anchor>
      <arglist>(Param _param, double _value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getParameter</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a6187920f726b2b4a60427ab9972cda4f</anchor>
      <arglist>(Param _param) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMass</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a6f46ab2c4fd917945e409c6da9c353b2</anchor>
      <arglist>(double _mass)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMass</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a9988f48e42bd59e3dfd7a9a682090a55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocalCOM</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a5d2cc45655068902f494da81bb52be05</anchor>
      <arglist>(const Eigen::Vector3d &amp;_com)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getLocalCOM</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>af500dc6fdc38b8448cccb58bac3910fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMoment</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a4116bf64fe31b72b2ba14269fd242de4</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_moment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMoment</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a2fcfd4e69dd16824ddec37ac55d425fa</anchor>
      <arglist>(double _Ixx, double _Iyy, double _Izz, double _Ixy, double _Ixz, double _Iyz)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>getMoment</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a5ff08f7cab0a1dc6ad847ec6f658ae15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpatialTensor</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a598f5e772b66e0dc6dda7f3471eaad8b</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_spatial)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Matrix6d &amp;</type>
      <name>getSpatialTensor</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>aeba2ec22bd692bffe85c913085ea46b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verify</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a6bbeabd3938f1403744ee239eb3c35c2</anchor>
      <arglist>(bool _printWarnings=true, double _tolerance=1e-8) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>verifyMoment</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>ae0367356fafa9a3fe96a75e3e6d76fe3</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_moment, bool _printWarnings=true, double _tolerance=1e-8)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>verifySpatialTensor</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a2f15a99666cb025edefa96f6e99ae701</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_spatial, bool _printWarnings=true, double _tolerance=1e-8)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeSpatialTensor</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a9d346a8c4109414a61ade222ec65927f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeParameters</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a751262c30080df3bdd915ab2ea651b2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mMass</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>af1d9a8589617c4c0cf01af83cc032dd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mCenterOfMass</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>afa084ff8d9833faff3ed498235e58f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::array&lt; double, 6 &gt;</type>
      <name>mMoment</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a5ed236ebf88f9c50b88be7a769c33ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix6d</type>
      <name>mSpatialTensor</name>
      <anchorfile>d6/d91/classdart_1_1dynamics_1_1Inertia.html</anchorfile>
      <anchor>a0519ae34244002fcaa16f6f8f7fb9022</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics</name>
    <filename>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</filename>
    <base>dart::common::Subject</base>
    <class kind="class">dart::dynamics::InverseKinematics::Constraint</class>
    <class kind="class">dart::dynamics::InverseKinematics::ErrorMethod</class>
    <class kind="class">dart::dynamics::InverseKinematics::Function</class>
    <class kind="class">dart::dynamics::InverseKinematics::GradientMethod</class>
    <class kind="class">dart::dynamics::InverseKinematics::JacobianDLS</class>
    <class kind="class">dart::dynamics::InverseKinematics::JacobianTranspose</class>
    <class kind="class">dart::dynamics::InverseKinematics::Objective</class>
    <class kind="class">dart::dynamics::InverseKinematics::TaskSpaceRegion</class>
    <member kind="function">
      <type></type>
      <name>InverseKinematics</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a51469bfb6d252a2e1245ed0b3df8d1cc</anchor>
      <arglist>(const InverseKinematics &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>InverseKinematics &amp;</type>
      <name>operator=</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a8a207fc336403be59ed7276fac5bd04c</anchor>
      <arglist>(const InverseKinematics &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InverseKinematics</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a6780b995be574e78ad0944964c08fe3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solve</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>afe03b7e5d231c46398f44dae3a3b8b63</anchor>
      <arglist>(bool _applySolution=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solve</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a16f039ea7b7764a48c46f49e914f0625</anchor>
      <arglist>(Eigen::VectorXd &amp;positions, bool _applySolution=true)</arglist>
    </member>
    <member kind="function">
      <type>InverseKinematicsPtr</type>
      <name>clone</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a47714c1aa0cf1fad6f7652380776f94a</anchor>
      <arglist>(JacobianNode *_newNode) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActive</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a02761d556eb6492181f351ae3018f85b</anchor>
      <arglist>(bool _active=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInactive</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ad8b919a14495d55452c4c765e3e18290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ab93a090d942d5f9f382e083d96caa18e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHierarchyLevel</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a5de8dbb683aae13cff95bdc297d7cbb5</anchor>
      <arglist>(size_t _level)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getHierarchyLevel</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>abf93018dd767639a57bdf6db0d2c58d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useChain</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a2fb9d70b8477636b644d313c80f135dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useWholeBody</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a1dc57f20a736cd666e42c08ad852202f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDofs</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ab4258a94e33ee865c943430c52e98fec</anchor>
      <arglist>(const std::vector&lt; DegreeOfFreedomT * &gt; &amp;_dofs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDofs</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ac06a0a81e6f16e42af97e304b9606dda</anchor>
      <arglist>(const std::vector&lt; size_t &gt; &amp;_dofs)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; size_t &gt; &amp;</type>
      <name>getDofs</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a2993851458c4710d905b1d76da8be364</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>getDofMap</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a2d2cd08ce9bfe4919e57b1a3fe70ab69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>aedce2ee302e9bc0b2e274df819ec84e0</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_objective)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Function &gt; &amp;</type>
      <name>getObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a4d0cb55497185e378c7d3bf42c65fde0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Function &gt;</type>
      <name>getObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a265a1c80c6b25407f0b4b880968d28da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNullSpaceObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a7f07851f03d200d45a218ab228480aa4</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Function &gt; &amp;_nsObjective)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Function &gt; &amp;</type>
      <name>getNullSpaceObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a11ba16183479a663d9e25cbe1784dc9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Function &gt;</type>
      <name>getNullSpaceObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>af71b929bb0a4c727841bfe20bdab63da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNullSpaceObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a38c0e3cd03d968d337baa9228106838a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IKErrorMethod &amp;</type>
      <name>setErrorMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a6d91a61c582066b96d6550f805506b53</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>ErrorMethod &amp;</type>
      <name>getErrorMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>adf232faf6e1246cea8bd1e1b64976105</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ErrorMethod &amp;</type>
      <name>getErrorMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>acc4d9538db86e0152aa05bc0cbd2f119</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IKGradientMethod &amp;</type>
      <name>setGradientMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a31bde4d02672e11660b95e02908deb69</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>GradientMethod &amp;</type>
      <name>getGradientMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ad6517c7bf7335f893825d0f28d76005d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GradientMethod &amp;</type>
      <name>getGradientMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>af1ab0ee70c48d1837c45c4311bc89922</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Problem &gt; &amp;</type>
      <name>getProblem</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>aba09513be2d20e621a399b05c95d2888</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Problem &gt;</type>
      <name>getProblem</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a610a0245a7f1410edc9ab931f359d85e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetProblem</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a237ae26530785ad5c4c11ab036dbf951</anchor>
      <arglist>(bool _clearSeeds=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolver</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a34475daac24ddba607d1b7ac462c62e1</anchor>
      <arglist>(const std::shared_ptr&lt; optimizer::Solver &gt; &amp;_newSolver)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; optimizer::Solver &gt; &amp;</type>
      <name>getSolver</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a10acbb1b70a946eb909451e34309edc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const optimizer::Solver &gt;</type>
      <name>getSolver</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a9853414a8831dec6d940b797542e5580</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOffset</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ab5319b69eae7c114d010e26387a16fea</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset=Eigen::Vector3d::Zero())</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getOffset</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a83cea02fe68a05471fa6a96cfe490e02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasOffset</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ad8e296a6aacbac5c9bbadcf996e39095</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTarget</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a76b756ea7682434a2a9d359cdd865a84</anchor>
      <arglist>(std::shared_ptr&lt; SimpleFrame &gt; _newTarget)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; SimpleFrame &gt;</type>
      <name>getTarget</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a073bb175a23d5b705a7b3c5fc3a9b306</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const SimpleFrame &gt;</type>
      <name>getTarget</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a092cdf9e7c5627c135bd0ba01babb1b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JacobianNode *</type>
      <name>getNode</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a66857342fba0b96111a14fd775975c36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const JacobianNode *</type>
      <name>getNode</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a06cce3e0eb5fe706b093a82f79d36810</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>JacobianNode *</type>
      <name>getAffiliation</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a5c4f418c60eeb5c37bfdd883c8bbf893</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const JacobianNode *</type>
      <name>getAffiliation</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a1f284a9f5c64deed53c2c507fc8fa615</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const math::Jacobian &amp;</type>
      <name>computeJacobian</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a3a4d2302247110fb89bc3c74aae6a574</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a79f5495be3c229e347e94e5540e3f260</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a2941f3c3d9835fc49ec1ebad1574ee05</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCaches</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a1035b741940c4e4a99409b8ae188301a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>IKErrorMethod &amp;</type>
      <name>setErrorMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a6d91a61c582066b96d6550f805506b53</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>IKGradientMethod &amp;</type>
      <name>setGradientMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a31bde4d02672e11660b95e02908deb69</anchor>
      <arglist>(Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDofs</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ab4258a94e33ee865c943430c52e98fec</anchor>
      <arglist>(const std::vector&lt; DegreeOfFreedomT * &gt; &amp;_dofs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static InverseKinematicsPtr</type>
      <name>create</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a1dbdf61a389c5dd72eba90ea7cea8a27</anchor>
      <arglist>(JacobianNode *_node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>InverseKinematics</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a8fc7879447a95f8cac3921bd823c3909</anchor>
      <arglist>(JacobianNode *_node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a37a7e671f3ad7b892d5c120e919651ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetTargetConnection</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a553b50ea2ac82dd734d59a297d737646</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetNodeConnection</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a1752d81d07c534a9404371404ad00d55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>common::Connection</type>
      <name>mTargetConnection</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a7ac659a036f4747ce5553c48373a1d29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>common::Connection</type>
      <name>mNodeConnection</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a9f0ae10b40ba613019e47ab2c63470a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mActive</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a73c517fc9e01937d6662d1ca9dce2c8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mHierarchyLevel</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a3cd93923e5869afbb52c7e34e561bd52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>mDofs</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a18040f5f2054bedb4920db8add105185</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>mDofMap</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a7791d2b820e2f5623fd9c4999587bbcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; optimizer::Function &gt;</type>
      <name>mObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a897ef2919adb9a949063c4823201ab1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; optimizer::Function &gt;</type>
      <name>mNullSpaceObjective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a81b69f9aec6952d4cb9292ae8985bf24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; ErrorMethod &gt;</type>
      <name>mErrorMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ae555b821480b29302109aa6d74c4428d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; GradientMethod &gt;</type>
      <name>mGradientMethod</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>af5d9ac877c4ebac5da142eb6633347d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; optimizer::Problem &gt;</type>
      <name>mProblem</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ad924f542ab476c4ab59fd1073b4c4669</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; optimizer::Solver &gt;</type>
      <name>mSolver</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ad171a081c171c77e947f28bbc9b0855d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mOffset</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>ab4e750a744f0074d0e300e1582defdfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mHasOffset</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a3cbdfd4ca1f4ccf3ff1cc9c200979ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; SimpleFrame &gt;</type>
      <name>mTarget</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>af7cf2605a4b82a22a9caf990dbf0a76d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>sub_ptr&lt; JacobianNode &gt;</type>
      <name>mNode</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a476bdbdf0a4e37c80746ddca365d21bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Jacobian</type>
      <name>mJacobian</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a1a26feddbfefcefd3f9f3af6050d7840</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>Objective</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a49a13cb2647058c4cf107bd6b82507a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>Constraint</name>
      <anchorfile>db/d91/classdart_1_1dynamics_1_1InverseKinematics.html</anchorfile>
      <anchor>a697ed9eaa8955d595a023663ab1e8418</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::Constraint</name>
    <filename>d8/d14/classdart_1_1dynamics_1_1InverseKinematics_1_1Constraint.html</filename>
    <base>dart::dynamics::InverseKinematics::Function</base>
    <base>dart::optimizer::Function</base>
    <member kind="function">
      <type></type>
      <name>Constraint</name>
      <anchorfile>d8/d14/classdart_1_1dynamics_1_1InverseKinematics_1_1Constraint.html</anchorfile>
      <anchor>a779a0c514afe40d8690f73da88e3eb45</anchor>
      <arglist>(InverseKinematics *_ik)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Constraint</name>
      <anchorfile>d8/d14/classdart_1_1dynamics_1_1InverseKinematics_1_1Constraint.html</anchorfile>
      <anchor>a7ceb68d461ccf6fbb6dd0201d42079c1</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>optimizer::FunctionPtr</type>
      <name>clone</name>
      <anchorfile>d8/d14/classdart_1_1dynamics_1_1InverseKinematics_1_1Constraint.html</anchorfile>
      <anchor>a45acfa422b35cb7140de3b50c0dd61c8</anchor>
      <arglist>(InverseKinematics *_newIK) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>d8/d14/classdart_1_1dynamics_1_1InverseKinematics_1_1Constraint.html</anchorfile>
      <anchor>ab9fc38c4ae83c10a81dbd3842ffa0b3b</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>d8/d14/classdart_1_1dynamics_1_1InverseKinematics_1_1Constraint.html</anchorfile>
      <anchor>a64a47e89b80334e339446f10d7dc6349</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Function</name>
      <anchorfile>d6/def/classdart_1_1dynamics_1_1InverseKinematics_1_1Function.html</anchorfile>
      <anchor>a81a4d308d440ec7da21085b695ec57a5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>sub_ptr&lt; InverseKinematics &gt;</type>
      <name>mIK</name>
      <anchorfile>d8/d14/classdart_1_1dynamics_1_1InverseKinematics_1_1Constraint.html</anchorfile>
      <anchor>ae43e1069e2c669ef1108b2eb05a8a106</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::ErrorMethod</name>
    <filename>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</filename>
    <base>dart::common::Subject</base>
    <class kind="struct">dart::dynamics::InverseKinematics::ErrorMethod::Properties</class>
    <member kind="typedef">
      <type>std::pair&lt; Eigen::Vector6d, Eigen::Vector6d &gt;</type>
      <name>Bounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a4c940824f69c15ac230ca9ecd1dafab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ErrorMethod</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>acb43b9038a5fa87318b1ab3ae9fdd2d5</anchor>
      <arglist>(InverseKinematics *_ik, const std::string &amp;_methodName, const Properties &amp;_properties=Properties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ErrorMethod</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a15e150ee2ff0fae977c3103032bfb284</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; ErrorMethod &gt;</type>
      <name>clone</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a899e84db84097ebc94ac0cc42b8a1311</anchor>
      <arglist>(InverseKinematics *_newIK) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Vector6d</type>
      <name>computeError</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>ab511624a6199223f6c28aa3b98cc0932</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>evalError</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a75bd0c2fed89fd8af252949f60b9a2d4</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getMethodName</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a6de3f56a3bbca885cf3e26f7cfd92f0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>abfee0840a689c716719bf9cbba080e79</anchor>
      <arglist>(const Eigen::Vector6d &amp;_lower=Eigen::Vector6d::Constant(-DefaultIKTolerance), const Eigen::Vector6d &amp;_upper=Eigen::Vector6d::Constant(DefaultIKTolerance))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a0caea72ea6539e327dc5930f1fe4ab9b</anchor>
      <arglist>(const std::pair&lt; Eigen::Vector6d, Eigen::Vector6d &gt; &amp;_bounds)</arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; Eigen::Vector6d, Eigen::Vector6d &gt; &amp;</type>
      <name>getBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>ae5bc5df362a7ec1e468e7d6f5aac9a87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAngularBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a8c5b38bf4d977ef616070009ab925664</anchor>
      <arglist>(const Eigen::Vector3d &amp;_lower=Eigen::Vector3d::Constant(-DefaultIKTolerance), const Eigen::Vector3d &amp;_upper=Eigen::Vector3d::Constant(DefaultIKTolerance))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAngularBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a3a909c8854d0b6b77de21f2557dedb05</anchor>
      <arglist>(const std::pair&lt; Eigen::Vector3d, Eigen::Vector3d &gt; &amp;_bounds)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Eigen::Vector3d, Eigen::Vector3d &gt;</type>
      <name>getAngularBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a6f14ffc75f303a020fbc702dadbf6687</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a22a9888550d1d6be9eb88488703a44ec</anchor>
      <arglist>(const Eigen::Vector3d &amp;_lower=Eigen::Vector3d::Constant(-DefaultIKTolerance), const Eigen::Vector3d &amp;_upper=Eigen::Vector3d::Constant(DefaultIKTolerance))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a0b630d8d76ab51c171b048975d596b9d</anchor>
      <arglist>(const std::pair&lt; Eigen::Vector3d, Eigen::Vector3d &gt; &amp;_bounds)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Eigen::Vector3d, Eigen::Vector3d &gt;</type>
      <name>getLinearBounds</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a06409e1723cfa9263a33e569be3dac7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorLengthClamp</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>af7fb6255d14ac824da370c7119ed15e8</anchor>
      <arglist>(double _clampSize=DefaultIKErrorClamp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getErrorLengthClamp</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>ae56d9edac0e2787938969021bf7b6252</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorWeights</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a83e016ef8592a44bcc29ce5825ff4503</anchor>
      <arglist>(const Eigen::Vector6d &amp;_weights)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getErrorWeights</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a9763541ef90f73a47569584a4ade8df1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAngularErrorWeights</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a9b3ca8e1c444239455bd796773409cd1</anchor>
      <arglist>(const Eigen::Vector3d &amp;_weights=Eigen::Vector3d::Constant(DefaultIKAngularWeight))</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getAngularErrorWeights</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>ae9e99faa5d368687b71aae010c88e2d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearErrorWeights</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a93ef38d7434917011925c6d6b49f164f</anchor>
      <arglist>(const Eigen::Vector3d &amp;_weights=Eigen::Vector3d::Constant(DefaultIKLinearWeight))</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getLinearErrorWeights</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>afccee8b918a6087b86e500ece9d07338</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCache</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>af7137c657a64cbb570afad141ae12a50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>common::sub_ptr&lt; InverseKinematics &gt;</type>
      <name>mIK</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a117089e9064a708c397de39182efcd75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mMethodName</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>ac3f793a1ec5bcc10419f79ac4d7b2840</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mLastPositions</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>aad1566f7023e43d6f0ea65b54c215270</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mLastError</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>a4c7e7ed5418232c00d32094a3157f26b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mProperties</name>
      <anchorfile>dc/d4e/classdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod.html</anchorfile>
      <anchor>ad4aaf57b3e4c77329e81d80b18f74d3f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::InverseKinematics::ErrorMethod::Properties</name>
    <filename>db/d2b/structdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod_1_1Properties.html</filename>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>db/d2b/structdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod_1_1Properties.html</anchorfile>
      <anchor>a0383c2595e61ddc7cd25dabff852201a</anchor>
      <arglist>(const Bounds &amp;_bounds=Bounds(Eigen::Vector6d::Constant(-DefaultIKTolerance), Eigen::Vector6d::Constant(DefaultIKTolerance)), double _errorClamp=DefaultIKErrorClamp, const Eigen::Vector6d &amp;_errorWeights=Eigen::compose(Eigen::Vector3d::Constant(DefaultIKAngularWeight), Eigen::Vector3d::Constant(DefaultIKLinearWeight)))</arglist>
    </member>
    <member kind="variable">
      <type>std::pair&lt; Eigen::Vector6d, Eigen::Vector6d &gt;</type>
      <name>mBounds</name>
      <anchorfile>db/d2b/structdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod_1_1Properties.html</anchorfile>
      <anchor>a851d29fe57fab0df7e87edb260b102b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mErrorLengthClamp</name>
      <anchorfile>db/d2b/structdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod_1_1Properties.html</anchorfile>
      <anchor>ab6bf47bae4bc5689eef19279b4bed845</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector6d</type>
      <name>mErrorWeights</name>
      <anchorfile>db/d2b/structdart_1_1dynamics_1_1InverseKinematics_1_1ErrorMethod_1_1Properties.html</anchorfile>
      <anchor>a63405484fc8173dc5833d31595a189ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::Function</name>
    <filename>d6/def/classdart_1_1dynamics_1_1InverseKinematics_1_1Function.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual optimizer::FunctionPtr</type>
      <name>clone</name>
      <anchorfile>d6/def/classdart_1_1dynamics_1_1InverseKinematics_1_1Function.html</anchorfile>
      <anchor>a32b2cc147ac6f5f4dec399c6b627deb8</anchor>
      <arglist>(InverseKinematics *_newIK) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::GradientMethod</name>
    <filename>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</filename>
    <base>dart::common::Subject</base>
    <member kind="function">
      <type></type>
      <name>GradientMethod</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>ad923cf26d2e3ff4ac39388b712fe12f4</anchor>
      <arglist>(InverseKinematics *_ik, const std::string &amp;_methodName, double _clamp=DefaultIKGradientComponentClamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GradientMethod</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a68b85fe5f92a58d0f9647c1ba35ed4f3</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::unique_ptr&lt; GradientMethod &gt;</type>
      <name>clone</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a358b2ce964093050e7175fdd8d998e12</anchor>
      <arglist>(InverseKinematics *_newIK) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>computeGradient</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>ae447178e29921aed8e4c8619a2e403b6</anchor>
      <arglist>(const Eigen::Vector6d &amp;_error, Eigen::VectorXd &amp;_grad)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>acb8403ba28323560640cac6a1eb7e4cf</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q, Eigen::Map&lt; Eigen::VectorXd &gt; _grad)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getMethodName</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a8b0d66d0a9586a32a9ce4257c0c10b29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clampGradient</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>afd9895eff6da5f076405fc869ab97175</anchor>
      <arglist>(Eigen::VectorXd &amp;_grad) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setComponentWiseClamp</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a155e99d503735e1e9d769f055699717b</anchor>
      <arglist>(double _clamp=DefaultIKGradientComponentClamp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getComponentWiseClamp</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a2be888a28d1b4d4319f95115b0f48989</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyWeights</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>aa2b951535bc1a35b882ce8221fa275ff</anchor>
      <arglist>(Eigen::VectorXd &amp;_grad) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setComponentWeights</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a9fba6987c5f071533d010bb4c7a43265</anchor>
      <arglist>(const Eigen::VectorXd &amp;_weights)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getComponentWeights</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a4d8887e76943852ff02a4423afae4aaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCache</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a888731b4b274a85406570a3448d6c471</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>common::sub_ptr&lt; InverseKinematics &gt;</type>
      <name>mIK</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>aa0d3b3fca2c935154f44494f2a0898e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mMethodName</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a1747a0e1688b185f1b26c58633afa483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mLastPositions</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>a9be4823acc2404ef51541f5197522ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mLastGradient</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>ad07e1a8119541fb898652b466b4e55e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mComponentWiseClamp</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>aab35c4e515779af0c1dbd86eff0d3e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mComponentWeights</name>
      <anchorfile>dc/d01/classdart_1_1dynamics_1_1InverseKinematics_1_1GradientMethod.html</anchorfile>
      <anchor>aab3b3112e10656ab1912020d6bcb699a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::JacobianDLS</name>
    <filename>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</filename>
    <base>dart::dynamics::InverseKinematics::GradientMethod</base>
    <member kind="function">
      <type></type>
      <name>JacobianDLS</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>ab4ab2d9c88a95a0b70af44f7aee0395e</anchor>
      <arglist>(InverseKinematics *_ik, double _clamp=DefaultIKGradientComponentClamp, double _damping=DefaultIKDLSCoefficient)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JacobianDLS</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>ae6fc979af9c143ff2819a660a0af8e3f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; GradientMethod &gt;</type>
      <name>clone</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>a9fc6cc93f3c26491e1ef0aa8727145d3</anchor>
      <arglist>(InverseKinematics *_newIK) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeGradient</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>a80602d420aefd11714e5eb0f98e85fed</anchor>
      <arglist>(const Eigen::Vector6d &amp;_error, Eigen::VectorXd &amp;_grad) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>ab534c0ae27b0ba7c9ce2e1c07c29165d</anchor>
      <arglist>(double _damping=DefaultIKDLSCoefficient)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>a53af1ee157817fd569e4109a140bdac4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mDamping</name>
      <anchorfile>d6/dd1/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianDLS.html</anchorfile>
      <anchor>ae8e70f90fae2ca90d5364229d43c1984</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::JacobianTranspose</name>
    <filename>d8/d60/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianTranspose.html</filename>
    <base>dart::dynamics::InverseKinematics::GradientMethod</base>
    <member kind="function">
      <type></type>
      <name>JacobianTranspose</name>
      <anchorfile>d8/d60/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianTranspose.html</anchorfile>
      <anchor>a1760005574731f74b32049c630d556ff</anchor>
      <arglist>(InverseKinematics *_ik, double _clamp=DefaultIKGradientComponentClamp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JacobianTranspose</name>
      <anchorfile>d8/d60/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianTranspose.html</anchorfile>
      <anchor>aa68ced5cf8141c24aa076022f3191677</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; GradientMethod &gt;</type>
      <name>clone</name>
      <anchorfile>d8/d60/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianTranspose.html</anchorfile>
      <anchor>a6b3f30d03bdb11a7a74f66c726e8cd9a</anchor>
      <arglist>(InverseKinematics *_newIK) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeGradient</name>
      <anchorfile>d8/d60/classdart_1_1dynamics_1_1InverseKinematics_1_1JacobianTranspose.html</anchorfile>
      <anchor>adaf9267e18591703007f5b425550c8b1</anchor>
      <arglist>(const Eigen::Vector6d &amp;_error, Eigen::VectorXd &amp;_grad) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::Objective</name>
    <filename>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</filename>
    <base>dart::dynamics::InverseKinematics::Function</base>
    <base>dart::optimizer::Function</base>
    <member kind="function">
      <type></type>
      <name>Objective</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>ab84556c2bd5aa08b24c435e30de2440a</anchor>
      <arglist>(InverseKinematics *_ik)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Objective</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>a7b169098a7d9e1b83d25e4a2df06d192</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>optimizer::FunctionPtr</type>
      <name>clone</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>ab692075b00ae83d38557a2e8c975d64e</anchor>
      <arglist>(InverseKinematics *_newIK) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>eval</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>a7cb118e6f3a2d4aacc90849d51e6bf4f</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalGradient</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>a048f699547283ac079138cba2c3aac01</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>sub_ptr&lt; InverseKinematics &gt;</type>
      <name>mIK</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>a895b7f0e263259fcf057d3b07117e70a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mGradCache</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>a83365c3ce7d1b049b549d978ee5960e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::JacobiSVD&lt; math::Jacobian &gt;</type>
      <name>mSVDCache</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>ac2bbebf8ccb0e16873d5edcd868b1d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::MatrixXd</type>
      <name>mNullSpaceCache</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1InverseKinematics_1_1Objective.html</anchorfile>
      <anchor>a586ef1513a053c1d8ebfd0d27967e024</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::InverseKinematics::TaskSpaceRegion</name>
    <filename>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</filename>
    <base>dart::dynamics::InverseKinematics::ErrorMethod</base>
    <member kind="function">
      <type></type>
      <name>TaskSpaceRegion</name>
      <anchorfile>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</anchorfile>
      <anchor>a522954d7ba5fc9dda163cb0d8032b1f7</anchor>
      <arglist>(InverseKinematics *_ik, const Properties &amp;_properties=Properties(), bool _computeFromCenter=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TaskSpaceRegion</name>
      <anchorfile>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</anchorfile>
      <anchor>aabb077d79efdf318cc70a033fa528d46</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; ErrorMethod &gt;</type>
      <name>clone</name>
      <anchorfile>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</anchorfile>
      <anchor>ac6000a12f46b42e54144f4458552dfcb</anchor>
      <arglist>(InverseKinematics *_newIK) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Vector6d</type>
      <name>computeError</name>
      <anchorfile>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</anchorfile>
      <anchor>a32bc5b04d5ae15879410e3805e6f22d7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mComputeErrorFromCenter</name>
      <anchorfile>d9/d4d/classdart_1_1dynamics_1_1InverseKinematics_1_1TaskSpaceRegion.html</anchorfile>
      <anchor>ab8d6e2fa79fd69cd276c0a345a9a4967</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::JacobianNode</name>
    <filename>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</filename>
    <base virtualness="virtual">dart::dynamics::Frame</base>
    <base virtualness="virtual">dart::dynamics::Node</base>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; Skeleton &gt;</type>
      <name>getSkeleton</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a3265f19b613673c1fe73e9aeeb543705</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; const Skeleton &gt;</type>
      <name>getSkeleton</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ac6840e7bbbb5e90f3cd45660dc3e3c37</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>dependsOn</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a38a13a09d9e5a946eb10abf0ad3e67c8</anchor>
      <arglist>(size_t _genCoordIndex) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumDependentGenCoords</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aefc74bc494741220b5cac98e00418484</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getDependentGenCoordIndex</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a648c93a8c3a081b4a03989f4c8ff787f</anchor>
      <arglist>(size_t _arrayIndex) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; size_t &gt; &amp;</type>
      <name>getDependentGenCoordIndices</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a7b7c6b3201710ab32fcc3eae769ecd0e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumDependentDofs</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a1bad8aeaa31b6d5d90432b22f4f6a9e9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DegreeOfFreedom *</type>
      <name>getDependentDof</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a4ffa705dfba57696a5c25e65775837ea</anchor>
      <arglist>(size_t _index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const DegreeOfFreedom *</type>
      <name>getDependentDof</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ae4819b23e875e2539509abfc7257f639</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; DegreeOfFreedom * &gt; &amp;</type>
      <name>getDependentDofs</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aa14105863155c2c01b3dce610b36e89f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; const DegreeOfFreedom * &gt; &amp;</type>
      <name>getDependentDofs</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a219a6b5d1c82ce34c097454de828f918</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>getChainDofs</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aef3b25dce4a40b8b9c670ceca750725d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const math::Jacobian &amp;</type>
      <name>getJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a0036014d7653b055726cf73769e07806</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a1731ee2d0550550e254d1d4b2f3f1c81</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a05e67d64781aad86a2ca64b6a96821a5</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a743859c023779a49ec4701fc432567d6</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const math::Jacobian &amp;</type>
      <name>getWorldJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ad4de7f1c725b675d49cd2c23eb5b65af</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>ae5c3e9ceadc04a6edc23e18d1964158f</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aa583425e2e63a9fe41b5fb8dd9ffc799</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a267c46a559aebd870645e5e939ad294e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::AngularJacobian</type>
      <name>getAngularJacobian</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a178448beac27bb12e3fd4b961da694ba</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const math::Jacobian &amp;</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aa3cbcd072f6485b98cd9c63d82884025</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a8a02386d7ba41e703088a935373651f2</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a2bed3a75efe3110ccdd4e686ab6a89fb</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a1ae73d47459f5c1cdbe183132849db18</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const math::Jacobian &amp;</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a090d32ab8f504d163f758d5d5ef5251d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a59dc435aead2076e41188c04f9bc5d39</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a3e128472fbe54a08c6999aeade162db0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aae9efffa9ace1e90749d050a2fc8338a</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>a5de6c1bd22305f28507855e7cb615ea6</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::AngularJacobian</type>
      <name>getAngularJacobianDeriv</name>
      <anchorfile>d1/d50/classdart_1_1dynamics_1_1JacobianNode.html</anchorfile>
      <anchor>aab6a9362137222bee00ed382c919e136</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Joint</name>
    <filename>d6/d5b/classdart_1_1dynamics_1_1Joint.html</filename>
    <base virtualness="virtual">dart::common::Subject</base>
    <class kind="struct">dart::dynamics::Joint::Properties</class>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>afc4480e9216556ff93a48345e88c63ef</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af87510c2dffb529346f1c71252112771</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2efd868e9795c7bf305a885583f260fd</anchor>
      <arglist>(size_t _index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4b8847e9fb01d4550bc9cf364bcdce83</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>setDofName</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ab25dc112f5cf1635d6c0e160c44fb1d9</anchor>
      <arglist>(size_t _index, const std::string &amp;_name, bool _preserveName=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>preserveDofName</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af07ce8c645e9f6dd24dbacc266ad1187</anchor>
      <arglist>(size_t _index, bool _preserve)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDofNamePreserved</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aacf165dd9a102381da8f3671c26ccae2</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getDofName</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a722b4c649a4dac75e27944ac1b223c87</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumDofs</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a7118a12e0e06def4c1ca653b55ceb666</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getPotentialEnergy</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ad5c13113fce6b5ad959bb5a3af75e0db</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a9c0b9cb3a98cd21f2fefd03f33a4ee1c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa4fec8881eb5cef97df09cece8f5c6cf</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const math::Jacobian</type>
      <name>getLocalJacobianTimeDeriv</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a71e9e58da6ea62561cf46b662ff6789d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Vector6d</type>
      <name>getBodyConstraintWrench</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>afdc74ee0832d12b85afa4544b9d63ff2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCommand</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a20ee508dc3515bcbc5b507dc9501fc6e</anchor>
      <arglist>(size_t _index, double _command)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getCommand</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a20c3005367c0531f5f8291b4a084b09e</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCommands</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>adb1b3b75ce59b1f6cd1b1d8c696af3fd</anchor>
      <arglist>(const Eigen::VectorXd &amp;_commands)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a7e7b2480982fec7911e35c1fba5a88e5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetCommands</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac15f618f8e166f7010dd585bd3c0047c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPosition</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a7d992ae736187bf9065c3dd1c476370d</anchor>
      <arglist>(size_t _index, double _position)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getPosition</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a25861898affbcc582cbaf15b1da9670e</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPositions</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0fcfa96fb18a7c6f9b24b6624f72b0f6</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac98858647eab043e2b7e95b4bbf61399</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>adadee231309b62cd3e3d904f75f2a969</anchor>
      <arglist>(size_t _index, double _position)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae0c80b1fb2dde78befa56840a00a4622</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa0635643a0a8c1f22edb8243e86ea801</anchor>
      <arglist>(size_t _index, double _position)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae4dc1c530959156a137ef545f1df3b5a</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae6cce3bff1e2617bde00bd6af99757b5</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetPosition</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa4e231719646025ab1b90710e5bd064a</anchor>
      <arglist>(size_t _index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetPositions</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a74e33663d1175a8ae146237b8f1c6c86</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setInitialPosition</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a24327399266073a1fe621b8ae7541633</anchor>
      <arglist>(size_t _index, double _initial)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getInitialPosition</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ab2e3afd5f8654474977f329917f042e8</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setInitialPositions</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae191b1881fa5a7cd02d24400b8a20132</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getInitialPositions</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a70a06c94d9ccd8809a8983a130f4564e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a5fdc9abd2e209b3602e2ca67c7e5b51a</anchor>
      <arglist>(size_t _index, double _velocity)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a53bf83766e9b549f92ed02da730c93cc</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVelocities</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ab669ed16fb874dc0f4bbcaad89a944e8</anchor>
      <arglist>(const Eigen::VectorXd &amp;_velocities)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af15a842080b0a58c4c52818c74a85ef0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae739738cc96d22ed593bf4654dd58d51</anchor>
      <arglist>(size_t _index, double _velocity)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a1329e89b1188c1d79a692fbe7f37e58b</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a05f1b98678007c0e84d5ff4d567272cb</anchor>
      <arglist>(size_t _index, double _velocity)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a13e2b76420a4a0e2d6c1f03f9d1e2a73</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a59f21ad9087bcab34cb17121d200767e</anchor>
      <arglist>(size_t _index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetVelocities</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a9357c095f23bd1c298ddede84722394d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setInitialVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aca8c6993ff3e17024684df6ba25b2f3e</anchor>
      <arglist>(size_t _index, double _initial)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getInitialVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2fb383a14b44593bab493fa033f9e337</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setInitialVelocities</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a346966a2b8358721f395610359486f4e</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getInitialVelocities</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a6917d9b8e35ea21256986e7ffcd67e14</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a41da04b5ab99b7d3955b683248c423ba</anchor>
      <arglist>(size_t _index, double _acceleration)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac625ef1bdceb8ceb6135d1cea002e034</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAccelerations</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a8573dd184120f2af88cf5a85774d44df</anchor>
      <arglist>(const Eigen::VectorXd &amp;_accelerations)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a9a55c927f8527d33509ccd90aba651bf</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetAccelerations</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a1fe18a369615e06757a3bd779cc49fa7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a30eb089ced08e319247bd996684fec59</anchor>
      <arglist>(size_t _index, double _acceleration)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a65c5375d4d677564002584817b2be641</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4067257ecb4759065f921e69307108b4</anchor>
      <arglist>(size_t _index, double _acceleration)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a976897102a75278839b715a9756242a4</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setForce</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a3aef76db094a120fd074028d003efa3e</anchor>
      <arglist>(size_t _index, double _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getForce</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a5bfe5c2943a21980d865a8cb31a33d07</anchor>
      <arglist>(size_t _index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setForces</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2eaa146434e7ee615e8f4f9f43dd1c64</anchor>
      <arglist>(const Eigen::VectorXd &amp;_forces)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a04dc108c3f57da8b0447dd0a8c6c3c9c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetForces</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4b1b6dd3b89f95b180ae52d218fa2529</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a239536fe3dd1c90a61df5daef756c6c3</anchor>
      <arglist>(size_t _index, double _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0d7dfd14b7dd03966fe2f3ee4dd44f9c</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a519aa0436a37c5df20b49251afb74c61</anchor>
      <arglist>(size_t _index, double _force)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a11b47e7aaf37e6bd4488fcccc60eac4b</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVelocityChange</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a7f7517a0111d744d0fd38ea58a71ca0c</anchor>
      <arglist>(size_t _index, double _velocityChange)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getVelocityChange</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ada49c4e58069f1ee2163914caeb9cde6</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a35a03cc529f1fbc38a6a34a75210f4b9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af98372da408d793a6400191a8cc56a80</anchor>
      <arglist>(size_t _index, double _impulse)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a3142b9c13b1ccf2d341066e5063ce756</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a152786ea424158e245871374070f4d32</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>integratePositions</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4352d854bb6c323cc030e0d067cf6995</anchor>
      <arglist>(double _dt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>integrateVelocities</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af274e5caf2a79342ea204806821dd984</anchor>
      <arglist>(double _dt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4627c9e30893a61719056bc0dd505b9c</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q2, const Eigen::VectorXd &amp;_q1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSpringStiffness</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a3e685436776efd88085346a748f59601</anchor>
      <arglist>(size_t _index, double _k)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getSpringStiffness</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa3717ae9cac29221ec337e064dab2784</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRestPosition</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a630d3a61de232fc0b7c4d5bd5d5d6567</anchor>
      <arglist>(size_t _index, double _q0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getRestPosition</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa6bbaaf30f2befca1e32a62070dfe7ff</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a6fb19125adbd63e8ef8627d6b3beb9e6</anchor>
      <arglist>(size_t _index, double _coeff)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac3c918037d16f934e1d9503ea4408842</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCoulombFriction</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a749931814d7ffc07be0eaffe81533378</anchor>
      <arglist>(size_t _index, double _friction)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getCoulombFriction</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a32daa8f27731b566e10cbb0fb32d3936</anchor>
      <arglist>(size_t _index) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>registerDofs</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa5fbcf670b519197d2ea11e23fb7c020</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateLocalSpatialVelocity</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aa8f9e4eb18d423a8c0d0cd4f69765c9e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateLocalSpatialAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a2c45a76b054a0f3c27fdbb9c5d7dd457</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateLocalPrimaryAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ab402b4a9aa39035df9e9098b83a47e9d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addVelocityTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>af13fd51ad3af5bf73e9cf907fec34559</anchor>
      <arglist>(Eigen::Vector6d &amp;_vel)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setPartialAccelerationTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac4c911980f955947e9689316df7e370a</anchor>
      <arglist>(Eigen::Vector6d &amp;_partialAcceleration, const Eigen::Vector6d &amp;_childVelocity)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addAccelerationTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a6222aaefc61ae809a5d82542d7334eb9</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addVelocityChangeTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac18a70e8c0790768a4a9fc60796b1866</anchor>
      <arglist>(Eigen::Vector6d &amp;_velocityChange)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addChildArtInertiaTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>acdee2e2b636776951d9e01c842e557dc</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addChildArtInertiaImplicitTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aaebeb23e43c0755ae5d3abf73c203b83</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertiaImplicit, const Eigen::Matrix6d &amp;_childArtInertiaImplicit)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateInvProjArtInertia</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a00c978cc89d7bfc00659d8ff6e93d803</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateInvProjArtInertiaImplicit</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a236b6ca4fd937ab219f181a0964903c1</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, double _timeStep)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addChildBiasForceTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ac9c46e0d69e5b358df7fcdbca02c780c</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce, const Eigen::Vector6d &amp;_childPartialAcc)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addChildBiasImpulseTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a4a0a7ec2ba4a787cce002a4f22e40f4f</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasImpulse, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasImpulse)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateTotalForce</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae08d011cc44595c665864393d3ecc166</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateTotalImpulse</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a078cc697928165d8657fb91772ddbf6c</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>resetTotalImpulses</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae8e0c2e86bf72d84e2fa4069834a59bf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateAcceleration</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae76f01fe9085f3a7632a39d838fcb748</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateVelocityChange</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a48374a535fd60cce8bf9aed401861b0c</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_velocityChange)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateForceID</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a017c92053276f2c207e68a5f7ce9fd36</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateForceFD</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0b4fdd4198dfadf29e0e93da08e32b51</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForcese, bool _withSpringForces)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateImpulseID</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ae915ee69860633c5eb28a8db43e675a9</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateImpulseFD</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a04d936e83d32d592d9004c7aabf7cace</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aba7ae136431ecc85c87f98c5e230c623</anchor>
      <arglist>(double _timeStep)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addChildBiasForceForInvMassMatrix</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0ec73e8e6df9f413db9b44f47f83388e</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addChildBiasForceForInvAugMassMatrix</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ad1c9ecdabab1bb655883d3e817a169e6</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>updateTotalForceForInvMassMatrix</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a01b5842801994555d3bf7edf39d497ee</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>getInvMassMatrixSegment</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>add51be45313ae90bed4b99249809fb1b</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>getInvAugMassMatrixSegment</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>aad7d19d47bc7d0ad65057b6616f4f510</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>addInvMassMatrixSegmentTo</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a85c7b150e987b27288c0d1f87f703063</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getSpatialToGeneralized</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a0747e996d2d09f934345b7f8b1942e14</anchor>
      <arglist>(const Eigen::Vector6d &amp;_spatial)=0</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>ab59408dd3d4e7a025ca332d546a5688b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>SoftBodyNode</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a90a04ea25f677ead394ad8d4ebe0133b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d6/d5b/classdart_1_1dynamics_1_1Joint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Joint::Properties</name>
    <filename>d8/d60/structdart_1_1dynamics_1_1Joint_1_1Properties.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>d8/d60/structdart_1_1dynamics_1_1Joint_1_1Properties.html</anchorfile>
      <anchor>a8531ad8852dee9a680ee6e72221b7cda</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::LineSegmentShape</name>
    <filename>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>LineSegmentShape</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a9018a109d55502935c7b4429b546decc</anchor>
      <arglist>(float _thickness=1.0f)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LineSegmentShape</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>ae4a47f436808d27b764b254170444071</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v1, const Eigen::Vector3d &amp;_v2, float _thickness=1.0f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setThickness</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a23e097569abf296a12d617056e8a0607</anchor>
      <arglist>(float _thickness)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getThickness</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a5e8ea175abc7e5e89e837fde1ee9b50a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>addVertex</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a3025cfa9bdca1dcebd43401c0e6f8054</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>addVertex</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a3ac3509130f40fa1864451924bf32f7f</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v, size_t _parent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeVertex</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>af1ce04db66fcbbe4eba9c88d50523caa</anchor>
      <arglist>(size_t _idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertex</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>aeb204b0b4c3224c0cb939fca5fa2e4d8</anchor>
      <arglist>(size_t _idx, const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getVertex</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>af49827df114622c6a1def5b305cc2868</anchor>
      <arglist>(size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Eigen::Vector3d &gt; &amp;</type>
      <name>getVertices</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a9249fbf049af2ca02a828903c6cf1420</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConnection</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>aa6e844a3f525826cf9454d262cd71e05</anchor>
      <arglist>(size_t _idx1, size_t _idx2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeConnection</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a8abf32b7e2400ebfb3a0a3b534e90d3c</anchor>
      <arglist>(size_t _vertexIdx1, size_t _vertexIdx2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeConnection</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a397d37b32db2406ae94cf4220a3169d0</anchor>
      <arglist>(size_t _connectionIdx)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::aligned_vector&lt; Eigen::Vector2i &gt; &amp;</type>
      <name>getConnections</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a291b7ee69ac4906026a885979e261119</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a297622a8ecae174996179ccba02134ef</anchor>
      <arglist>(renderer::RenderInterface *_ri, const Eigen::Vector4d &amp;_color, bool _useDefaultColor) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>ae23d10359b8b875f04e7514965d68f43</anchor>
      <arglist>(double _mass) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeVolume</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>ae0c822429742df6c87afe468a4d7edff</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mThickness</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a35e6805d7d5eee797073d61f03316414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Eigen::Vector3d &gt;</type>
      <name>mVertices</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a3e2eeaaca28476cb71715983ac1adeee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::aligned_vector&lt; Eigen::Vector2i &gt;</type>
      <name>mConnections</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a70f705927143fd2b577f8d5920100691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Eigen::Vector3d</type>
      <name>mDummyVertex</name>
      <anchorfile>d1/ddd/classdart_1_1dynamics_1_1LineSegmentShape.html</anchorfile>
      <anchor>a025cc816ddee9ca11e78ce9f73fad261</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Recording</name>
    <filename>df/d79/structdart_1_1dynamics_1_1Recording.html</filename>
    <member kind="function">
      <type></type>
      <name>Recording</name>
      <anchorfile>df/d79/structdart_1_1dynamics_1_1Recording.html</anchorfile>
      <anchor>a2fef3302bd4a7516a1a3fa8f4fc964d9</anchor>
      <arglist>(BodyNode *_node=nullptr, int _count=0)</arglist>
    </member>
    <member kind="variable">
      <type>BodyNode *</type>
      <name>mNode</name>
      <anchorfile>df/d79/structdart_1_1dynamics_1_1Recording.html</anchorfile>
      <anchor>af297e36a5b11db82b5e40477eb807375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mCount</name>
      <anchorfile>df/d79/structdart_1_1dynamics_1_1Recording.html</anchorfile>
      <anchor>aa01a485f3492cbc94c52634f1b6ee326</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Linkage</name>
    <filename>d8/d57/classdart_1_1dynamics_1_1Linkage.html</filename>
    <base>dart::dynamics::ReferentialSkeleton</base>
    <class kind="struct">dart::dynamics::Linkage::Criteria</class>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Linkage::Criteria</name>
    <filename>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</filename>
    <class kind="struct">dart::dynamics::Linkage::Criteria::Target</class>
    <class kind="struct">dart::dynamics::Linkage::Criteria::Terminal</class>
    <member kind="enumeration">
      <type></type>
      <name>ExpansionPolicy</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a7be901a9cffcbcf39946b5c3a91e46bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INCLUDE</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a7be901a9cffcbcf39946b5c3a91e46bca6ebcc4392553d81cf86437a479e07264</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>EXCLUDE</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a7be901a9cffcbcf39946b5c3a91e46bca6a4d4c5d8faab1a36cfbf96b48abc571</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DOWNSTREAM</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a7be901a9cffcbcf39946b5c3a91e46bca7c091fdce5ae9bbe012f8a099db17ed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UPSTREAM</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a7be901a9cffcbcf39946b5c3a91e46bca37126a60abacad226db7d89f4ad476f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>satisfy</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a6ad88b5c15e67aa849745e78635ff962</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Target</type>
      <name>mStart</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a01069aa5779ae1a59e3e7bad301fb9df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Target &gt;</type>
      <name>mTargets</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a32aff57b36e113c5de2aedd181bd21b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Terminal &gt;</type>
      <name>mTerminals</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a48c52cc69af5d1491593045e1db28db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>refreshTerminalMap</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>aa0e0f11feae69ccdde12d2e43913d693</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>expansionPolicy</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a19f2b53c61519720955984b79b7b701b</anchor>
      <arglist>(BodyNode *_start, ExpansionPolicy _policy, std::vector&lt; BodyNode * &gt; &amp;_bns) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>expandDownstream</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a7f7218cdd079f67f9c042ad613063033</anchor>
      <arglist>(BodyNode *_start, std::vector&lt; BodyNode * &gt; &amp;_bns, bool _includeStart) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>expandUpstream</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a97c27425b30c4c3eb92ee509f796f6b1</anchor>
      <arglist>(BodyNode *_start, std::vector&lt; BodyNode * &gt; &amp;_bns, bool _includeStart) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>expandToTarget</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>ae7280a662e494b5433352dd8521a344a</anchor>
      <arglist>(const Target &amp;_start, const Target &amp;_target, std::vector&lt; BodyNode * &gt; &amp;_bns) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>climbToTarget</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>ad0c4e918d6ac89a58005db89741661a5</anchor>
      <arglist>(BodyNode *_start, BodyNode *_target) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>climbToCommonRoot</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>afdde502ec7e666514f5af0767bc4e3f1</anchor>
      <arglist>(const Target &amp;_start, const Target &amp;_target, bool _chain) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>trimBodyNodes</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>a9ccae89c381dabd9a580337773b0027a</anchor>
      <arglist>(std::vector&lt; BodyNode * &gt; &amp;_bns, bool _chain, bool _movingUpstream) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; BodyNode *, bool &gt;</type>
      <name>mMapOfTerminals</name>
      <anchorfile>de/d88/structdart_1_1dynamics_1_1Linkage_1_1Criteria.html</anchorfile>
      <anchor>ab5eda4b2b1c47493aee228ab5c80c2b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Linkage::Criteria::Target</name>
    <filename>d0/de1/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Target.html</filename>
    <member kind="function">
      <type></type>
      <name>Target</name>
      <anchorfile>d0/de1/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Target.html</anchorfile>
      <anchor>acfd147000f56852294a79c06df50193e</anchor>
      <arglist>(BodyNode *_target=nullptr, ExpansionPolicy _policy=INCLUDE, bool _chain=false)</arglist>
    </member>
    <member kind="variable">
      <type>WeakBodyNodePtr</type>
      <name>mNode</name>
      <anchorfile>d0/de1/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Target.html</anchorfile>
      <anchor>a752206a856fa396d0a58f00e9766123a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExpansionPolicy</type>
      <name>mPolicy</name>
      <anchorfile>d0/de1/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Target.html</anchorfile>
      <anchor>aa7c258c80b6db10fa71d612bd9b99e48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mChain</name>
      <anchorfile>d0/de1/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Target.html</anchorfile>
      <anchor>a6b7abbac3f472bcf5f8a0713ac3bb1f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Linkage::Criteria::Terminal</name>
    <filename>d4/d49/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Terminal.html</filename>
    <member kind="function">
      <type></type>
      <name>Terminal</name>
      <anchorfile>d4/d49/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Terminal.html</anchorfile>
      <anchor>adaab8c45f9cd35bf3d1feb65e6e41733</anchor>
      <arglist>(BodyNode *_terminal=nullptr, bool _inclusive=true)</arglist>
    </member>
    <member kind="variable">
      <type>WeakBodyNodePtr</type>
      <name>mTerminal</name>
      <anchorfile>d4/d49/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Terminal.html</anchorfile>
      <anchor>a84cca8df926924a86d171169cf35d013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mInclusive</name>
      <anchorfile>d4/d49/structdart_1_1dynamics_1_1Linkage_1_1Criteria_1_1Terminal.html</anchorfile>
      <anchor>a55254dba11e32b98ea74cabd88080fb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Marker</name>
    <filename>db/d20/classdart_1_1dynamics_1_1Marker.html</filename>
    <class kind="struct">dart::dynamics::Marker::Properties</class>
    <member kind="enumeration">
      <type></type>
      <name>ConstraintType</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>abf12fda6c4c28ac7c13a174e48ced31c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NO</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>abf12fda6c4c28ac7c13a174e48ced31ca8c87070614bd6061dd6273c40031e33f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>HARD</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>abf12fda6c4c28ac7c13a174e48ced31cad7fe116edd099cd2213828a477117d41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SOFT</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>abf12fda6c4c28ac7c13a174e48ced31cadd5bc06d7e67103cd748f8a7ab315d74</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Marker</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a865fbb99c57f5c3b14c05590c85061f1</anchor>
      <arglist>(const std::string &amp;_name, const Eigen::Vector3d &amp;_offset, BodyNode *_bodyNode, ConstraintType _type=NO)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Marker</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>ab8f2f4281a1ed999a146a1f60e2e6725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>afabccbbe6f9605c938b305d8f2f1d1eb</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, bool _offset=true, const Eigen::Vector4d &amp;_color=Eigen::Vector4d::Identity(), bool _useDefaultColor=true) const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a4461f7a28e3ed7df9f2e15e7c93bc8c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a304ad05cdaf7a4b509d1b577269310bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getLocalPosition</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>aa45ba035138b7fcf9b1a5a913434a106</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocalPosition</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a7e37770f348d2680fb4f6236b3093a79</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getWorldPosition</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>ab9540c2d2342fef3eaae7b447c70e45c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>aa36106e528a94af325dbf23f7d5d0ba2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSkeletonIndex</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a348925e935dab4e79feee472a9983d56</anchor>
      <arglist>(int _idx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getID</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>abb94ae64171cede1b442517f18f01f9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a774cc7e75bbc29a6059a6eb9d9b6685b</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>ad936a2b9535a1c18bd3d76a70c200e2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstraintType</type>
      <name>getConstraintType</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a6539d7277e70cb75fd732583e0058c2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintType</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>ac135f4af1115a229d1c931c1932ba0a3</anchor>
      <arglist>(ConstraintType _type)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Marker</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a4d5e19a2792d68f17f3d84b5bb7f0657</anchor>
      <arglist>(const Properties &amp;_properties, BodyNode *_parent)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mProperties</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>abb5dea5dd11d660abb83968ff165ecd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BodyNode *</type>
      <name>mBodyNode</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a5efa4f8ce6b0ce0acd2bbbf3804c2757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mSkelIndex</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a963a1bd1b1da44c8fa8c8c4477109151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mID</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a4f706ac3268e88f6e6a9499cff052802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static int</type>
      <name>msMarkerCount</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>abec01dbc256f15cb2d785b946b4581b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BodyNode</name>
      <anchorfile>db/d20/classdart_1_1dynamics_1_1Marker.html</anchorfile>
      <anchor>ab59408dd3d4e7a025ca332d546a5688b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Marker::Properties</name>
    <filename>d8/d3f/structdart_1_1dynamics_1_1Marker_1_1Properties.html</filename>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d8/d3f/structdart_1_1dynamics_1_1Marker_1_1Properties.html</anchorfile>
      <anchor>a1d083406acd5758f581d3c114831c9cc</anchor>
      <arglist>(const std::string &amp;_name=&quot;&quot;, const Eigen::Vector3d &amp;_offset=Eigen::Vector3d::Zero(), ConstraintType _type=NO)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>d8/d3f/structdart_1_1dynamics_1_1Marker_1_1Properties.html</anchorfile>
      <anchor>ae89e8edd8ceb6d6275f7154a706fb6e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mOffset</name>
      <anchorfile>d8/d3f/structdart_1_1dynamics_1_1Marker_1_1Properties.html</anchorfile>
      <anchor>a47f2a2fa9ce3db0aa006ff1e32cd0e69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ConstraintType</type>
      <name>mType</name>
      <anchorfile>d8/d3f/structdart_1_1dynamics_1_1Marker_1_1Properties.html</anchorfile>
      <anchor>a21c874fe05dced9199f116b0678afdcf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::MeshShape</name>
    <filename>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_updateBoundingBoxDim</name>
      <anchorfile>d0/d2d/classdart_1_1dynamics_1_1MeshShape.html</anchorfile>
      <anchor>a0708cd3afedbc00f99ef9d90dccae3d9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::MetaSkeleton</name>
    <filename>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</filename>
    <base>dart::common::Subject</base>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a6f1a8a8817d901853133b1109c71a48d</anchor>
      <arglist>(const std::string &amp;_name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ad9d0dc2c7f004dfb71d6fee0683ca6e2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumBodyNodes</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aaaa690d296ab136cd760baf1ee9f0a5d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a906fef3cc2a657ec49291cdc8c1daeef</anchor>
      <arglist>(size_t _idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>adde355dadd7d73177a1a8d9e5ab61110</anchor>
      <arglist>(size_t _idx) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; BodyNode * &gt; &amp;</type>
      <name>getBodyNodes</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aa39e76de5829c06168e653062d5db7e1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; const BodyNode * &gt; &amp;</type>
      <name>getBodyNodes</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a34f11035f0a16ccaee45c96d68845faf</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aac9b2e37d57326b3d77e8d881e11aaff</anchor>
      <arglist>(const BodyNode *_bn, bool _warning=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumJoints</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>abc106f90e6b5f146eb11411c9f159de2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Joint *</type>
      <name>getJoint</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac82144b017fe762e65518802a10890a4</anchor>
      <arglist>(size_t _idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Joint *</type>
      <name>getJoint</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>acf7383401ada41aeed70fdc6cb8ed912</anchor>
      <arglist>(size_t _idx) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a414dee8e8afa0c504f93f56b089a6c00</anchor>
      <arglist>(const Joint *_joint, bool _warning=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumDofs</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>af05a223766d686843a8b099e66aa81d1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a92aa5b4d3f416358c1a1757a267ee2a1</anchor>
      <arglist>(size_t _idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a7e997ada1707acdfe238f83b453a0ccb</anchor>
      <arglist>(size_t _idx) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; DegreeOfFreedom * &gt; &amp;</type>
      <name>getDofs</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a17a262fcf000113dab82e95a7e8ed870</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>getDofs</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a61c592755183aa6671165cdaf3cd82ea</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a15819ed2e2f01f79d9777194f2cf56a7</anchor>
      <arglist>(const DegreeOfFreedom *_dof, bool _warning=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a912cf17de72c50a9bfe31b52f2a1a75e</anchor>
      <arglist>(const JacobianNode *_node) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a490e4c3d3e67c5b3f55fba6ac627c010</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a90b3b2cf1a72a981e96111e199cf1772</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a0331bc933f5fe914134918899c060ec9</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac1083532af5b277abc53401d978a61d7</anchor>
      <arglist>(const JacobianNode *_node) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab12b66d6b114cff5fd41eab5682efb86</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a28925ae0bc27d473bf9e6aa8a1431ac5</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a55daf00be7b427076cdab6955282c05d</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::AngularJacobian</type>
      <name>getAngularJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab3d19408ad580c9df1644fcb8c2ce7de</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>acb50bb8bed6cfc0a865a02a23f5afd26</anchor>
      <arglist>(const JacobianNode *_node) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a8bcb55f7386ee5eaef17144e94a26c60</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ae893b9ada7976ac6de688ea1e6412f91</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aaff83a1576a0f9a8acd439f25323c4ec</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a662748d70921bdfb0156b263f9d10f22</anchor>
      <arglist>(const JacobianNode *_node) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a246093a2127b1d4f6a7ed0e60081bb48</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a8dd0c06856314d6074533d11b5299d7c</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a05c24b46eddd0beebd0487641a6ba0c6</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a9d98286de6fc56c4700c5ae7d2b22fcd</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset=Eigen::Vector3d::Zero(), const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::AngularJacobian</type>
      <name>getAngularJacobianDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a3c6aafc7051580ddb48e928d935c09a9</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getMass</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a3cee7051450118bd105d704f3aff2d83</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::MatrixXd &amp;</type>
      <name>getMassMatrix</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ae1035dc055fc0371a828dc0c6c81a602</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::MatrixXd &amp;</type>
      <name>getAugMassMatrix</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab7d122c509fbb7236a3e4c04749dbbf0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::MatrixXd &amp;</type>
      <name>getInvMassMatrix</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aaeec2539bafde71c42b54f5bb7f2c6c6</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::MatrixXd &amp;</type>
      <name>getInvAugMassMatrix</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ab89ca4f16ffc79c783ce1f602608d1ee</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::VectorXd &amp;</type>
      <name>getCoriolisForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a4fcd6e2daaf66f9f0eceac27bbef7ef7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::VectorXd &amp;</type>
      <name>getGravityForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a98877f105477ec75d21f3d073b2ac15e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::VectorXd &amp;</type>
      <name>getCoriolisAndGravityForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>acebaf1036f3a985cf88bb8b81caea51a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::VectorXd &amp;</type>
      <name>getExternalForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>aabbedb06e10d34df0759623a89bc95c7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Eigen::VectorXd &amp;</type>
      <name>getConstraintForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>acc91c08770edce0d1b53ae3bbc193d6a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clearExternalForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a3682740dac6801983295b5bcae9a554e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clearInternalForces</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a8bdce217c2d8292a4d1366879bc8dab6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getKineticEnergy</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a15744ae937928567ca69384b5e6df963</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getPotentialEnergy</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a9be9c8acefe927db06e9742f84405393</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Vector3d</type>
      <name>getCOM</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a1077e6235273ac26b36a513a340cf1e0</anchor>
      <arglist>(const Frame *_withRespectTo=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Vector6d</type>
      <name>getCOMSpatialVelocity</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a8f988963d9fafb5a6ae0b5e065c18ef8</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Vector3d</type>
      <name>getCOMLinearVelocity</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a1aab3cdbb048171e931faf3931a3c8c6</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Vector6d</type>
      <name>getCOMSpatialAcceleration</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ade3cad0b2002051d1e4127ffe64ad705</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Vector3d</type>
      <name>getCOMLinearAcceleration</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a3fa6fac084eb25eba364fc0ebd6d916d</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getCOMJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a5636ef2c3615dc21185bf565a9d0eb17</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getCOMLinearJacobian</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ae0bc8bd13935617151ee0ee96fcd260f</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::Jacobian</type>
      <name>getCOMJacobianSpatialDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>a91e57d7900985f5d4a4c86892bc233f9</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual math::LinearJacobian</type>
      <name>getCOMLinearJacobianDeriv</name>
      <anchorfile>d4/d4a/classdart_1_1dynamics_1_1MetaSkeleton.html</anchorfile>
      <anchor>ac06fcbd68628926fd58515e021ee33ec</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::NodeDestructor</name>
    <filename>de/ddb/classdart_1_1dynamics_1_1NodeDestructor.html</filename>
    <member kind="function">
      <type></type>
      <name>NodeDestructor</name>
      <anchorfile>de/ddb/classdart_1_1dynamics_1_1NodeDestructor.html</anchorfile>
      <anchor>a29de015cf0c4b1eb8710e1f3f306a0e7</anchor>
      <arglist>(Node *_node)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeDestructor</name>
      <anchorfile>de/ddb/classdart_1_1dynamics_1_1NodeDestructor.html</anchorfile>
      <anchor>adb5b9d45cbb6dbcf8d4e1c221b6496de</anchor>
      <arglist>(const NodeDestructor &amp;_other)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NodeDestructor</name>
      <anchorfile>de/ddb/classdart_1_1dynamics_1_1NodeDestructor.html</anchorfile>
      <anchor>a50bbbcac7286ce81f9c42cb408168631</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Node *</type>
      <name>mNode</name>
      <anchorfile>de/ddb/classdart_1_1dynamics_1_1NodeDestructor.html</anchorfile>
      <anchor>af23a7368f5681345fd9b603cda9dee8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Node</name>
    <filename>db/dc8/classdart_1_1dynamics_1_1Node.html</filename>
    <base virtualness="virtual">dart::common::Subject</base>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; NodeDestructor &gt;</type>
      <name>getOrCreateDestructor</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>ab1f0bd39805f5a240d18781feb7c0fa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BodyNode</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>ab59408dd3d4e7a025ca332d546a5688b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateNodePtr</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a1a3d8e9e0914d57bab6a8b9ef2cc21dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TemplateWeakNodePtr</name>
      <anchorfile>db/dc8/classdart_1_1dynamics_1_1Node.html</anchorfile>
      <anchor>a1dc904ae4e952e78708ec0f6cfe0e22e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::AccessoryNode</name>
    <filename>df/d31/classdart_1_1dynamics_1_1AccessoryNode.html</filename>
    <base virtualness="virtual">dart::dynamics::Node</base>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::PlanarJoint</name>
    <filename>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</filename>
    <base>MultiDofJoint&lt; 3 &gt;</base>
    <class kind="struct">dart::dynamics::PlanarJoint::Properties</class>
    <class kind="struct">dart::dynamics::PlanarJoint::UniqueProperties</class>
    <member kind="enumeration">
      <type></type>
      <name>PlaneType</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>ac5eacbdd8bd47fa946ce7dd6e0477f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PT_XY</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>ac5eacbdd8bd47fa946ce7dd6e0477f78a52e534736e15e106e7943f5ff9300a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PT_YZ</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>ac5eacbdd8bd47fa946ce7dd6e0477f78a0703ba5743b0e8eab703ad458c918db3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PT_ZX</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>ac5eacbdd8bd47fa946ce7dd6e0477f78aa110f6d853fc567456de59f30b221f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PT_ARBITRARY</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>ac5eacbdd8bd47fa946ce7dd6e0477f78a93b0b423401c92649d42a49c6a28f899</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlanarJoint</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a40185fc29c7fb48dfa9d2c61d629d445</anchor>
      <arglist>(const PlanarJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PlanarJoint</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>af85cf4a3097b1d64dc7c83e6e80bd41a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a26d7e67a09a44b9e0d4e2893068e11df</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>ac834dace40819fb46c42ab769906b3f3</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getPlanarJointProperties</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a85c9cf403eacb5c63862415f4cb0355d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>afee4e7eeda0ae2f366b646ddd43effaf</anchor>
      <arglist>(const PlanarJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a43fbe8b3cd1ff9e5ebc33beb7fcf83e1</anchor>
      <arglist>(const PlanarJoint *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>PlanarJoint &amp;</type>
      <name>operator=</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a6d8c4310c2722f1810386981bcea22c9</anchor>
      <arglist>(const PlanarJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a971596c917c26818d31e8afc0deaf838</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCyclic</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>ad0e9e94d76d54e9d011b8b2e8b2bd6f4</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXYPlane</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>ab52c4a495256852e1bb3ddd72954270d</anchor>
      <arglist>(bool _renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYZPlane</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>af9d194ccb052b8cf44b1a75baaaab584</anchor>
      <arglist>(bool _renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZXPlane</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a807ec09e1696c077004eabb3be46cab7</anchor>
      <arglist>(bool _renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setArbitraryPlane</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>af21c664ccfa1fdad5b240866dcf1eca3</anchor>
      <arglist>(const Eigen::Vector3d &amp;_transAxis1, const Eigen::Vector3d &amp;_transAxis2, bool _renameDofs=true)</arglist>
    </member>
    <member kind="function">
      <type>PlaneType</type>
      <name>getPlaneType</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a7d2af72aeaa39019e12170357d362f22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getRotationalAxis</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a9bf2075ea6c8ffc3c80ccd8d3edc3975</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getTranslationalAxis1</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>aa9a822c23707c0d545d55c4142b6eb8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getTranslationalAxis2</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a32504b4025081d4d6b70022caf57044e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 6, 3 &gt;</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>af9b35056cfdd63ef692c60a882004521</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a9f023c0b1937cf530c27524fa95c5e68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PlanarJoint</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a1b07a03d94a6dc3d0a87817f4d4a674e</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Joint *</type>
      <name>clone</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a6205110329a5206938cb49d663adbcc7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a24f8df559c3ee386d01785a1a8b1eb95</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalTransform</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>aba4c96b0003f7b0e1df315d32423e797</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobian</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a879d031f725ba9687deccf3656b5a4e7</anchor>
      <arglist>(bool=true) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobianTimeDeriv</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a8d4cfe14270c8025c3d8889b3db05490</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mPlanarP</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a95486eb47b4c4e00b1b10b2f925e39e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>da/d0e/classdart_1_1dynamics_1_1PlanarJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::PlanarJoint::Properties</name>
    <filename>d6/d56/structdart_1_1dynamics_1_1PlanarJoint_1_1Properties.html</filename>
    <base>dart::dynamics::MultiDofJoint::Properties</base>
    <base>dart::dynamics::PlanarJoint::UniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d6/d56/structdart_1_1dynamics_1_1PlanarJoint_1_1Properties.html</anchorfile>
      <anchor>a426a79ab374b4ec911fa4f1ed4ffda8c</anchor>
      <arglist>(const MultiDofJoint&lt; 3 &gt;::Properties &amp;_multiDofProperties=MultiDofJoint&lt; 3 &gt;::Properties(), const PlanarJoint::UniqueProperties &amp;_planarProperties=PlanarJoint::UniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>d6/d56/structdart_1_1dynamics_1_1PlanarJoint_1_1Properties.html</anchorfile>
      <anchor>a9ef32b6e07bdf800a2030215ec54a833</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d0/dc3/structdart_1_1dynamics_1_1PlanarJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a5b3eb068e2a19b5ff9a8aa8b74935962</anchor>
      <arglist>(PlaneType _planeType=PT_XY)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d0/dc3/structdart_1_1dynamics_1_1PlanarJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a437009af8b39e6f0e38c66320d138864</anchor>
      <arglist>(const Eigen::Vector3d &amp;_transAxis1, const Eigen::Vector3d &amp;_transAxis2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniqueProperties</name>
      <anchorfile>d0/dc3/structdart_1_1dynamics_1_1PlanarJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a8e4037e1af19218763e63d28f0e56a4b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXYPlane</name>
      <anchorfile>d0/dc3/structdart_1_1dynamics_1_1PlanarJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a13b819f710e534938d5bcdff6a649e93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYZPlane</name>
      <anchorfile>d0/dc3/structdart_1_1dynamics_1_1PlanarJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a794a11fe7f572e19733981e0f7b8dc1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZXPlane</name>
      <anchorfile>d0/dc3/structdart_1_1dynamics_1_1PlanarJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a3ba052e5f27299e522b47d39e6582edd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setArbitraryPlane</name>
      <anchorfile>d0/dc3/structdart_1_1dynamics_1_1PlanarJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>acf2421cb8741d8e1d2773bca699815f7</anchor>
      <arglist>(const Eigen::Vector3d &amp;_transAxis1, const Eigen::Vector3d &amp;_transAxis2)</arglist>
    </member>
    <member kind="variable">
      <type>PlaneType</type>
      <name>mPlaneType</name>
      <anchorfile>d0/dc3/structdart_1_1dynamics_1_1PlanarJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a2b0594ce65b508d3c1484111601bed6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mTransAxis1</name>
      <anchorfile>d0/dc3/structdart_1_1dynamics_1_1PlanarJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>abd5185d24ae93bb89693da55de1077a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mTransAxis2</name>
      <anchorfile>d0/dc3/structdart_1_1dynamics_1_1PlanarJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>afc7f95aca7af7b6573232ac99a6e251f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mRotAxis</name>
      <anchorfile>d0/dc3/structdart_1_1dynamics_1_1PlanarJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>ab30b0f5da16c4927144cbc853243b540</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::PlanarJoint::UniqueProperties</name>
    <filename>d0/dc3/structdart_1_1dynamics_1_1PlanarJoint_1_1UniqueProperties.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::PlaneShape</name>
    <filename>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>PlaneShape</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a7243a821411d9b883b2c1ea520c42c3d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_normal, double _offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlaneShape</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a004d3ca6187b5834025dcf004abe34b6</anchor>
      <arglist>(const Eigen::Vector3d &amp;_normal, const Eigen::Vector3d &amp;_point)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a61156178c8f59fdee9dbc0a80ba6f4d1</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, const Eigen::Vector4d &amp;_col=Eigen::Vector4d::Ones(), bool _default=true) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>ae0a4fcbb371d8f96c5f8e7156a1c7100</anchor>
      <arglist>(double _mass) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNormal</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a3ca8cd3857f836da605fb34303cf5458</anchor>
      <arglist>(const Eigen::Vector3d &amp;_normal)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getNormal</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a7feaeaaaa43f788750abf11ea926823c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOffset</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>af251e54278cfef1da211b0922e358cb3</anchor>
      <arglist>(double _offset)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOffset</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>ae2542f2bb10f09b5e12a93b25f145291</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNormalAndOffset</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a3b807d1edba96009c41c08c78ac84b68</anchor>
      <arglist>(const Eigen::Vector3d &amp;_normal, double _offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNormalAndPoint</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a1b7cd72b325223d3d3b3cc834fa52af1</anchor>
      <arglist>(const Eigen::Vector3d &amp;_normal, const Eigen::Vector3d &amp;_point)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeDistance</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>aa4e858a5bc3a4d9f8b552a012a3a8c51</anchor>
      <arglist>(const Eigen::Vector3d &amp;_point) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeSignedDistance</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>ad768ba8f5a08d1d9d1857f262dd2c6d2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_point) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>computeVolume</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>ac53135c3c01a3b27c963302876a82040</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mNormal</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a9027f36f592fcdcacc7cebb1a005eb9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mOffset</name>
      <anchorfile>d9/d4f/classdart_1_1dynamics_1_1PlaneShape.html</anchorfile>
      <anchor>a5f9837381bc76d79925feabbdc093ea1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::PointMass</name>
    <filename>d5/d55/classdart_1_1dynamics_1_1PointMass.html</filename>
    <base>dart::common::Subject</base>
    <class kind="struct">dart::dynamics::PointMass::Properties</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PointMass</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a516c86b07d09fb524720f2a4f9f2acc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInSoftBodyNode</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aab018d4128ac13a7ea7652836445f14f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMass</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2a02666ac35c4404009fbededf8ac135</anchor>
      <arglist>(double _mass)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMass</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aaf137b5fdd72cf08420ba8250b1715ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPsi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>afe3769c261d6e92c3087d29095ee8bd1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getImplicitPsi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2adf059c8b76a6e682d17c5314114eea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2e7639ce71527e73191db52617a8f6de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getImplicitPi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>abf16bf697753e4904282a3bcc9d8a824</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConnectedPointMass</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ac0719c87d37dd53a418e4589fca241e3</anchor>
      <arglist>(PointMass *_pointMass)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumConnectedPointMasses</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aeda62fa33d3a5d5d0f7fdbcd15156e9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PointMass *</type>
      <name>getConnectedPointMass</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ac4f7a30efae4da1413ebe906e289ce4a</anchor>
      <arglist>(size_t _idx)</arglist>
    </member>
    <member kind="function">
      <type>const PointMass *</type>
      <name>getConnectedPointMass</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a7da5f134e1bb343cac30586a14a247f0</anchor>
      <arglist>(size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColliding</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ab46bc6f844068db811751529af3d61b1</anchor>
      <arglist>(bool _isColliding)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isColliding</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a6d3b0ad79ab8b47601af1579be8b60c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumDofs</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a9c4dd4a39fce4622c10e9f5b886660cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a42365e7ef513b5a15a45bde726488680</anchor>
      <arglist>(size_t _index, double _position)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2b6ef7357769e8038a8465ba49a6ffbe</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>af9745e9a6849694a09230282e406b498</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getPositions</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2733238762bfc8e362cb46a228ffae27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPositions</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa3bae24fac0294804fb90f560f83cefb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ac84925611d75b8d9803b096dfc66bb9c</anchor>
      <arglist>(size_t _index, double _velocity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ab3ad1d0b433a9184a812223ebe7a795e</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa8d49c5ef0eefc383322f22c5c43999a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_velocities)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getVelocities</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa607490682c224ed445fcb8d3dc279fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocities</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a7bc244d8346e69165458a9042b5e25ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a5254c7a65cde7aa18ee5c72d027d5c75</anchor>
      <arglist>(size_t _index, double _acceleration)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ab3e31fee051a4935635dbd516f066391</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>af777e9e33df886c268da65c79d878965</anchor>
      <arglist>(const Eigen::Vector3d &amp;_accelerations)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getAccelerations</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aadcbe63ff32eddfa09d2b8291ea396ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getPartialAccelerations</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a62a3cd652213c650eef25b75b358ba1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAccelerations</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ad894c1c6203fcc1c4e86bd1dae2230f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aea3d85cca3543da200e4fbc0015bac9a</anchor>
      <arglist>(size_t _index, double _force)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a7bdfb7faa573984706a0d79d4898eab7</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aaabef4291aa1985c01125022b7a629e3</anchor>
      <arglist>(const Eigen::Vector3d &amp;_forces)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getForces</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a355d56ecf68c316a40422673d9499c30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetForces</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>acb6fa3637358d9b4f86e7b12d8746208</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityChange</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a326b005663910be2cad130509f11a54c</anchor>
      <arglist>(size_t _index, double _velocityChange)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityChange</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a70b01588cc246ec56f25c894efca8d0a</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a8a48843e820b76c4bf3b2805f43f6dbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a5409c350baba0940ea501adf26184740</anchor>
      <arglist>(size_t _index, double _impulse)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa28a949fb29adfad56d5f76f22cbdad7</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2bb1eba67e41b9d6d192605b7a994c33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integratePositions</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a16979f576f90cad3247c8a3066c4ced1</anchor>
      <arglist>(double _dt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateVelocities</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a1b04256000b6ca0f4f7f5bf42b0a72fb</anchor>
      <arglist>(double _dt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExtForce</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aab89de4ade62cbdcea161a5b08e61bc9</anchor>
      <arglist>(const Eigen::Vector3d &amp;_force, bool _isForceLocal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearExtForce</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>abcfba90a4ac1274adcd8fd7ee4e5843c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa1a8f35d048e979b6985f4da30c10791</anchor>
      <arglist>(const Eigen::Vector3d &amp;_constImp, bool _isLocal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConstraintImpulse</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a91b1c7ae586b8abd9865ca6e94544a74</anchor>
      <arglist>(const Eigen::Vector3d &amp;_constImp, bool _isLocal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearConstraintImpulse</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a34dddc85c8af755ae372763cda7c390c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getConstraintImpulses</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a262c71fbad64edf8e321b10177eb5529</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestingPosition</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ab0f2326306654a2cd084accd2a495a9a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_p)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getRestingPosition</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aff0e44b95c3c7af0c5ecce26fab82db3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getLocalPosition</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a54f38978ae4b901f7e9c515ec3554bf4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getWorldPosition</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aedfd17f73aafb91914d472fd9d8f443d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 3, Eigen::Dynamic &gt;</type>
      <name>getBodyJacobian</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>afce1060d927707a7821f31a7b78e9d50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 3, Eigen::Dynamic &gt;</type>
      <name>getWorldJacobian</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a28b8d68828ac56bca83851cbc83d8b47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getBodyVelocityChange</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a86aca29876829a5f4e17dd3142b3fc1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SoftBodyNode *</type>
      <name>getParentSoftBodyNode</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2e9e0e1b55129375ba27bee0ad165f69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const SoftBodyNode *</type>
      <name>getParentSoftBodyNode</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a238c256040815b7b79fcf490a68cf463</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getBodyVelocity</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa364e94f8322f6ce9e8c97962c6cfe51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getWorldVelocity</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>afb80516e7de350d9f128a4ab0ff5382c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getBodyAcceleration</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>afcf749a0d746739c62ed0c014791badc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getWorldAcceleration</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ad16ad4e4871dfb90f70e2de6e442077b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PointMass</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>add88bea1650723537d9ab81396b45067</anchor>
      <arglist>(SoftBodyNode *_softBodyNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ae7f9124fe333d4a2ede17d0622fde607</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a47730e1ba250a32e0d00368008d621f5</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, const Eigen::Vector4d &amp;_color=Eigen::Vector4d::Ones(), bool _useDefaultColor=true) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTransform</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a10c829e15c148a71ee5012adb8e091c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocity</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>af8449d2716e2e8f59767542c5fd9fc09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updatePartialAcceleration</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ab06808f6d445a5b7ea6f7d407960644a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateArtInertiaFD</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ae568ca18e83caf73aa2906f0525fcfd0</anchor>
      <arglist>(double _timeStep) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBiasForceFD</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a0da4bf852a8738e2f9142a9441671a1f</anchor>
      <arglist>(double _dt, const Eigen::Vector3d &amp;_gravity)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateBiasImpulseFD</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a9ca03d5ec48c2e108299c1d17e98991a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAccelerationID</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>adb544791ddd1aaec08f99f3e6e64656d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAccelerationFD</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a37aff16822df74c1789aa9c0ddccc5ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocityChangeFD</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a4de0a5f4a4f54ea84c1cc53e72d4f710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTransmittedForceID</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a5e1c92dc8ca9aeace72534759595c01c</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity, bool _withExternalForces=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTransmittedForce</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a86c80952d632b533e67947f5fff30a41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTransmittedImpulse</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a7c02bffd4f4f47acb54c59ade7198699</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateJointForceID</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a079fa56c5a13b06061261a5f2ee5556e</anchor>
      <arglist>(double _timeStep, double _withDampingForces, double _withSpringForces)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateConstrainedTermsFD</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>abb2b07f1b17f645a39e8e53491ea4a76</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateMassMatrix</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa8278587a1c7ff62289bb5c2a373ddc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateMassMatrix</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a0bd180d7a285a0b278dd5d5b9bf0d4f0</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MCol, int _col)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateAugMassMatrix</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ac1f6de3396fb75e47fbed9b402c617b8</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MCol, int _col, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvMassMatrix</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a206791576f94a2666a02bb260448192b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvAugMassMatrix</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a1abec22ebbb1f7382b3ccb8b1c9ab5fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateInvMassMatrix</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ac525b68784f1c88b7a649e947c4fd6f5</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MInvCol, int _col)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateInvAugMassMatrix</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a1d146b369a8db85ae45f102a33204fe6</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MInvCol, int _col, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateGravityForceVector</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a2fe94dc6e2aca9beaeb291c05c420fe4</anchor>
      <arglist>(Eigen::VectorXd &amp;_g, const Eigen::Vector3d &amp;_gravity)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCombinedVector</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a867168fafa67283bf2cf0d0fc5cd5773</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateCombinedVector</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>abef4ad51fe6dedf3c33e708cad0cccfd</anchor>
      <arglist>(Eigen::VectorXd &amp;_Cg, const Eigen::Vector3d &amp;_gravity)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>aggregateExternalForces</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa8b29077ce24ba993d00f777d85f1f49</anchor>
      <arglist>(Eigen::VectorXd &amp;_Fext)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mM_dV</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a05932f291f1293222795766b470bb285</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mM_F</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ad63cab304d815957b5b78c65e392d268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mBiasForceForInvMeta</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a313314cf4c37f8c2c27d9ffa85db2c1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mG_F</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ad78b2502ddc77742fc5b25e241daa6b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mCg_dV</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a5cba4d35bfb919b5536acb0380edf345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mCg_F</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a4a7efa8770b65f2d336f012b5d3509d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SoftBodyNode *</type>
      <name>mParentSoftBodyNode</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>af2039b7cfd0dac33825893dba93fbe7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mIndex</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a84f16d821c871b117d2577dabdc34a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mPositions</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ad802113ee913f86e1c67e56463614dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mPositionDeriv</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa8ff99f917ea1438280b2a6f2005c487</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mVelocities</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a328c5253c777ce4bcf341eeaf15fceef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mVelocitiesDeriv</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a36f95fe5093be35bfa1d65871849fb2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mAccelerations</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>adafdcdfeb55963c121e79b527b984f3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mAccelerationsDeriv</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a8b2acdef4e8cd7ae645f58d8738e41b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mForces</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a8eeef959317ae42223804938d071a50a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mForcesDeriv</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a92d96e4ed7ada229cf0d2b9b65c78113</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mVelocityChanges</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a97f4e17c1c3f2fa4c460b8850a18abc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mConstraintImpulses</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ab3d8b3646c651f07ef2fb0932a4ec0c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mW</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a1fd1c7ae8ce714d1943c75b1d5ecc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mX</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aa2d8f358236d3812d7db7dff1b10a97f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mV</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ac49dc6aee24791672573ab1bfba2eba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mEta</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a4c8230a0e998ec92cd986e924cce7df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mAlpha</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aed5a12dd970c37f2181393c355b44b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mBeta</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a338fab029248f204e05b245417a17fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mA</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>acf997b47d3febff63a6fa1e9bed92992</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mF</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a047434ed469362b9a54bffb1698a9446</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mPsi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a4b5c0858c9ed94e4a084cbed544cbba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mImplicitPsi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ac68e06f4afabc1bc32195bad9eacb6f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mPi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>acc85afcbd17949e2846415f061911460</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mImplicitPi</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a68a378830c101dae5d6bfab662186bcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mB</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a1d1369f40bb5aeeee78b78a397ea9eaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mFext</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a638540d9e3b416cb5857649ca1e47ab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>mDependentGenCoordIndices</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ac26a52357d0a9b363a73f0774688b089</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsColliding</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>ae841605a1dec1f858d5b234f7b7674a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mDelV</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a15a1ab1e4a7681d1db0affc2ceb0b937</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mImpB</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a1f57de358b4fec39a4117f840cfc5889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mImpAlpha</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a21c50dac78bfd86082d589c6d78124cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mImpBeta</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>aab08ed797e82ba257de751f0a0c2e3b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mImpF</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a4f96f51866052c64392b1d96e84c1f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PointMassNotifier *</type>
      <name>mNotifier</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a7797430bc9a7499d1a559c0e1adf1a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EllipsoidShape *</type>
      <name>mShape</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a794d6975aa687a6d6e2dc0cbbb23adc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>SoftBodyNode</name>
      <anchorfile>d5/d55/classdart_1_1dynamics_1_1PointMass.html</anchorfile>
      <anchor>a90a04ea25f677ead394ad8d4ebe0133b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::PointMass::Properties</name>
    <filename>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</filename>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a75642a65bbc129e926724142efacd3b5</anchor>
      <arglist>(const Eigen::Vector3d &amp;_X0=Eigen::Vector3d::Zero(), double _mass=0.0005, const std::vector&lt; size_t &gt; &amp;_connections=std::vector&lt; size_t &gt;(), const Eigen::Vector3d &amp;_positionLowerLimits=Eigen::Vector3d::Constant(-DART_DBL_INF), const Eigen::Vector3d &amp;_positionUpperLimits=Eigen::Vector3d::Constant(DART_DBL_INF), const Eigen::Vector3d &amp;_velocityLowerLimits=Eigen::Vector3d::Constant(-DART_DBL_INF), const Eigen::Vector3d &amp;_velocityUpperLimits=Eigen::Vector3d::Constant(DART_DBL_INF), const Eigen::Vector3d &amp;_accelerationLowerLimits=Eigen::Vector3d::Constant(-DART_DBL_INF), const Eigen::Vector3d &amp;_accelerationUpperLimits=Eigen::Vector3d::Constant(DART_DBL_INF), const Eigen::Vector3d &amp;_forceLowerLimits=Eigen::Vector3d::Constant(-DART_DBL_INF), const Eigen::Vector3d &amp;_forceUpperLimits=Eigen::Vector3d::Constant(DART_DBL_INF))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestingPosition</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a9f720dbf1631e2d1d68809e40614b9c7</anchor>
      <arglist>(const Eigen::Vector3d &amp;_x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMass</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>ac590ff1b6699a7423456b1c40c1d329c</anchor>
      <arglist>(double _mass)</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mX0</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a620828d1d90d43e794012750a4616abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMass</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a777070fbf90183563f3b78f7052966e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>mConnectedPointMassIndices</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>abee36c50744111ab34b98c17352c3520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mPositionLowerLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>afa2786ef209b7edd2e55b29660bbcd6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mPositionUpperLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a671dc80e93cb45a9a779cff122e4d646</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mVelocityLowerLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>ad161a57901146087fdbaca9098f77129</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mVelocityUpperLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a1c165372cb39fab715d7108868411c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mAccelerationLowerLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a1c2330ad823bf5f0c8e386da5758931b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mAccelerationUpperLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a4bfcc46857a08ce7299fedc1b922195e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mForceLowerLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a53e5eb5d39325f6a3903d3de6794591c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mForceUpperLimits</name>
      <anchorfile>d9/db4/structdart_1_1dynamics_1_1PointMass_1_1Properties.html</anchorfile>
      <anchor>a9dbaa58b2726b83ae71d02fc715d209d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::PointMassNotifier</name>
    <filename>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</filename>
    <base>dart::dynamics::Entity</base>
    <member kind="function">
      <type></type>
      <name>PointMassNotifier</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a77fc64aa5c54784d0289147e7776530f</anchor>
      <arglist>(SoftBodyNode *_parentSoftBody, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsPartialAccelerationUpdate</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a5d5a4cca4c2773616744e2cc6c9261d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearTransformNotice</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a4c821d4695764227f4c416a3514b150b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearVelocityNotice</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>aa1fd7a049151e36fa0454bd46e791af1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearPartialAccelerationNotice</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>ad97725caa5e25835ba119852d3d8689b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAccelerationNotice</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>ae33d550ec5dbf94596e88d621619e697</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyTransformUpdate</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>ae2e7e619ace6b2944ad57ba8cdada576</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyVelocityUpdate</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>ab791947d7e627628eab75106d6ce8b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyAccelerationUpdate</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a77aad6eb4d57bfa8b8835f1f88bae9e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mNeedPartialAccelerationUpdate</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a39de151ebd5ad3ff0c349477b7a2b74a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SoftBodyNode *</type>
      <name>mParentSoftBodyNode</name>
      <anchorfile>d5/d02/classdart_1_1dynamics_1_1PointMassNotifier.html</anchorfile>
      <anchor>a421ea71c96686d50787b780aba202120</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::PrismaticJoint</name>
    <filename>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</filename>
    <base>dart::dynamics::SingleDofJoint</base>
    <class kind="struct">dart::dynamics::PrismaticJoint::Properties</class>
    <class kind="struct">dart::dynamics::PrismaticJoint::UniqueProperties</class>
    <member kind="function">
      <type></type>
      <name>PrismaticJoint</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>ad2037bcb19b0112393d8ee5c9f9167d6</anchor>
      <arglist>(const PrismaticJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PrismaticJoint</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a2242017a4bc32794213e1bd57932ff79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a31bf2f59683ecf8bf31ded5b2f82ff28</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>aabaf6ae0a1d786621eef23f69de35fd1</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getPrismaticJointProperties</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a065a96ed47488ff9c67bd607d197c72b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a4adfbba6ca99f5427235f0a19f4dc10c</anchor>
      <arglist>(const PrismaticJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>ab6c29fffe9e83c831dde581e6fadc0d4</anchor>
      <arglist>(const PrismaticJoint *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>PrismaticJoint &amp;</type>
      <name>operator=</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a5864cbc3b4eb919be1d1fd4363743325</anchor>
      <arglist>(const PrismaticJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a02c7e6fbd73ec9dc7953eff29a81e712</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCyclic</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a6e882fa5cf367699ba724fd9e2ee1613</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>ae99a004f8ecbdb44db9ec5b51b726c64</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getAxis</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a19d7bdada0e84dffaee3431fb442be97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SingleDofJoint</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ad3d5b597732714fab4fef21e8d26d5cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a8a4718e550614a0fd8ea29bd60a5835d</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a2c7f7583e3ffbd3452a594cb8b829d28</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getSingleDofJointProperties</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a80f95101678da9d3255218389b193671</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ac16ae88b0666db4ba75a89b3b7de958e</anchor>
      <arglist>(const SingleDofJoint &amp;_otherSingleDofJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a7395de4d20a2b6a9b1727d55fcc78be0</anchor>
      <arglist>(const SingleDofJoint *_otherSingleDofJoint)</arglist>
    </member>
    <member kind="function">
      <type>SingleDofJoint &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a0496550e1e0014a24104366b984ca811</anchor>
      <arglist>(const SingleDofJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a3bb3f6e7c93a3dd4ac0fb1d18500be4b</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a0fa41ddb22ee8296cf02018078b3f0a4</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setDofName</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a1af4f529bac4c5641cce402df5d862b1</anchor>
      <arglist>(size_t _index, const std::string &amp;_name, bool _preserveName=true) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preserveDofName</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aef0c440a4575ae322b23b3630033f2e1</anchor>
      <arglist>(size_t _index, bool _preserve) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDofNamePreserved</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a0ddd73da94f007798f105be59db68b78</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDofName</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a932f3cc500c15b3c7a7068f9a69b4a48</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumDofs</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aaa7ee66f15cb3c2a79d8e84f8f6d2600</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a2e1686ccc1eb66d00429630d9ef05901</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ad90dba973d53e31c7e719446f432245d</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommand</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a431cff3ebbfcb458f51f07fe21c194e4</anchor>
      <arglist>(size_t _index, double _command) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCommand</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ab48ed94a5a0c14b21a36b178b2fc5adb</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommands</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a3bf1f8a45f526367cb902512781f0543</anchor>
      <arglist>(const Eigen::VectorXd &amp;_commands) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>acfad9739c635a1770103a637dd234829</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCommands</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a6888dcecd5fa15680be872299c7b03d9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a640aa2008725b5ff19ae8a5e2b6f3ada</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aed013c3ea6fb737b2472311154e71e65</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a6149fa913b7e1ab88f3b691784378df6</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a068e72dcca051e7731722512a0763426</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a2d14804bb57e0bf972360f5507343085</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ae833c8eeeb177437c752700c8c3cf460</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a067610660887b267c1b612522429f8bc</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ab31633299e98146816fcc7b682adea6c</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a97590ce1ab9156b016be5a8e2679ac0c</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPosition</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a886309f4f3aa51c1067941169a480c46</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPositions</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a0c66f516b1305fb83dc1f9a2d30ffbd4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPosition</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aa768d6706dd07a6bf2a2579dbf4e12fa</anchor>
      <arglist>(size_t _index, double _initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialPosition</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ae2971949e42179a9927a02c552357a29</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPositions</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a330c8d0694ecf8c5bcb7c28b1376f1ac</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialPositions</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ae2a87a61fd5b7b0b1f055fb4a7dc2fa8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a536363fc07892b4bf14cddf6f39f8464</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>af9cab37a4fb588ba3b40fd8481a9518f</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aaa319d57a12a98e1ae1525ddc9364182</anchor>
      <arglist>(const Eigen::VectorXd &amp;_velocities) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a0de03919f5b740b608335d7eaf6a24b1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a91714794da4a12d8818e3fe5973ffc72</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>af68653b7d33fe80f7ca10ba75a266de1</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a2732248eada670ca4dd30aef365a4429</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a31f7a0bc6805be2cb3d81e455e66c089</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocity</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>acaea9faea279bd00847290863fd905ff</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocities</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a96c9416ea371ff7bbecc163c855d5a37</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocity</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a999dff16fa75de65ccae66f9177c0dc9</anchor>
      <arglist>(size_t _index, double _initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialVelocity</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ae2e58d5c289c19d198787e872dcb1ded</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocities</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a2636635f35c0b31ac6fb6b3df7993ffb</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialVelocities</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a90c46399114a8e643e6d4e9dbff2bb79</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>acf4fc81ec52bcc078a137a8ac166536b</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a7a1ec3d352dc793dd6c1640cdd082729</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a889af1935e7b50977ea7e6b8c923a06a</anchor>
      <arglist>(const Eigen::VectorXd &amp;_accelerations) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aaf529f8e73188c7bece67628be6c3acd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAccelerations</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a57995417d49ec3ba9a2d6d0f23ea59d7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a384ecd4d56ef466bcdbffca6b103409c</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ac07b750876b7a4fd97b3b4a474df2c47</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a6763460a948b8096aea7faae6ac6a277</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a2f5d02c772929897009be60338c286ab</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionStatic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a699972609a277f090b0f2b3fd31d22ca</anchor>
      <arglist>(const double &amp;_position)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>getPositionStatic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aa70995930923c35ff8b24a75d2a86591</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityStatic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a910b54d8f38c06915c1aad3f1033cfcc</anchor>
      <arglist>(const double &amp;_velocity)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>getVelocityStatic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a94a79aa3ba3a7952689293549f07fcdc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationStatic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a45f345ed7a6d9b8860c6904893f2111f</anchor>
      <arglist>(const double &amp;_acceleration)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>getAccelerationStatic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a2c56171a663fb2b911e8f2cb42ff48de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a258fec5d57145d3a9fb50f7bba395900</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a796eb00322eafeab67a973c14cdec157</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aae02731f81975d5fffa22936c5464732</anchor>
      <arglist>(const Eigen::VectorXd &amp;_forces) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>af4c96a6023f5e010871e53217a11db91</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetForces</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a1c09ff1b6e29c3423264b8171a8077db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ae6badcdfd558a507fec37fe8887fbb80</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a6a7b1e1472cbda31b208e4ebe70600ae</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ae9103c56fd2f4fea7f42e9f14ae2dd39</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a8e9282b5fca338033bf31a7ba436c216</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVelocityChange</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a8d37d292e097a3bae0ad2a2d2bfd2f12</anchor>
      <arglist>(size_t _index, double _velocityChange) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getVelocityChange</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a77272223e30ecd3df0deee22c7302b1b</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ae23390e8bd30f1c37d0470cf8e24cfa0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a4ed036f5512165b137610c735d1fb3ed</anchor>
      <arglist>(size_t _index, double _impulse) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a5b787363daf9ca7eb635851b56cae57e</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a8294a53dabdf7daec2a2eba7725af3ee</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integratePositions</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a6ae016f315c69a841a484abaa56915f0</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integrateVelocities</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ae8a5dd16f7d2cf955725715800adbe83</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>afe79c57f70aa7112ca452d0a320560d8</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q2, const Eigen::VectorXd &amp;_q1) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionDifferenceStatic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>af9cb5caa4420e0d223570b548e639aba</anchor>
      <arglist>(double _q2, double _q1) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPotentialEnergy</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a34231bf77ac14c75778162196d6d3bba</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Vector6d</type>
      <name>getBodyConstraintWrench</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a675fc511f432f83c9ab831d736918640</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSpringStiffness</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a09f82fe38e0f5cc7d4c69e015afa9e30</anchor>
      <arglist>(size_t _index, double _k) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSpringStiffness</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a8c6244cc842475cdd1f0332fa4483fdf</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRestPosition</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a08ac697457b7c6acc94988ba53641349</anchor>
      <arglist>(size_t _index, double _q0) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRestPosition</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ab81b0ad4320bcc0a4875312b5fc44863</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a2dde174fdad8e51d3ff7e2c1fb2acfcf</anchor>
      <arglist>(size_t _index, double _d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a4e8559fbf0a27b1148ba7a47e42287c0</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCoulombFriction</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a01af15728c8f996187f25e212cf9fb99</anchor>
      <arglist>(size_t _index, double _friction) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getCoulombFriction</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a52f0b392cff5b01487826b4731916ca9</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>adaf8b545421de1d11d7ae426458169d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PrismaticJoint</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a89faf6500fd386259767d413d805a719</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Joint *</type>
      <name>clone</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a008b6655aa1cfa445eaa784a4ae5fb55</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalTransform</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a0411effd760fb842af166d93cd1110bd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobian</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a63ee001eded02fa0d0c53658b03f7e73</anchor>
      <arglist>(bool _mandatory=true) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobianTimeDeriv</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a29a98414b64edb857b5656005bea2c5b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SingleDofJoint</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a7472d54a32a54dbd9835ce301b1a9e0c</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerDofs</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a5d890ba1fe9f7a294ba21cf7771f81b6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a379c3902f9eb0ccebf94cba6122eba6d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvMassMatrix</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ae6586efb17a5ccf4ba7679f0080ba593</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvAugMassMatrix</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a98994dc036c6a2722c45bd621c1e4760</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForceForInvMassMatrix</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>abb7be1ea22820637473b02ba540a71aa</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvMassMatrixSegment</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>af82a89c7be6d9de1e44d2d3f375d3b2c</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvAugMassMatrixSegment</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ab3c9508f57b60ee9ce2501963fe5e72c</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addInvMassMatrixSegmentTo</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a433d0d347ebf0276bd7e634f8ba17780</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>getSpatialToGeneralized</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a7f712169309fbcbe266f661cb6a6c6b0</anchor>
      <arglist>(const Eigen::Vector6d &amp;_spatial) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalSpatialVelocity</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ac458717b97c9b23c2a44c3fd8475022f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalSpatialAcceleration</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a0989f90d1031058690d6d390184023d9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalPrimaryAcceleration</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aaa003cd2dc98c817d26a54b08420762e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a346a7cbe85a51634f74ef2601bb67af4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a87c205daa10cc7301f641408e14fc5e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aca1fcf4c5c9c1f12652dab408fd8cdf9</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const math::Jacobian</type>
      <name>getLocalJacobianTimeDeriv</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a085db3c2cd3b835ab4af49efdfdcec05</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Vector6d &amp;</type>
      <name>getLocalJacobianTimeDerivStatic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a7a41d922ef71b1f41f68748fa7c87387</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const double &amp;</type>
      <name>getInvProjArtInertia</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>af5e360829644ffb22ce15275e59802d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const double &amp;</type>
      <name>getInvProjArtInertiaImplicit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a4dc691a02e9fe864132029beeb55a3a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityTo</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a55d9ddaac850ba3b67e9822456a78ce9</anchor>
      <arglist>(Eigen::Vector6d &amp;_vel) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPartialAccelerationTo</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a1b6fccb10dc690974ad886985343cf44</anchor>
      <arglist>(Eigen::Vector6d &amp;_partialAcceleration, const Eigen::Vector6d &amp;_childVelocity) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addAccelerationTo</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a0a5258c48f8792e6630c70ce29cf8c48</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityChangeTo</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a69b920e5fa8c12808526d777832b19a7</anchor>
      <arglist>(Eigen::Vector6d &amp;_velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaTo</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>acc4ecdef94cc70c3d9f47fdb4536cd95</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaImplicitTo</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a5038e4c4d1c8e4c116b09329a4bf6508</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertia</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aa53c329e06d1586e17f3d8eeea4fcc5f</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a664d7bc4e99c4aec9934ed9db4a284b7</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceTo</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ac40905c324d1d097248992d268ba471c</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce, const Eigen::Vector6d &amp;_childPartialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasImpulseTo</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a5ad858bde9ea4a818fde4baf55f5b726</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasImpulse, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForce</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a6e2c0d8ec55599463386688e89a1637c</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalImpulse</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a07f6c45e6d32218f42bba3053c722bda</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetTotalImpulses</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a73bc097945513ffe5b29406c40d732c8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAcceleration</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aa0fe07eda76fbe4fec251709482abe39</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocityChange</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a2b4f9e0c9f9d15b9685649b763e9db2f</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateForceID</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a8cabeca36e673ab7864e341cc8a17c45</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateForceFD</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a17d20582c7a7b1ebdc221b493294ffd1</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateImpulseID</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>af78d521c6737965a3c0107f8cdcb17c5</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateImpulseFD</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a5d17cc982706418de6f4922d565e86d9</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a3829eab34ac1defeccb218aa7a7464b8</anchor>
      <arglist>(double _timeStep) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mPrismaticP</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>ac041b4c9f7589c56901da1f70a56f859</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mSingleDofP</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ae03b132ee37d88edf1da6fd77e6f28ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DegreeOfFreedom *</type>
      <name>mDof</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>af316d0d5db211f28ba460c43e69019cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mCommand</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ad4538e98e930c2cd67b240838221b3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mPosition</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a63faa0cc6f20a0a9c8e12bd93b3dc36c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mPositionDeriv</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a3f265fbf7a092b8016b0f8025d25b3c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mVelocity</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a25203b25f0b54f2914b36e151cec51ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mVelocityDeriv</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a5df2959ea664d99696670982e7e91566</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mAcceleration</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a69537a1ced3456a242ec0d1210c768e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mAccelerationDeriv</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a3ef02c16d3712b245ef534f2d24ed788</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mForce</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ad29dabb1751ba60e49ba0a5a8a0919f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mForceDeriv</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a70aaf2f8ca96122757ae6aac1cb0bd83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mVelocityChange</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a5dec4055f0cfd2f0816736e1007828bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mImpulse</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aead7cdba6e921cd26ac627484721d4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mConstraintImpulse</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a14e8bc627e94cd72905e2ca4c17fe5ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mJacobian</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aa200d5db8cf93c7a235609b27544c80c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mJacobianDeriv</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a37c5309609236eef06d9ecc2984605c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mInvProjArtInertia</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aa9f04a9816b9190273c6c04ec6676260</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mInvProjArtInertiaImplicit</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ad88b1ccc52c4c611fdcb4b3a4e8b6571</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTotalForce</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a4a32494fdc5c40d31549c72de9d1043d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTotalImpulse</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a7668bde01bb052952634ccb297f94d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mInvM_a</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a61a05269d5f6168829c71c89d84ad556</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mInvMassMatrixSegment</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ab7c8a2471863e502267d0cc0b8c2feb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>de/da9/classdart_1_1dynamics_1_1PrismaticJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::PrismaticJoint::Properties</name>
    <filename>da/d47/structdart_1_1dynamics_1_1PrismaticJoint_1_1Properties.html</filename>
    <base>dart::dynamics::SingleDofJoint::Properties</base>
    <base>dart::dynamics::PrismaticJoint::UniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>da/d47/structdart_1_1dynamics_1_1PrismaticJoint_1_1Properties.html</anchorfile>
      <anchor>ab475eced08a7f2f3df9923280a528fdd</anchor>
      <arglist>(const SingleDofJoint::Properties &amp;_singleDofProperties=SingleDofJoint::Properties(), const PrismaticJoint::UniqueProperties &amp;_prismaticProperties=PrismaticJoint::UniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>da/d47/structdart_1_1dynamics_1_1PrismaticJoint_1_1Properties.html</anchorfile>
      <anchor>a35ec460a22c1d63f3c4f3bdeee81c749</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d4/dd3/structdart_1_1dynamics_1_1SingleDofJoint_1_1Properties.html</anchorfile>
      <anchor>a47dace44bb6e538270ab8190efd18a5e</anchor>
      <arglist>(const Joint::Properties &amp;_jointProperties=Joint::Properties(), const UniqueProperties &amp;_singleDofProperties=UniqueProperties())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a4fc28383a63fa54a0fb69ad1a2318ce9</anchor>
      <arglist>(double _positionLowerLimit=-DART_DBL_INF, double _positionUpperLimit=DART_DBL_INF, double _velocityLowerLimit=-DART_DBL_INF, double _velocityUpperLimit=DART_DBL_INF, double _accelerationLowerLimit=-DART_DBL_INF, double _accelerationUpperLimit=DART_DBL_INF, double _forceLowerLimit=-DART_DBL_INF, double _forceUpperLimit=DART_DBL_INF, double _springStiffness=0.0, double _restPosition=0.0, double _dampingCoefficient=0.0, double _coulombFriction=0.0, bool _preserveDofName=false, std::string _dofName=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniqueProperties</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a7d87ad5df1416491914696317a442c86</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>df/d30/structdart_1_1dynamics_1_1PrismaticJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a056fdb5ea957935dbade07280bf7f338</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis=Eigen::Vector3d::UnitZ())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniqueProperties</name>
      <anchorfile>df/d30/structdart_1_1dynamics_1_1PrismaticJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a7326de78a2dac4a78789bb058be30e71</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mPositionLowerLimit</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a8bc43de271d86512a1ffa86cf39179d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mPositionUpperLimit</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>acbf3fe5b6150c0af1a4d27f1a236f9d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mInitialPosition</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a0d94d2bade14496d3b94bbd22f406a98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mVelocityLowerLimit</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a4a54e471028ba289c1614c1760e4dc2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mVelocityUpperLimit</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a48f8870e988a08793db3c9ecee80bf45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mInitialVelocity</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a2eef0a606e8d17decd688b4858df42f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mAccelerationLowerLimit</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a5949513a170921b546ebae7b50068740</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mAccelerationUpperLimit</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a9153929dd1116434ad96a3b6da0d2026</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mForceLowerLimit</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>acb32fb74721cd5663640a7085c2bbce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mForceUpperLimit</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a9ab93389a7eb789f30c621746689f340</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mSpringStiffness</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a6cc2e72e29c206cff86a71aeb91419bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mRestPosition</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a5d14169f4e246ad8f126ea34fbd22529</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mDampingCoefficient</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a1d69a1e018f9a65eb5cc2e8f0fe1764d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mFriction</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a5bfe967c5bc4cdc9cf3d1cd5ad64048a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mPreserveDofName</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a3a887b67814e4a1179e340dd677c41c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mDofName</name>
      <anchorfile>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>af09bfbaf5cdfb62cb63de4684e719490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mAxis</name>
      <anchorfile>df/d30/structdart_1_1dynamics_1_1PrismaticJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>ae2384ee1525f055dbd6d9199cd70817a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::PrismaticJoint::UniqueProperties</name>
    <filename>df/d30/structdart_1_1dynamics_1_1PrismaticJoint_1_1UniqueProperties.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::ReferentialSkeleton</name>
    <filename>d6/d9a/classdart_1_1dynamics_1_1ReferentialSkeleton.html</filename>
    <base>dart::dynamics::MetaSkeleton</base>
    <class kind="struct">dart::dynamics::ReferentialSkeleton::IndexMap</class>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::ReferentialSkeleton::IndexMap</name>
    <filename>d8/dd7/structdart_1_1dynamics_1_1ReferentialSkeleton_1_1IndexMap.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>mBodyNodeIndex</name>
      <anchorfile>d8/dd7/structdart_1_1dynamics_1_1ReferentialSkeleton_1_1IndexMap.html</anchorfile>
      <anchor>a5c9ee9f6fb1861b8a06e3f08a5299d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>mDofIndices</name>
      <anchorfile>d8/dd7/structdart_1_1dynamics_1_1ReferentialSkeleton_1_1IndexMap.html</anchorfile>
      <anchor>af84c0b7f50c01f7bf0b649f74ec535ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::RevoluteJoint</name>
    <filename>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</filename>
    <base>dart::dynamics::SingleDofJoint</base>
    <class kind="struct">dart::dynamics::RevoluteJoint::Properties</class>
    <class kind="struct">dart::dynamics::RevoluteJoint::UniqueProperties</class>
    <member kind="function">
      <type></type>
      <name>RevoluteJoint</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>aa5df2585cdcfd9834fcb4d1a8b67fff8</anchor>
      <arglist>(const RevoluteJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RevoluteJoint</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>abfc419843c6b1f44cb7f98b6f6d50a90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>ac78238aefd6e1f4063eb7f6b3d45a3f3</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>aa1dae75360f29b79767e7a55eb6299f9</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getRevoluteJointProperties</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>ada5931cf1f977f8cf287504839711c39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a6dbf9998c56d94ce9363275e41eab0b6</anchor>
      <arglist>(const RevoluteJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a11095f913d3c44e294c65a6de1263272</anchor>
      <arglist>(const RevoluteJoint *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>RevoluteJoint &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a182ca74da0f7dce2ce63934ec6e0529d</anchor>
      <arglist>(const RevoluteJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>aff4abb1d9f42271db94f6e08cc50502c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCyclic</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a6dc2f6717a342469fb099790df176949</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a6d02f33772be956790e781b058e40f6a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getAxis</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a258ca44f13a2f6df4e411b6ab2bde8d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>ad569b5a0e79b7ae7478ba51d09fa50b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RevoluteJoint</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a5b2de152eeb3e969efd6dc3bc3f4cbe7</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Joint *</type>
      <name>clone</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>ab810c1a655538d2f3171e08e05fd4a94</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalTransform</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a7e3dc9da536a20ca265d26342265257a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobian</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a305a7972c1de5a6b5e1d11ff239e64b3</anchor>
      <arglist>(bool _mandatory=true) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobianTimeDeriv</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>ae6bae4b31b96127c54b717d32d6dab52</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mRevoluteP</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>af3979720ba35b1a8b957fdc9ff9621b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d7/dc0/classdart_1_1dynamics_1_1RevoluteJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::RevoluteJoint::Properties</name>
    <filename>d3/d99/structdart_1_1dynamics_1_1RevoluteJoint_1_1Properties.html</filename>
    <base>dart::dynamics::SingleDofJoint::Properties</base>
    <base>dart::dynamics::RevoluteJoint::UniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d3/d99/structdart_1_1dynamics_1_1RevoluteJoint_1_1Properties.html</anchorfile>
      <anchor>a5e3114a88323ee02e9d541a7cf53ae3f</anchor>
      <arglist>(const SingleDofJoint::Properties &amp;_singleDofJointProperties=SingleDofJoint::Properties(), const RevoluteJoint::UniqueProperties &amp;_revoluteProperties=RevoluteJoint::UniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>d3/d99/structdart_1_1dynamics_1_1RevoluteJoint_1_1Properties.html</anchorfile>
      <anchor>ac864f2c804f044a8ed32010f113b2de2</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>da/de0/structdart_1_1dynamics_1_1RevoluteJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a00e00f587ad642b2cfa6fe3e4c1dd79a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis=Eigen::Vector3d::UnitZ())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniqueProperties</name>
      <anchorfile>da/de0/structdart_1_1dynamics_1_1RevoluteJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>ae10a6f4f707a51a1e0481a5e248faaba</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mAxis</name>
      <anchorfile>da/de0/structdart_1_1dynamics_1_1RevoluteJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a9f35a6302268d8417c1fcd6166efc760</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::RevoluteJoint::UniqueProperties</name>
    <filename>da/de0/structdart_1_1dynamics_1_1RevoluteJoint_1_1UniqueProperties.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::ScrewJoint</name>
    <filename>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</filename>
    <base>dart::dynamics::SingleDofJoint</base>
    <class kind="struct">dart::dynamics::ScrewJoint::Properties</class>
    <class kind="struct">dart::dynamics::ScrewJoint::UniqueProperties</class>
    <member kind="function">
      <type></type>
      <name>ScrewJoint</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>aa8107690a937bd0316e91fe4a04337cb</anchor>
      <arglist>(const ScrewJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ScrewJoint</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a349cb15096925f3c8627e45f113b8827</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a1973ab66315b5b0c6749c1eea207b642</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a1f8a9e2562b24b1a79b3663ad383f0b8</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getScrewJointProperties</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a6fa6def8ced1f635f710f234b4b22fe6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>ac4b30ae3c118765256fc0a8afac4cd72</anchor>
      <arglist>(const ScrewJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>abf166c1bdd50557b46652cd8afaa7280</anchor>
      <arglist>(const ScrewJoint *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>ScrewJoint &amp;</type>
      <name>operator=</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a204cbf4bf4e16fcbf11fb1f68667cf6a</anchor>
      <arglist>(const ScrewJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a940752d8fa24286f3ca6f71e1cd4f014</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCyclic</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a9eee95b28f4b592391cc342da9d86922</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>afe56727d45b40d589641249207be0c68</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getAxis</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a8ee69b5728c648f1410f03475e71525a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPitch</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>af8dcfdeac0e9b863e2280e6c7dc2ae84</anchor>
      <arglist>(double _pitch)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPitch</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a3d91a2c1334d271af6cfe07e2b2a8e53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>ad53783c3186a494144865904b4bb8219</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ScrewJoint</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a92f5810d7d1d11be4da62c0889c76bbc</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Joint *</type>
      <name>clone</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>aab1b2fffd11caf29b249f2bed40b3ed2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalTransform</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a1a0e3ad43d1dfe2eb82593581ce68c48</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobian</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>af1de1a2e1b21f1d9bf9c9374bba61478</anchor>
      <arglist>(bool _mandatory=true) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobianTimeDeriv</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a83d9f03b51dcc49c814b587ff30e9936</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mScrewP</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a4b13a55c1999e2f640c9e1403ed1c0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>db/d9a/classdart_1_1dynamics_1_1ScrewJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::ScrewJoint::Properties</name>
    <filename>de/df9/structdart_1_1dynamics_1_1ScrewJoint_1_1Properties.html</filename>
    <base>dart::dynamics::SingleDofJoint::Properties</base>
    <base>dart::dynamics::ScrewJoint::UniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>de/df9/structdart_1_1dynamics_1_1ScrewJoint_1_1Properties.html</anchorfile>
      <anchor>ab05fcf3b3a83b16fe0fc34a472cab7ef</anchor>
      <arglist>(const SingleDofJoint::Properties &amp;_singleDofProperties=SingleDofJoint::Properties(), const ScrewJoint::UniqueProperties &amp;_screwProperties=ScrewJoint::UniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>de/df9/structdart_1_1dynamics_1_1ScrewJoint_1_1Properties.html</anchorfile>
      <anchor>a251c71c00e4b5f336876fcf5fb6de310</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>dd/da2/structdart_1_1dynamics_1_1ScrewJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>a8358c14debcb7b8dbf99009632d6d39c</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis=Eigen::Vector3d::UnitZ(), double _pitch=0.1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniqueProperties</name>
      <anchorfile>dd/da2/structdart_1_1dynamics_1_1ScrewJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>aabfca1d28c402bbb8650c64ef7c324c7</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mAxis</name>
      <anchorfile>dd/da2/structdart_1_1dynamics_1_1ScrewJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>ae08c1b230a0983a78a2026f652909dfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mPitch</name>
      <anchorfile>dd/da2/structdart_1_1dynamics_1_1ScrewJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>ac2a7549e8597a006e8647909e364727e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::ScrewJoint::UniqueProperties</name>
    <filename>dd/da2/structdart_1_1dynamics_1_1ScrewJoint_1_1UniqueProperties.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Shape</name>
    <filename>db/d1c/classdart_1_1dynamics_1_1Shape.html</filename>
    <base virtualness="virtual">dart::common::Subject</base>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>ad9b50c0c0befade7f7c21b80a7ee574e</anchor>
      <arglist>(double _mass) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a69be8755ee56a1785a81159245d54779</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, const Eigen::Vector4d &amp;_color=Eigen::Vector4d::Ones(), bool _useDefaultColor=true) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>computeVolume</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>aa581749811aa859eb00413c05fda4c55</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ShapeType</type>
      <name>mType</name>
      <anchorfile>db/d1c/classdart_1_1dynamics_1_1Shape.html</anchorfile>
      <anchor>a0c6e8972545c65851285061e11cc6d24</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SimpleFrame</name>
    <filename>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</filename>
    <base>dart::dynamics::Detachable</base>
    <base>dart::dynamics::Frame</base>
    <member kind="function">
      <type></type>
      <name>SimpleFrame</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>aab9efa74dd656f705a47f3bdb2e29d91</anchor>
      <arglist>(Frame *_refFrame, const std::string &amp;_name=&quot;simple_frame&quot;, const Eigen::Isometry3d &amp;_relativeTransform=Eigen::Isometry3d::Identity())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimpleFrame</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>aca0b006d018f83ebac1733d7567cc3ab</anchor>
      <arglist>(const SimpleFrame &amp;_otherFrame, Frame *_refFrame=Frame::World())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SimpleFrame</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a58534f500cb604ec927435afc18e8f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; SimpleFrame &gt;</type>
      <name>clone</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a624e53d5ab5c34b3b7781041aa5fee35</anchor>
      <arglist>(Frame *_refFrame=Frame::World()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a2c38ef8cb72682f3cc27d73cfa1143ca</anchor>
      <arglist>(const Frame &amp;_otherFrame, Frame *_refFrame=Frame::World(), bool _copyProperties=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a72e9f7fcb9c32aab775c55ada5c04bb4</anchor>
      <arglist>(const Frame *_otherFrame, Frame *_refFrame=Frame::World(), bool _copyProperties=true)</arglist>
    </member>
    <member kind="function">
      <type>SimpleFrame &amp;</type>
      <name>operator=</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>ad5c83dc169d185f676380c2f1515382c</anchor>
      <arglist>(const SimpleFrame &amp;_otherFrame)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeTransform</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a4319dc693d8cc4fd03b8da3c0fb32d9a</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_newRelTransform)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransform</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a7df0bb20e4899db888f5530a4ec0810e</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_newTransform, const Frame *_withRespectTo=Frame::World())</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Isometry3d &amp;</type>
      <name>getRelativeTransform</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a69a8020fed6358e0c27d91b8a29ad3a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialVelocity</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a3651848b70865a6f3f67f0f49b8e603a</anchor>
      <arglist>(const Eigen::Vector6d &amp;_newSpatialVelocity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialVelocity</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a12923f50bb38efd65355c1e1829f7121</anchor>
      <arglist>(const Eigen::Vector6d &amp;_newSpatialVelocity, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialVelocity</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>afcb4448dc3271c772b8570da6993a407</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialAcceleration</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>aaa3a280240c3f3ea84cdb54c5bd70548</anchor>
      <arglist>(const Eigen::Vector6d &amp;_newSpatialAcceleration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeSpatialAcceleration</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>af2080cb5dabe92dd0f01642708855934</anchor>
      <arglist>(const Eigen::Vector6d &amp;_newSpatialAcceleration, const Frame *_inCoordinatesOf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Eigen::Vector6d &amp;</type>
      <name>getRelativeSpatialAcceleration</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>ac9530c61fb57d8f084bc34ddd790edaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Eigen::Vector6d &amp;</type>
      <name>getPrimaryRelativeAcceleration</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>ac0df86472020b3262d60a35d09f8be91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Eigen::Vector6d &amp;</type>
      <name>getPartialAcceleration</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>ae65c22703cb05a0ea39812db652f7389</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClassicDerivatives</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a3a59c34c9df83fcb2f957f3e077bcb03</anchor>
      <arglist>(const Eigen::Vector3d &amp;_linearVelocity=Eigen::Vector3d::Zero(), const Eigen::Vector3d &amp;_angularVelocity=Eigen::Vector3d::Zero(), const Eigen::Vector3d &amp;_linearAcceleration=Eigen::Vector3d::Zero(), const Eigen::Vector3d &amp;_angularAcceleration=Eigen::Vector3d::Zero())</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Isometry3d</type>
      <name>mRelativeTf</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a34ebb6e624c61af6356ce5587fbfe48b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mRelativeVelocity</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>af1357a9d9de0a5811ccbd8a5d4d06300</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mRelativeAcceleration</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a3a93a3d3bba79ca298d86c85d583f832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector6d</type>
      <name>mPartialAcceleration</name>
      <anchorfile>da/d1c/classdart_1_1dynamics_1_1SimpleFrame.html</anchorfile>
      <anchor>a53692ad9c9028f3b974f1cde6fc523ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SingleDofJoint</name>
    <filename>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</filename>
    <base>dart::dynamics::Joint</base>
    <class kind="struct">dart::dynamics::SingleDofJoint::Properties</class>
    <class kind="struct">dart::dynamics::SingleDofJoint::UniqueProperties</class>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildArtInertiaToDynamic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a0ecb4f06d243e2339b0c6b496a1a63d1</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildArtInertiaToKinematic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ae512910b6a727c51a8c3335fb6ae6624</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildArtInertiaImplicitToDynamic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>af8bd0b5aa8d210562e7831fb030954c7</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildArtInertiaImplicitToKinematic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a8893bead9da9c011159401312c7e9ce5</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateInvProjArtInertiaDynamic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a45395488056d14ebc1adda32d9441dbc</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateInvProjArtInertiaKinematic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a74a73f281ff1b13d50db342c34264e59</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicitDynamic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ad95d1da15b7db90a23b1b8b3cff482e4</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicitKinematic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ad0cab0d53f369b388832c23d49ad5e9e</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildBiasForceToDynamic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ae9f309c50a4a7e9f2e3843f9ec2b39b9</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce, const Eigen::Vector6d &amp;_childPartialAcc)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildBiasForceToKinematic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ae29efd9a8eba06773149c4df278ead0a</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce, const Eigen::Vector6d &amp;_childPartialAcc)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildBiasImpulseToDynamic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a2447c585cdf9c55730b02e99c6e0a62b</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasImpulse, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasImpulse)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>addChildBiasImpulseToKinematic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a396f81b72301673df3e5e5aba3307f18</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasImpulse, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasImpulse)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateTotalForceDynamic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a701d170879e88fe376081e13636ae448</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateTotalForceKinematic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>aee693fb3ef5f485b997eac2dd49ff59d</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateTotalImpulseDynamic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>abd4ef0ca0389578f5414e8b62e4485cf</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateTotalImpulseKinematic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ad9deb979f2b0b6cd6f0223674e8feb2c</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateAccelerationDynamic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a534d698ff2782258eabf342b6db7df63</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateAccelerationKinematic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>abb755c469bf30f37dad1a5c4f4769e5c</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateVelocityChangeDynamic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ac7d247a333010e7a740f915ae90703ed</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_velocityChange)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateVelocityChangeKinematic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a71112d78e4c2fd72517080a0a46b4fb5</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_velocityChange)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateConstrainedTermsDynamic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>a89e09eb65082de1f71359a2bcfe93b90</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateConstrainedTermsKinematic</name>
      <anchorfile>d7/d33/classdart_1_1dynamics_1_1SingleDofJoint.html</anchorfile>
      <anchor>ac3a7fb065274d5f9685e33b0caddd835</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::SingleDofJoint::Properties</name>
    <filename>d4/dd3/structdart_1_1dynamics_1_1SingleDofJoint_1_1Properties.html</filename>
    <base>dart::dynamics::Joint::Properties</base>
    <base>dart::dynamics::SingleDofJoint::UniqueProperties</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>d4/dd3/structdart_1_1dynamics_1_1SingleDofJoint_1_1Properties.html</anchorfile>
      <anchor>ad9278e38069ae286e623ae34bc24a18f</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::SingleDofJoint::UniqueProperties</name>
    <filename>d2/d47/structdart_1_1dynamics_1_1SingleDofJoint_1_1UniqueProperties.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::Skeleton</name>
    <filename>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</filename>
    <base>dart::dynamics::MetaSkeleton</base>
    <class kind="struct">dart::dynamics::Skeleton::DataCache</class>
    <class kind="struct">dart::dynamics::Skeleton::DirtyFlags</class>
    <class kind="struct">dart::dynamics::Skeleton::Properties</class>
    <member kind="function">
      <type>void</type>
      <name>integratePositions</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>acaec88fc55e1bc305c599ac3070cc639</anchor>
      <arglist>(double _dt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>integrateVelocities</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6aa2cd5416a6d20386dd521305b19ae5</anchor>
      <arglist>(double _dt)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0efbe60087cd9418b15f9034f45d053e</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q2, const Eigen::VectorXd &amp;_q1) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocityDifferences</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0cc705b9621419d7386378099c30af77</anchor>
      <arglist>(const Eigen::VectorXd &amp;_dq2, const Eigen::VectorXd &amp;_dq1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6ff676dcb0edf49a35fa7e577c8c7eaf</anchor>
      <arglist>(const Eigen::VectorXd &amp;_state)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getState</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2d5d5d92c7116c3c2e3db49f092891c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeForwardKinematics</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a72af91bb702c3361f015009b98f3d516</anchor>
      <arglist>(bool _updateTransforms=true, bool _updateVels=true, bool _updateAccs=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeForwardDynamics</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a030ab29aa39fd5f834d62cdc5ced5898</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeInverseDynamics</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4581d0cf6b403cc5c9a965d28266f3b1</anchor>
      <arglist>(bool _withExternalForces=false, bool _withDampingForces=false, bool _withSpringForces=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearConstraintImpulses</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa1979a8127800f19b4bb8a42af09639e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateBiasImpulse</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a793c963960498f48b9edaaa531eb3cca</anchor>
      <arglist>(BodyNode *_bodyNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateBiasImpulse</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>adaeb6222aceb8742ffeda937f0a6cb5f</anchor>
      <arglist>(BodyNode *_bodyNode, const Eigen::Vector6d &amp;_imp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateBiasImpulse</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac169a563bf8b4ef8fd5b8a50120ff4e0</anchor>
      <arglist>(BodyNode *_bodyNode1, const Eigen::Vector6d &amp;_imp1, BodyNode *_bodyNode2, const Eigen::Vector6d &amp;_imp2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateBiasImpulse</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a8d9c0f125501b4e90d90af3f48b3500c</anchor>
      <arglist>(SoftBodyNode *_softBodyNode, PointMass *_pointMass, const Eigen::Vector3d &amp;_imp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateVelocityChange</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a955a9bc048642ab575851d2c9e6709d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImpulseApplied</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a244eafeb84ad7eba71c08395d3e384fb</anchor>
      <arglist>(bool _val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isImpulseApplied</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7f8420072938d5e17b6a909e1cedec4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeImpulseForwardDynamics</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a90f8a3008da785f2ab845f9af94c2ce5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2ae7176f73904ff3d0b2948dcbd90302</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, const Eigen::Vector4d &amp;_color=Eigen::Vector4d::Ones(), bool _useDefaultColor=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawMarkers</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab4c3075541be7c8a8a32173bc491ffd5</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, const Eigen::Vector4d &amp;_color=Eigen::Vector4d::Ones(), bool _useDefaultColor=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetUnion</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7c9cd2641f87b78cd2b273e45f0ccb3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JointType *</type>
      <name>moveBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a564a0a850dab1952cbc968ba9bc005c1</anchor>
      <arglist>(BodyNode *_bodyNode, const SkeletonPtr &amp;_newSkeleton, BodyNode *_parentNode, const typename JointType::Properties &amp;_joint)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; JointType *, BodyNode * &gt;</type>
      <name>cloneBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a5ad966490b2250ddf4ff48f14b8ce49b</anchor>
      <arglist>(const BodyNode *_bodyNode, const SkeletonPtr &amp;_newSkeleton, BodyNode *_parentNode, const typename JointType::Properties &amp;_joint, bool _recursive) const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; JointType *, NodeType * &gt;</type>
      <name>createJointAndBodyNodePair</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a8624d1bb8f851066b38a107e8c95acd9</anchor>
      <arglist>(BodyNode *_parent, const typename JointType::Properties &amp;_jointProperties, const typename NodeType::Properties &amp;_bodyProperties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab4ad5cee247f8d487b5335acd1d230e0</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getSkeletonProperties</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac9cbbbbae57130593c7a7059d4d83223</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6363af2facfbf5808f14da7bd5b4b655</anchor>
      <arglist>(const std::string &amp;_name) override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a583867ed1a17d3f2397562d68b860a7b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableSelfCollision</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7385c8472b01d120134a2af40c188a78</anchor>
      <arglist>(bool _enableAdjacentBodyCheck=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableSelfCollision</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7ac410509ce3e9d78bae4a8233de96f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabledSelfCollisionCheck</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a90f653512128391c606b8b736a92e666</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabledAdjacentBodyCheck</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a26c2c8b986713dc885cf345cb4961170</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMobile</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a370567481d4b0bcdded73ba07731378e</anchor>
      <arglist>(bool _isMobile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMobile</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac44a6766f96ce66f58806428227c8a4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeStep</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4dbadffeae6cdf9fa4dd3abfbab1e61b</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeStep</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3f33156b4ac8a4030cd671f1bb4d1484</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGravity</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a58a52b805d73dce9d2174889d86b0d8a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getGravity</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2fc44de3b4b5d927bded17657284d1db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; JointType *, NodeType * &gt;</type>
      <name>createJointAndBodyNodePair</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a9753a7a3ef2877a61ec35a5bda6a2865</anchor>
      <arglist>(BodyNode *_parent=nullptr, const typename JointType::Properties &amp;_jointProperties=typename JointType::Properties(), const typename NodeType::Properties &amp;_bodyProperties=typename NodeType::Properties())</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab451d9af28ce2f4e83c65ddc5ee505ae</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumRigidBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a50ab0a7da4af1c53c3586ce191ed0204</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumSoftBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aecd71dc8931eb7e8b51013de57e629fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumTrees</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a95af81dbc3051842fe0fcd95dd7726d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getRootBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a1d19aaed75eae2ad5625f2d69e5feca2</anchor>
      <arglist>(size_t _treeIdx=0)</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getRootBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a879a830c411f373e2d807eb588115ac2</anchor>
      <arglist>(size_t _treeIdx=0) const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af0908071ae4c782cf3bcf18cefc8acc1</anchor>
      <arglist>(size_t _idx) override</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a97d0b4cbed45451315fae25c3e876757</anchor>
      <arglist>(size_t _idx) const override</arglist>
    </member>
    <member kind="function">
      <type>SoftBodyNode *</type>
      <name>getSoftBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac806839abed5ef412cd2bc73e87328bd</anchor>
      <arglist>(size_t _idx)</arglist>
    </member>
    <member kind="function">
      <type>const SoftBodyNode *</type>
      <name>getSoftBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a927bdd67bf6140db4ab281776e772431</anchor>
      <arglist>(size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>abbbc1665e9931d2561b81400d9f0b569</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>const BodyNode *</type>
      <name>getBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac688f9cce48235e2a43c59a9d598d94a</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>SoftBodyNode *</type>
      <name>getSoftBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0204832c0eccf8533b25d1e286067cf9</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>const SoftBodyNode *</type>
      <name>getSoftBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a88d9f14ff8fd23d41aeee2091615cbc4</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; BodyNode * &gt; &amp;</type>
      <name>getBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a054be83f1d95ea84e5d39c75a7a5f8dd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const BodyNode * &gt; &amp;</type>
      <name>getBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af76584475d7ac040b3947c54050bbf61</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>adfb4645fd4adbd2cec8808af53cde741</anchor>
      <arglist>(const BodyNode *_bn, bool _warning=true) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; BodyNode * &gt; &amp;</type>
      <name>getTreeBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a46e1f71e8ff60268db177776257f5c85</anchor>
      <arglist>(size_t _treeIdx)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const BodyNode * &gt;</type>
      <name>getTreeBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a445cb3d57943d816c61b753f62f176a1</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumJoints</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a9e9219e40953666b7000cde18a834838</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Joint *</type>
      <name>getJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab4d19723f9101f6407c3dace2c32cad2</anchor>
      <arglist>(size_t _idx) override</arglist>
    </member>
    <member kind="function">
      <type>const Joint *</type>
      <name>getJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4c05f080b917f66a33192cd67cdab0df</anchor>
      <arglist>(size_t _idx) const override</arglist>
    </member>
    <member kind="function">
      <type>Joint *</type>
      <name>getJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a04d455aa9bf8fb577413d9c9a35999d0</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>const Joint *</type>
      <name>getJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6a11364fb522d4981affb6c972e713b0</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac1dd61be139994df45b1c8db34c7afc1</anchor>
      <arglist>(const Joint *_joint, bool _warning=true) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumDofs</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4fcf5759187c0e8e0803075d3e0daa35</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab5137ec33ca2d4cc61b2b67bfde4669b</anchor>
      <arglist>(size_t _idx) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ae27d39ff173abc9ab9afbb1991664a3b</anchor>
      <arglist>(size_t _idx) const override</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af0dfaaccb999ad079646302bbda9297d</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a5291cd254b7fa66f4d0b2edd956d183c</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; DegreeOfFreedom * &gt; &amp;</type>
      <name>getDofs</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af8fbb9cdb6861f7f8637e6490a1b2f21</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>getDofs</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4441434c5b04270b28e27343ad2d3412</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIndexOf</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>afb9b8bab85b383e604d96c5aceb12af2</anchor>
      <arglist>(const DegreeOfFreedom *_dof, bool _warning=true) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; DegreeOfFreedom * &gt; &amp;</type>
      <name>getTreeDofs</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a29773f9ea31d277cd964fd3a7a2353d1</anchor>
      <arglist>(size_t _treeIdx)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; const DegreeOfFreedom * &gt; &amp;</type>
      <name>getTreeDofs</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad694fd871f4df58260ab61165723d4c3</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEndEffectors</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a712df892e919d807eefa78545205992d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EndEffector *</type>
      <name>getEndEffector</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac5656fc64e533dfdf818846e2c868465</anchor>
      <arglist>(size_t _idx)</arglist>
    </member>
    <member kind="function">
      <type>const EndEffector *</type>
      <name>getEndEffector</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3105ba0b5fc7a3670d30423651af70e6</anchor>
      <arglist>(size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>EndEffector *</type>
      <name>getEndEffector</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0dfb55a28638d77b8ffd322aad446d44</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>const EndEffector *</type>
      <name>getEndEffector</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6293832bc689d54975f7dc98c70108e4</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; WholeBodyIK &gt; &amp;</type>
      <name>getIK</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af9e9308fb0e458bd96c899955dfc345a</anchor>
      <arglist>(bool _createIfNull=false)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; WholeBodyIK &gt; &amp;</type>
      <name>getOrCreateIK</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7798c99048951765a603e8c10aeea979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const WholeBodyIK &gt;</type>
      <name>getIK</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a9ff1c6109376f72f8b0defec51f6bd0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; WholeBodyIK &gt; &amp;</type>
      <name>createIK</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aca9ce72460cb0a86c1ec9fe2c6a0b5fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearIK</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aee4de0a407cdc0bedfe0e8c463218ad9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Marker *</type>
      <name>getMarker</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a8b798e061955fe39a57e7a1e8303d1ae</anchor>
      <arglist>(const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>const Marker *</type>
      <name>getMarker</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3c6abad4aab1f76d191c454c75829f34</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>const math::SupportPolygon &amp;</type>
      <name>getSupportPolygon</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aedadd167494fc4d21c9b889408631ecc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const math::SupportPolygon &amp;</type>
      <name>getSupportPolygon</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a73cca6756da92eb582692b67b8122528</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; size_t &gt; &amp;</type>
      <name>getSupportIndices</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>adcd8296a00bd4a322e21a1afa72f8a3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; size_t &gt; &amp;</type>
      <name>getSupportIndices</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a28cc62cfb0f1633f6219e9bc2c92f773</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; Eigen::Vector3d, Eigen::Vector3d &gt; &amp;</type>
      <name>getSupportAxes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ae08e0e2cb25261d57dea950e82c30593</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; Eigen::Vector3d, Eigen::Vector3d &gt; &amp;</type>
      <name>getSupportAxes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa9f4c8953fdd439ecdf8703d6f3a871c</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector2d &amp;</type>
      <name>getSupportCentroid</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a36d65e4ee841d7b982b8089e4637292b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector2d &amp;</type>
      <name>getSupportCentroid</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a9ba8b107c44125d0c9e527c7e4c06763</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSupportVersion</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a15a3b63667b4b779655cb8945e1d5103</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSupportVersion</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a56183834fbf636507c0f191cd5d02ec0</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aff119bb9d386b73d6c986a6107e18769</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a1cb1dee8f9b21cfec7b46c6d7988f015</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af3f08f4e9e41ba624190e2fb000e2806</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a20e01a54fd19d9efdf2ebd9768ee3c41</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4ecea23890f3cb344510cb4728a02d49</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aae49fd0d3ec2f22189d2b2c5e979180b</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a667794e8f5180b52c8352433a5b6dd1f</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3eb798ec275b36fc094f1101673505a8</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a69bcf8e161095692f8e960baae037bb8</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6c26bcc60a7ac9f4fb5844d28a1cecd0</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af027637f1b2e842a1e72bb608c418bf9</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aaa181e4ce162d3014b6e5a28b755ecdb</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4a137579162dfa9135697e6db7772f31</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af7f3c1ff7cef2845fb16ec54bd3129ba</anchor>
      <arglist>(const JacobianNode *_node) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a50aae1b7e4f56ec558f7ab62d976f526</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4b1bba7c94f4cf3cfd0cdb770b5af25c</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a63f1c29d0f2de46678d7998422ef10ea</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad81f711a874962e9c7b182c3f84a88a9</anchor>
      <arglist>(const JacobianNode *_node, const Eigen::Vector3d &amp;_localOffset=Eigen::Vector3d::Zero(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobianDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a323fc3c63b9053f3a2bca654c3f328cf</anchor>
      <arglist>(const JacobianNode *_node, const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMass</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0f294f105e9d1401af934972814fde51</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4cc134b7ce602c54c4663564af4c3468</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a09779bd989e6d54ec02ae16b9525b632</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6cafc97259214db14966a4a4807d24dd</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a49365b24607f710afe7e4ff09dfdba12</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getInvMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3f8ab35d96f3c8ce9a757f063a59d8cc</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getInvMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac2d7889dce1c8b3f4e5732fd9b01ddfe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getInvAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4db4bbaf414741d71083ce9be287adf3</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::MatrixXd &amp;</type>
      <name>getInvAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7b714bc26e5ce1c00e39b6448c64cb3f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getCoriolisForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a03b41f1a02c15b535524c762a2a388d2</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getCoriolisForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7853402061b1b1800bba74a526676ee4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa3cf3adcf3c0cd37da83577f7a577357</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab0375f2de0525f03e7a36ffd0406e9f7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getCoriolisAndGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a5ce879338e1ce9c32c70f869a5951a54</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getCoriolisAndGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aecbeaedba732e2d31922b05cfa1d9a82</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getExternalForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2e384ed5e780ad420728274b1c588a27</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getExternalForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab5461b6eba6956af3bccaa6909563c62</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getConstraintForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a943b7f0e28eb485908ee73c03d4f4af5</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getConstraintForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a5b44864dc1291ae98f9791959002b7a4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearExternalForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a23a8adbe0f83356b6b886277cbc40979</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearInternalForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ae5ff38e15969a0406465bbdd17a2ecaa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyArticulatedInertiaUpdate</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a9d4085bdc50c5c7dc6cfcb34cf19d94d</anchor>
      <arglist>(size_t _treeIdx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifySupportUpdate</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>adfec7729ce5d098ad9b96b7c8626bf12</anchor>
      <arglist>(size_t _treeIdx)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getKineticEnergy</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a9b1aa386c6648866d21b4870624b7af7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPotentialEnergy</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a669fa99f1b9e888bf7c8b2e645dfdcc8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOM</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a87d28b5213f30f397cda7f293c1d63d9</anchor>
      <arglist>(const Frame *_withRespectTo=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialVelocity</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a95d957c595fdd209deae1e12e87a3ec5</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOMLinearVelocity</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a64feb32d4e1f283ef2b8cd4ff6878c85</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getCOMSpatialAcceleration</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7fdb23bde028f6d66fd57845f9e4792c</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getCOMLinearAcceleration</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af21aba3131f7e454429bfb0ab63a65e2</anchor>
      <arglist>(const Frame *_relativeTo=Frame::World(), const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getCOMJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af1faaf55a72f8001a3e07a3ace9c12b2</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getCOMLinearJacobian</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa8aa3a0f3ff8dddfc181489f5f1bd3ae</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getCOMJacobianSpatialDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6142d2d30136291c2f0362bd75f48724</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getCOMLinearJacobianDeriv</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3e6a05fe87ab3c7ba644833e738e6cb5</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const override</arglist>
    </member>
    <member kind="variable">
      <type>std::weak_ptr&lt; Skeleton &gt;</type>
      <name>mUnionRootSkeleton</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ae7b1b9f69eeb310ac04596e25b41ae89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mUnionSize</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2aed4b7202ab540b2fd991bd0cd66b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mUnionIndex</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad1e4adcf5824601aa8476ac7643689ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Skeleton</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aba49f9aacbdacef8542a00b61c0e76d2</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPtr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a62ecd115a307b69e23b6c71e9af5cbe4</anchor>
      <arglist>(const SkeletonPtr &amp;_ptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>adef819051322c28db52d9128443d676a</anchor>
      <arglist>(BodyNode *_newBodyNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0bcec8b1354e2f10f76e0f23756161c4</anchor>
      <arglist>(Joint *_newJoint)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerEndEffector</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7839bc805f1b46a04815be5be930c020</anchor>
      <arglist>(EndEffector *_newEndEffector)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unregisterBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a37b170608a4f06f13f8584cd3b090e93</anchor>
      <arglist>(BodyNode *_oldBodyNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unregisterJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a3752bad106dca4db6794edb7e7b8f12e</anchor>
      <arglist>(Joint *_oldJoint)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unregisterEndEffector</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>acca4fff5d2cf94f2e511d6fb2b049455</anchor>
      <arglist>(EndEffector *_oldEndEffector)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>moveBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>abf09eb1a8c26b208eb7faa7efa8a6f86</anchor>
      <arglist>(Joint *_parentJoint, BodyNode *_bodyNode, SkeletonPtr _newSkeleton, BodyNode *_parentNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>JointType *</type>
      <name>moveBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a564a0a850dab1952cbc968ba9bc005c1</anchor>
      <arglist>(BodyNode *_bodyNode, const SkeletonPtr &amp;_newSkeleton, BodyNode *_parentNode, const typename JointType::Properties &amp;_joint)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; Joint *, BodyNode * &gt;</type>
      <name>cloneBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a6a5c3bc57fb84bc17d5a6977bf906156</anchor>
      <arglist>(Joint *_parentJoint, const BodyNode *_bodyNode, const SkeletonPtr &amp;_newSkeleton, BodyNode *_parentNode, bool _recursive) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; JointType *, BodyNode * &gt;</type>
      <name>cloneBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a5ad966490b2250ddf4ff48f14b8ce49b</anchor>
      <arglist>(const BodyNode *_bodyNode, const SkeletonPtr &amp;_newSkeleton, BodyNode *_parentNode, const typename JointType::Properties &amp;_joint, bool _recursive) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; const BodyNode * &gt;</type>
      <name>constructBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a8c320595ec7890c288f8f630b82d6b63</anchor>
      <arglist>(const BodyNode *_bodyNode) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>constructBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa1257ad72f37c4300e6be0de6ae41bb6</anchor>
      <arglist>(BodyNode *_bodyNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>extractBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a650a161de9fc1b627cc4d5bd850d81e9</anchor>
      <arglist>(BodyNode *_bodyNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>receiveBodyNodeTree</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aab5fb90e41650d9b663b6224f7b1033a</anchor>
      <arglist>(const std::vector&lt; BodyNode * &gt; &amp;_tree)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalMass</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad5b2115ab5787d485405def487749792</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCacheDimensions</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac0d76c24a3016f1c6e65d532696129d1</anchor>
      <arglist>(DataCache &amp;_cache)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCacheDimensions</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>acd1f31abfa9fdaff630558066862439b</anchor>
      <arglist>(size_t _treeIdx)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateArticulatedInertia</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ac8f5a410a741fde5eb47faeec1491c82</anchor>
      <arglist>(size_t _tree) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateArticulatedInertia</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a21f6c4522a51eb1422e005df508cb7b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a8570074dd65c458e200b2024a878a9a2</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa93572b0cfdbd7e4d5daae809774d838</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab006d3851f70390419c1a5a38fbfe5e6</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad5594dc1ed556e142b73c47aa900d98c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa6019c693eeca215307c3167965e5204</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a338c983301f8deb2cd86a579972d75ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa602db9417c157aa96d1da02e0f110c2</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvAugMassMatrix</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4577238f4819c3737f6e6c4139719eee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCoriolisForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a8223193b7830c35049abe558f2b07483</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCoriolisForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab3b44f89d766a8c0c413e254e1266592</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a17b29a1d5ce044c1d8a0b11481aa7dc0</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2ec4dd2a83dfa6a3edfaff80029fcccc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCoriolisAndGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a27f871b14eba69f4a6b3e7883593883a</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateCoriolisAndGravityForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aa3cc0c8c13f7939c51fa338999800822</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateExternalForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>abcc77645b71639f2ea33461ca33c877f</anchor>
      <arglist>(size_t _treeIdx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateExternalForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a9132e9a9f24776b04b59cf47e557469c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::VectorXd &amp;</type>
      <name>computeConstraintForces</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aec71fa44397db84ecf96d1fc5aa6c382</anchor>
      <arglist>(DataCache &amp;cache) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const std::string &amp;</type>
      <name>addEntryToBodyNodeNameMgr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad97dbbb66c3f035ce3b96de53438b9be</anchor>
      <arglist>(BodyNode *_newNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const std::string &amp;</type>
      <name>addEntryToJointNameMgr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>abd4cceb4e00f8bf7c490277fcfcf0e61</anchor>
      <arglist>(Joint *_newJoint, bool _updateDofNames=true)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addEntryToEndEffectorNameMgr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a406fad6574a0f03e988bf2a2c1b21498</anchor>
      <arglist>(EndEffector *_ee)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addEntryToSoftBodyNodeNameMgr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ae0acbcaf76501001fb580fc24dd33e63</anchor>
      <arglist>(SoftBodyNode *_newNode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addMarkersOfBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab683970dc00ed5b0494d19d98f03e1cc</anchor>
      <arglist>(BodyNode *_node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeMarkersOfBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a7f51ec36fae63feaa9b2170597e71957</anchor>
      <arglist>(BodyNode *_node)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const std::string &amp;</type>
      <name>addEntryToMarkerNameMgr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a80681bdeda2fbe69e0a67acbee6dad6f</anchor>
      <arglist>(Marker *_newMarker)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mSkeletonP</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a77f8b11cbaf7e22305285c57e9d67405</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; Skeleton &gt;</type>
      <name>mPtr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2afa29e12041fec99e998783749a2173</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; SoftBodyNode * &gt;</type>
      <name>mSoftBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a66362ef1bc9907dea780d67125d21c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; EndEffector * &gt;</type>
      <name>mEndEffectors</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad49c0564cee4f062b3e480286a2640ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::common::NameManager&lt; BodyNode * &gt;</type>
      <name>mNameMgrForBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a08fee58a53efcb81f1b862538a9a08ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::common::NameManager&lt; Joint * &gt;</type>
      <name>mNameMgrForJoints</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af00831cd164cc383e084d11c3a91eb61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::common::NameManager&lt; DegreeOfFreedom * &gt;</type>
      <name>mNameMgrForDofs</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad243ba51aa2d58a33945f3b95041ee27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::common::NameManager&lt; SoftBodyNode * &gt;</type>
      <name>mNameMgrForSoftBodyNodes</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0afe9c12c29a92f87e0cb37f8ab8ce98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::common::NameManager&lt; Marker * &gt;</type>
      <name>mNameMgrForMarkers</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a0684b5ef890118e2f7eec7446b76d72f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::common::NameManager&lt; EndEffector * &gt;</type>
      <name>mNameMgrForEndEffectors</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>addb71646e3798090a43910ad5a125334</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; WholeBodyIK &gt;</type>
      <name>mWholeBodyIK</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a8652b82c58ad014d057329ccedb91aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::aligned_vector&lt; DataCache &gt;</type>
      <name>mTreeCache</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a964a057e1b39784bbf4a5e8afe427469</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DataCache</type>
      <name>mSkelCache</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>affbd5a9e992e63ae466ec220f415e5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTotalMass</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a40c851393473b08c152de53145261f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsImpulseApplied</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a80ef43601b26369859895244bea83b37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mMutex</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a646b88e1f50e5c7b078f350ffc08d6bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ab59408dd3d4e7a025ca332d546a5688b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>SoftBodyNode</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a90a04ea25f677ead394ad8d4ebe0133b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Joint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a2b27269e818d7b63995be0e0f812bf54</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>SingleDofJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>ad31cc087f0ac9ac50e860d73cfe4e9e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>MultiDofJoint</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>added7c08f59c0cac1eea44589343b7ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>DegreeOfFreedom</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a68bd66bdc2a02ad9075f39219bcdfe54</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>EndEffector</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a675c233a38e7db8b610228796a2a5591</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SkeletonPtr</type>
      <name>create</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a4910aa8ba98138133e015e0be89db35b</anchor>
      <arglist>(const std::string &amp;_name=&quot;Skeleton&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SkeletonPtr</type>
      <name>create</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>af3326280d3d8b719c5bc721e2aa560c7</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>getPtr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a72819f9545a0ebb97b44176d31a8461a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstSkeletonPtr</type>
      <name>getPtr</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aff3e17b2125e5d281a8e3e0353a33bae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::mutex &amp;</type>
      <name>getMutex</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a66684ec6fcdb259228f63f7f13714947</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Skeleton</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a000d9ec51f6c4bb1f32c5ce1ad9bfff7</anchor>
      <arglist>(const Skeleton &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Skeleton</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a685e2d238dd0a5a1add6c0b61aa92124</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Skeleton &amp;</type>
      <name>operator=</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>a5e81d34c420b9bdd90e117ada39f379d</anchor>
      <arglist>(const Skeleton &amp;_other)=delete</arglist>
    </member>
    <member kind="function">
      <type>SkeletonPtr</type>
      <name>clone</name>
      <anchorfile>d3/d19/classdart_1_1dynamics_1_1Skeleton.html</anchorfile>
      <anchor>aeaa4bfb34350887b1083bf9fcd0bdda1</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Skeleton::DataCache</name>
    <filename>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</filename>
    <member kind="variable">
      <type>DirtyFlags</type>
      <name>mDirty</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a921132ce4819f7c2758599620093d2ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; BodyNode * &gt;</type>
      <name>mBodyNodes</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>ae1c0cb157ab62857f17ad5b113c94cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; const BodyNode * &gt;</type>
      <name>mConstBodyNodes</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a927b7ae22b845f0456499d075e205273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; DegreeOfFreedom * &gt;</type>
      <name>mDofs</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a96b8924854e22fdb3f89d092e777bbdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; const DegreeOfFreedom * &gt;</type>
      <name>mConstDofs</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a4767978efc49a2d1db3c4b8a8f833f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::MatrixXd</type>
      <name>mM</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>ae868f810fcf39387277b63ebc0fd287c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::MatrixXd</type>
      <name>mAugM</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a5d17187a38211f84d07ed815df27b0cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::MatrixXd</type>
      <name>mInvM</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a5a97cb546ec5ec3559b5f8dabf13abd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::MatrixXd</type>
      <name>mInvAugM</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a760dd5d30c74c3c82620027d54550e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mCvec</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a587e4c281f13d879240288de332d7bae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mG</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a7daeec82ad46168818ba657afe575bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mCg</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>af339414e13c4935196cae13cab59efb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mFext</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a34251eeee23e512bebbd6ae63f2cf53c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mFc</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>ae6da8c7c65016ee0b68c831cd0d25055</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>math::SupportPolygon</type>
      <name>mSupportPolygon</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a8f8b3d07667edf48cc510ec3bfd3fc52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; size_t &gt;</type>
      <name>mSupportIndices</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>a5b98a87792a3411f4219a9cb9b36a48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::pair&lt; Eigen::Vector3d, Eigen::Vector3d &gt;</type>
      <name>mSupportAxes</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>adde896c406784bbbaf1a30f41356849c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>math::SupportGeometry</type>
      <name>mSupportGeometry</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>aac6b471b818df8b6da496ed0c6b8c9a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector2d</type>
      <name>mSupportCentroid</name>
      <anchorfile>dc/d9d/structdart_1_1dynamics_1_1Skeleton_1_1DataCache.html</anchorfile>
      <anchor>aca236a6ea9df48b799a8be7d41103b33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Skeleton::DirtyFlags</name>
    <filename>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</filename>
    <member kind="function">
      <type></type>
      <name>DirtyFlags</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a911be711833ce675d90b5d1cf34b11b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mArticulatedInertia</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a1cbe671f8d4982d10ab66a1d796c92af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mMassMatrix</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a2de816fbf3da16f642e26b79360d61d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mAugMassMatrix</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a32f02b0bfd15d7d00be7ab4b8f803c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mInvMassMatrix</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>ac87a45026795dde6d6e530ee2c593e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mInvAugMassMatrix</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a1ef56f594bbf12881ee51d044655c41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mGravityForces</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a7e0b438ddce071bfd39089597ceff22a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mCoriolisForces</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a117e575d37dc0e23386e0626d9c2273f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mCoriolisAndGravityForces</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>aaf9f8f6e76af738901285e447bcf4c2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mExternalForces</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a14667651a7e51ba005158cdb3a6c13b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mDampingForces</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a875af7e762d69bbacae3c7eb80e61225</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mSupport</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a7547258b9ce46afe8674c53b1e7793e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mSupportVersion</name>
      <anchorfile>d4/d93/structdart_1_1dynamics_1_1Skeleton_1_1DirtyFlags.html</anchorfile>
      <anchor>a071c6726ed1f0ffbd4f46d4c8a260866</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::Skeleton::Properties</name>
    <filename>dd/dec/structdart_1_1dynamics_1_1Skeleton_1_1Properties.html</filename>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>dd/dec/structdart_1_1dynamics_1_1Skeleton_1_1Properties.html</anchorfile>
      <anchor>a5360e91b5cc1dc75490c3faecaf7c06e</anchor>
      <arglist>(const std::string &amp;_name=&quot;Skeleton&quot;, bool _isMobile=true, const Eigen::Vector3d &amp;_gravity=Eigen::Vector3d(0.0, 0.0,-9.81), double _timeStep=0.001, bool _enabledSelfCollisionCheck=false, bool _enableAdjacentBodyCheck=false)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>dd/dec/structdart_1_1dynamics_1_1Skeleton_1_1Properties.html</anchorfile>
      <anchor>a5c703891bf3ccc1e687e99635fc49041</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mIsMobile</name>
      <anchorfile>dd/dec/structdart_1_1dynamics_1_1Skeleton_1_1Properties.html</anchorfile>
      <anchor>a81009bd08c76439f2ba235491cee72cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Vector3d</type>
      <name>mGravity</name>
      <anchorfile>dd/dec/structdart_1_1dynamics_1_1Skeleton_1_1Properties.html</anchorfile>
      <anchor>a30e58a5509df95e3518f1fc0cb3c44ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mTimeStep</name>
      <anchorfile>dd/dec/structdart_1_1dynamics_1_1Skeleton_1_1Properties.html</anchorfile>
      <anchor>a0fa5a8a655eac70b2836fd781c26003d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mEnabledSelfCollisionCheck</name>
      <anchorfile>dd/dec/structdart_1_1dynamics_1_1Skeleton_1_1Properties.html</anchorfile>
      <anchor>a3f8290ecd65a5487101a0c8a6d458321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mEnabledAdjacentBodyCheck</name>
      <anchorfile>dd/dec/structdart_1_1dynamics_1_1Skeleton_1_1Properties.html</anchorfile>
      <anchor>abfa0bdd4fc19b1ee4da16a0a27c1e7b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SoftBodyNode</name>
    <filename>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</filename>
    <base>dart::dynamics::BodyNode</base>
    <class kind="struct">dart::dynamics::SoftBodyNode::Properties</class>
    <class kind="struct">dart::dynamics::SoftBodyNode::UniqueProperties</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SoftBodyNode</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>acb970285c4be28cbae60fb83f87fe7ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a8e43a8c09a5b6a5c8b9cba70022921fd</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a7082c55ad333c7a792a26765b2c0dcca</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>ShapePtr</type>
      <name>removeSoftBodyShapes</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a458dcb9d176beacd1b5bcfa8779818c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getSoftBodyNodeProperties</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ad44c064914090604217e7b859d77832a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a139d7fdfc3b50bc4b8bee27534a0bc2b</anchor>
      <arglist>(const SoftBodyNode &amp;_otherSoftBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>aa5681a3c7f1bb86ede590f59f617f5b7</anchor>
      <arglist>(const SoftBodyNode *_otherSoftBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>SoftBodyNode &amp;</type>
      <name>operator=</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>abced4c69be287aaa6ad223462a9a9f49</anchor>
      <arglist>(const SoftBodyNode &amp;_otherSoftBodyNode)</arglist>
    </member>
    <member kind="function">
      <type>PointMassNotifier *</type>
      <name>getNotifier</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ae452c3212971e0f73ef39f86bb2b56c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PointMassNotifier *</type>
      <name>getNotifier</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a2e32070a44dea0791ec66838f29e5e74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMass</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a35302788cfd48c8d04e6f9315bea605e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVertexSpringStiffness</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a70c1355ab5a3d135a757b61853131d18</anchor>
      <arglist>(double _kv)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVertexSpringStiffness</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a78376f202ff9bec23610d463d3a6525e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEdgeSpringStiffness</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>af05c1bc3ea6be85c040205e6b28f6e18</anchor>
      <arglist>(double _ke)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEdgeSpringStiffness</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a78a2878022d24e944d127256289211c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>aa7e02966131a1a7c98d885f695514b36</anchor>
      <arglist>(double _damp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ae8d0b2884f076c48654b0128a8190388</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllPointMasses</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a7d2317fc9ded431320454a4285118add</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PointMass *</type>
      <name>addPointMass</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a49baa020b8e60f90983f66d22dc3ecf9</anchor>
      <arglist>(const PointMass::Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumPointMasses</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ad5ad2fbfff59fd7aa5b49efbf26be0e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PointMass *</type>
      <name>getPointMass</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>aed5a94c8d2ec3ffefbddd5e44946b4a2</anchor>
      <arglist>(size_t _idx)</arglist>
    </member>
    <member kind="function">
      <type>const PointMass *</type>
      <name>getPointMass</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>aee2af4587bdc792f6faf1adfcd4d5969</anchor>
      <arglist>(size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectPointMasses</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a2ea98d31fcc3c521652c3fadd4cdaa05</anchor>
      <arglist>(size_t _idx1, size_t _idx2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFace</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a84ce5f2a5cedb682f4c631221089057c</anchor>
      <arglist>(const Eigen::Vector3i &amp;_face)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3i &amp;</type>
      <name>getFace</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a864ae358d0ae914368b1dc1f658d501d</anchor>
      <arglist>(size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumFaces</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>af495dd5d492caaecb6af86baf2353137</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearConstraintImpulse</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a612b59db8196238c6bd4474379f2a460</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SoftBodyNode</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>acfd33135b4ab2b126237ecedc5fa8df1</anchor>
      <arglist>(BodyNode *_parentBodyNode, Joint *_parentJoint, const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual BodyNode *</type>
      <name>clone</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a3ab94b36c7c07fb4688170d10a17addd</anchor>
      <arglist>(BodyNode *_parentBodyNode, Joint *_parentJoint) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a9894e306f793ee50238422454d1f66fa</anchor>
      <arglist>(const SkeletonPtr &amp;_skeleton) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clearExternalForces</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>acb3a5bc47e7c581bc907a893b3fd811a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>clearInternalForces</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ab7f6b6fddb7ce9a956251b571fb51e48</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ad731d787be989f21a55e002065b86b55</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, const Eigen::Vector4d &amp;_color=Eigen::Vector4d::Ones(), bool _useDefaultColor=true, int _depth=0) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkArticulatedInertiaUpdate</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a3e88ff6987bfbba43c55faf7e6bf714b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTransform</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>aaeba8572bfd12bbe347e3dfed78c412c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateVelocity</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a7837c09d21c4dc859d203d153eb51ccb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updatePartialAcceleration</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a403771dcfc2cbe68a7c190753496e176</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateArtInertia</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a27be0d7780049c7d5637226dabf01c14</anchor>
      <arglist>(double _timeStep) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateBiasForce</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a8ae51cc49a2704ffb53609b2f56c7c7c</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateBiasImpulse</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a580fc9fe0e91b267a8ffcfa5eebfba29</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateAccelerationID</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>afe905580af1e908fa3aeb73d44ad0229</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateAccelerationFD</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a4e35edc6bfd12ef86d7b4a95a112a96e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateVelocityChangeFD</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ab0bc4354fddbaf3dbd8c9260c9d16188</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTransmittedForceID</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ace80a0db571f7c161f10f0d85a031f44</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity, bool _withExternalForces=false) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTransmittedForceFD</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a246a7ac1c287d1c82a0a3c0c9fd063c9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTransmittedImpulse</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ae946d701d02c8d18b6a0f6aeb686f2ed</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateJointForceID</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>af8f72fec8ca5e30e202449b349ac32f8</anchor>
      <arglist>(double _timeStep, double _withDampingForces, double _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateJointForceFD</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a3c6a99629ea36eca034631427bce9119</anchor>
      <arglist>(double _timeStep, double _withDampingForces, double _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateJointImpulseFD</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a2fc7012bb53cc2b3a44dc6df412c0df7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a7fc3e3761aec6543498444131696de41</anchor>
      <arglist>(double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateMassMatrix</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a38cfebf6a1b7ee261968f946389bfd17</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateMassMatrix</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a367a2a7827f9d28235b4c0b01f54c471</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MCol, size_t _col) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateAugMassMatrix</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a5fab013f4b33fc8f2dee7e426d8f7a78</anchor>
      <arglist>(Eigen::MatrixXd &amp;_MCol, size_t _col, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateInvMassMatrix</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>adc1404f7a6c87f1d95c8185b2275c213</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateInvAugMassMatrix</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a92bba4f5f2f86dc3e926c6015947dae1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateInvMassMatrix</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>aa434faf4cc9aba920b025627257b14e1</anchor>
      <arglist>(Eigen::MatrixXd &amp;_InvMCol, size_t _col) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateInvAugMassMatrix</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a52c43c1a6a6b9119d4695f18d585662b</anchor>
      <arglist>(Eigen::MatrixXd &amp;_InvMCol, size_t _col, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateCoriolisForceVector</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a849112a63c700a8525365f7a1a08a9b8</anchor>
      <arglist>(Eigen::VectorXd &amp;_C) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateGravityForceVector</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a336280052e6cd11c35dd1513e42b1641</anchor>
      <arglist>(Eigen::VectorXd &amp;_g, const Eigen::Vector3d &amp;_gravity) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateCombinedVector</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>add0ee59fb7bcb7e1c4a1e8cecf255c91</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateCombinedVector</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a7fbaeeedc53811320e814a50f5fc9785</anchor>
      <arglist>(Eigen::VectorXd &amp;_Cg, const Eigen::Vector3d &amp;_gravity) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>aggregateExternalForces</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ad17426da103ba31b364c00aa7f46e129</anchor>
      <arglist>(Eigen::VectorXd &amp;_Fext) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; PointMass * &gt;</type>
      <name>mPointMasses</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a542d9e831a5f94e1c9cac69004d91f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PointMassNotifier *</type>
      <name>mNotifier</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a0b5d44051742fdccc8b3f39cffbb4c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mSoftP</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a94092021119be1e5e46825c8b1a66b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; SoftMeshShape &gt;</type>
      <name>mSoftShape</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a73a7f2daa3d6a820a1a4d7d354124c42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Inertia</type>
      <name>mI2</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a8b989c0ae3fb056e0f9ffe3474b44496</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Inertia</type>
      <name>mArtInertia2</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a65d318b58232344f049fed1bc65d0aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>math::Inertia</type>
      <name>mArtInertiaImplicit2</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ad58d1e2fea07a9772a3686ae96ffc6ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_addPiToArtInertia</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ad610ebad95ea72f695c945479fba44c4</anchor>
      <arglist>(const Eigen::Vector3d &amp;_p, double _Pi) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_addPiToArtInertiaImplicit</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a59785f71951fcc96ae1f79222e9c8ecb</anchor>
      <arglist>(const Eigen::Vector3d &amp;_p, double _ImplicitPi) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateInertiaWithPointMass</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a92a7af34ecfc9ec2447446c3dfccd1f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>PointMass</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>a2891ad00d7d39eadfb0738378a56f5ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>PointMassNotifier</name>
      <anchorfile>dc/d54/classdart_1_1dynamics_1_1SoftBodyNode.html</anchorfile>
      <anchor>ac9edd703e63249dd212181b947b8a02a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::SoftBodyNode::Properties</name>
    <filename>da/d19/structdart_1_1dynamics_1_1SoftBodyNode_1_1Properties.html</filename>
    <base>dart::dynamics::BodyNode::Properties</base>
    <base>dart::dynamics::SoftBodyNode::UniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>da/d19/structdart_1_1dynamics_1_1SoftBodyNode_1_1Properties.html</anchorfile>
      <anchor>a7adeb42b0d7e9f315440ceda7e5ba8c9</anchor>
      <arglist>(const BodyNode::Properties &amp;_bodyProperties=BodyNode::Properties(), const SoftBodyNode::UniqueProperties &amp;_softProperties=SoftBodyNode::UniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>da/d19/structdart_1_1dynamics_1_1SoftBodyNode_1_1Properties.html</anchorfile>
      <anchor>a103a3fb0c5da1eefd1ecfdf8b3a15e20</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d4/d2b/structdart_1_1dynamics_1_1SoftBodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>aee64c7decf9e24f5cd4c2930b51883eb</anchor>
      <arglist>(double _Kv=DART_DEFAULT_VERTEX_STIFFNESS, double _Ke=DART_DEFAULT_EDGE_STIFNESS, double _DampCoeff=DART_DEFAULT_DAMPING_COEFF, const std::vector&lt; PointMass::Properties &gt; &amp;_points=std::vector&lt; PointMass::Properties &gt;(), const std::vector&lt; Eigen::Vector3i &gt; &amp;_faces=std::vector&lt; Eigen::Vector3i &gt;())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniqueProperties</name>
      <anchorfile>d4/d2b/structdart_1_1dynamics_1_1SoftBodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>a96126d93014cea0011f28063eeca4ef9</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPointMass</name>
      <anchorfile>d4/d2b/structdart_1_1dynamics_1_1SoftBodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>a58b441feba83af302cc5526cc1ed971e</anchor>
      <arglist>(const PointMass::Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectPointMasses</name>
      <anchorfile>d4/d2b/structdart_1_1dynamics_1_1SoftBodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>a33ef296ffe95a3b05fb2c576ff6bfe52</anchor>
      <arglist>(size_t i1, size_t i2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFace</name>
      <anchorfile>d4/d2b/structdart_1_1dynamics_1_1SoftBodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>abde150f17381872f835a55f13d74c5c7</anchor>
      <arglist>(const Eigen::Vector3i &amp;_newFace)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mKv</name>
      <anchorfile>d4/d2b/structdart_1_1dynamics_1_1SoftBodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>a680befe7585f6aa5f30cb19a59af7ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mKe</name>
      <anchorfile>d4/d2b/structdart_1_1dynamics_1_1SoftBodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>a58217f0757ac4e972c7325d3dfd960a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mDampCoeff</name>
      <anchorfile>d4/d2b/structdart_1_1dynamics_1_1SoftBodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>af9ec07c349befee7e2e735ddf4f6742e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PointMass::Properties &gt;</type>
      <name>mPointProps</name>
      <anchorfile>d4/d2b/structdart_1_1dynamics_1_1SoftBodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>a475b05b46dc211597dff465da934f125</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Eigen::Vector3i &gt;</type>
      <name>mFaces</name>
      <anchorfile>d4/d2b/structdart_1_1dynamics_1_1SoftBodyNode_1_1UniqueProperties.html</anchorfile>
      <anchor>ad023f1a5203e326c38ba1a9114fdcaac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::SoftBodyNode::UniqueProperties</name>
    <filename>d4/d2b/structdart_1_1dynamics_1_1SoftBodyNode_1_1UniqueProperties.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SoftBodyNodeHelper</name>
    <filename>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</filename>
    <member kind="function" static="yes">
      <type>static SoftBodyNode::UniqueProperties</type>
      <name>makeBoxProperties</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>a8609677d2a88176391f2c672f5827d1a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size, const Eigen::Isometry3d &amp;_localTransform, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBox</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>a5f4ae6ece7d14231257ca7c3ae4181b7</anchor>
      <arglist>(SoftBodyNode *_softBodyNode, const Eigen::Vector3d &amp;_size, const Eigen::Isometry3d &amp;_localTransform, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SoftBodyNode::UniqueProperties</type>
      <name>makeBoxProperties</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>aa8056c6ebc67563349bd98ee603719f0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size, const Eigen::Isometry3d &amp;_localTransform, const Eigen::Vector3i &amp;_frags, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setBox</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>a56dd702c1bc0a41b47085f8ec76264ea</anchor>
      <arglist>(SoftBodyNode *_softBodyNode, const Eigen::Vector3d &amp;_size, const Eigen::Isometry3d &amp;_localTransform, const Eigen::Vector3i &amp;_frags, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SoftBodyNode::UniqueProperties</type>
      <name>makeSinglePointMassProperties</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>a877f02436b19c7586955b6d72d84247d</anchor>
      <arglist>(double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setSinglePointMass</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>a47927fd58b674bf3cd484077b959f20b</anchor>
      <arglist>(SoftBodyNode *_softBodyNode, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SoftBodyNode::UniqueProperties</type>
      <name>makeEllipsoidProperties</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>a7631b222e0f6049770d4ff42a7642adb</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size, size_t _nSlices, size_t _nStacks, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEllipsoid</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>ac9ca7d89fddf8dc11ed6832daa2eaea4</anchor>
      <arglist>(SoftBodyNode *_softBodyNode, const Eigen::Vector3d &amp;_size, size_t _nSlices, size_t _nStacks, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SoftBodyNode::UniqueProperties</type>
      <name>makeCylinderProperties</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>ad7c764d8b23d8e764581727b585387be</anchor>
      <arglist>(double _radius, double _height, size_t _nSlices, size_t _nStacks, size_t _nRings, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCylinder</name>
      <anchorfile>d0/dfa/classdart_1_1dynamics_1_1SoftBodyNodeHelper.html</anchorfile>
      <anchor>a27cafa19b02f0bed7c786fa6c1b15ad6</anchor>
      <arglist>(SoftBodyNode *_softBodyNode, double _radius, double _height, size_t _nSlices, size_t _nStacks, size_t _nRings, double _totalMass, double _vertexStiffness=DART_DEFAULT_VERTEX_STIFFNESS, double _edgeStiffness=DART_DEFAULT_EDGE_STIFNESS, double _dampingCoeff=DART_DEFAULT_DAMPING_COEFF)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::SoftMeshShape</name>
    <filename>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</filename>
    <base>dart::dynamics::Shape</base>
    <member kind="function">
      <type></type>
      <name>SoftMeshShape</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a9cf37b1e0297a885a7df879317549bfb</anchor>
      <arglist>(SoftBodyNode *_softBodyNode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SoftMeshShape</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>aedabeae10886a078689c2382742f109d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const aiMesh *</type>
      <name>getAssimpMesh</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a92f80322b6192d889afdc0b534bd7142</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const SoftBodyNode *</type>
      <name>getSoftBodyNode</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a8475e3323299e86d8f6e9eb5dce47bbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>af8a9bcb1f938228688daa64ee019fe24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Matrix3d</type>
      <name>computeInertia</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a1e98b0651acf4360035d101654c5be0a</anchor>
      <arglist>(double _mass) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a47f1839588c78cf2678f0df20a8be908</anchor>
      <arglist>(renderer::RenderInterface *_ri=nullptr, const Eigen::Vector4d &amp;_col=Eigen::Vector4d::Ones(), bool _default=true) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>computeVolume</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a80253a7b0971c98ca39fb9b30128941d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>_buildMesh</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a452a2cf0f63fd385f4357bbdd6f606e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SoftBodyNode *</type>
      <name>mSoftBodyNode</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>a56d83cf8a2916408f0bdcca2deeb7d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>aiMesh *</type>
      <name>mAssimpMesh</name>
      <anchorfile>d6/dae/classdart_1_1dynamics_1_1SoftMeshShape.html</anchorfile>
      <anchor>ac08ad2777cfc055f4ef42d7366fb830c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TemplatedJacobianNode</name>
    <filename>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</filename>
    <templarg>EntityType</templarg>
    <base>dart::dynamics::JacobianNode</base>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a8fd81cc04ada6b02ed7c4842fc30f7f8</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a531b80f05b016b0915a4f5e7603ec927</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>afb371c7e47a231166aca6461d7d381eb</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getWorldJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>af3652e978abed8aa00a5b8e614757ac0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ac89ab3e414a897d2b4920b02b06956ee</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a81a6b3668f4b4fd634fd09e8d2fbf06b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobian</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>aabb89db808e85b02daf5139e2bcfd819</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a700632cc2ff39a87c2d6e065f2c0084c</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a0d95daa11cd05b002167aa73837b7ba4</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianSpatialDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a9b524b02e9c31a3465f7959470c00524</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ab733691474b95a7dbec5e31dca1f6b35</anchor>
      <arglist>(const Frame *_inCoordinatesOf) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::Jacobian</type>
      <name>getJacobianClassicDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>a80d6ff9dc602068fc0cfd539ecd60c21</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ab1510f2aa590dfb41eebd761d242792e</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::LinearJacobian</type>
      <name>getLinearJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>acf274904bcec4c31e5f9e498ac3263ea</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset, const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function">
      <type>math::AngularJacobian</type>
      <name>getAngularJacobianDeriv</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>af57f99782db722f589751f88e1065d6b</anchor>
      <arglist>(const Frame *_inCoordinatesOf=Frame::World()) const overridefinal</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TemplatedJacobianNode</name>
      <anchorfile>d3/d10/classdart_1_1dynamics_1_1TemplatedJacobianNode.html</anchorfile>
      <anchor>ac2851d8aced93ce6c279d9ef520c99fb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::TranslationalJoint</name>
    <filename>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</filename>
    <base>MultiDofJoint&lt; 3 &gt;</base>
    <class kind="struct">dart::dynamics::TranslationalJoint::Properties</class>
    <member kind="function">
      <type></type>
      <name>TranslationalJoint</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>af19553a83da93ef8e84f5d3e82c6d5c9</anchor>
      <arglist>(const TranslationalJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TranslationalJoint</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a39eea79d09ecaf8c9eb883a8ffc4a740</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getTranslationalJointProperties</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a7af5081361f09076073c0230dfebafcc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>af40657610916e18a8a2f621e0a0c6434</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCyclic</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>ac03e520be322e20bafa830ac00ea2230</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 6, 3 &gt;</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>af7802e159abd6c92a25869275324fd05</anchor>
      <arglist>(const Eigen::Vector3d &amp;_positions) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>af26e0b45eba444c686c54a6eadd4a21b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TranslationalJoint</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a7b2a641dc124a0063c5ef9b63d83923f</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Joint *</type>
      <name>clone</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a21e2cab4edac54cfc82a9f098d90fae0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a9a2d1cccc9e64a1f17885d586c37b599</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalTransform</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>aaae11fafbdc1792f984b90918cb47b08</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobian</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a0d9be9d2117bf8a433b0051f7c1c305b</anchor>
      <arglist>(bool _mandatory=true) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobianTimeDeriv</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a32a1337715114573adfbe848237cf343</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>dc/d8d/classdart_1_1dynamics_1_1TranslationalJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::TranslationalJoint::Properties</name>
    <filename>da/dbc/structdart_1_1dynamics_1_1TranslationalJoint_1_1Properties.html</filename>
    <base>dart::dynamics::MultiDofJoint::Properties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>da/dbc/structdart_1_1dynamics_1_1TranslationalJoint_1_1Properties.html</anchorfile>
      <anchor>a1b8221a7817761d1ebfec564bdf2fd54</anchor>
      <arglist>(const MultiDofJoint&lt; 3 &gt;::Properties &amp;_properties=MultiDofJoint&lt; 3 &gt;::Properties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>da/dbc/structdart_1_1dynamics_1_1TranslationalJoint_1_1Properties.html</anchorfile>
      <anchor>abd8b8a9b6430f514424a44ae61675a7e</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::UniversalJoint</name>
    <filename>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</filename>
    <base>MultiDofJoint&lt; 2 &gt;</base>
    <class kind="struct">dart::dynamics::UniversalJoint::Properties</class>
    <class kind="struct">dart::dynamics::UniversalJoint::UniqueProperties</class>
    <member kind="function">
      <type></type>
      <name>UniversalJoint</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a7f7bbee55ce998d2e9ba1d672341d400</anchor>
      <arglist>(const UniversalJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniversalJoint</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>aab541e098b35a5d0051ff803e89cab96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>af578d4c0f724af4ce32ceab20f103651</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a2fcc8db95de4e02e65a0bb0659d14ff7</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getUniversalJointProperties</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a9b878e08c5f53575a0d474604e1cee3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a12162592af48bd3b41ac1095614aad35</anchor>
      <arglist>(const UniversalJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>aba73be458b1dc6226d4f493c560b2fd4</anchor>
      <arglist>(const UniversalJoint *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>UniversalJoint &amp;</type>
      <name>operator=</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a77fdff992ff87aab5d542303748e0e06</anchor>
      <arglist>(const UniversalJoint &amp;_otherJoint)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a3a67ed6e9ad933ffea31c25719cab61c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCyclic</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a7bed71e091dee6d4f3f43c87a776ca55</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis1</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>adda6d32cb67d0d0fd944f7bd2035d5e5</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis2</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>af727af82848346e26eb1bf0b6fb687b0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getAxis1</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a1fcfebe31b1460305adff7db4966411f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getAxis2</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>aaede6c7d0049bd1bcaba0cd5e8db3586</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, 6, 2 &gt;</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a2954a57c0094b6912c96395897bb54f6</anchor>
      <arglist>(const Eigen::Vector2d &amp;_positions) const override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiDofJoint</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af626d0306f74cd951e031101a065214a</anchor>
      <arglist>(const MultiDofJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiDofJoint</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af6a9dbc1d32bc19282dd2d784d6b6a09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a299a4e22dac4533d9ce2b70724f1915a</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>abd96574381a94874d9e84296cf7449f1</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getMultiDofJointProperties</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a3a9870bdfc370aa7326c759e462979f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab590e4cb52f518b1f2e7bcd10280d13c</anchor>
      <arglist>(const MultiDofJoint&lt; DOF &gt; &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>abbafd3e163f18addef1de282091c7d48</anchor>
      <arglist>(const MultiDofJoint&lt; DOF &gt; *_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>MultiDofJoint&lt; DOF &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a42eb718b902a70d65c35ad83fd737602</anchor>
      <arglist>(const MultiDofJoint&lt; DOF &gt; &amp;_otherJoint)</arglist>
    </member>
    <member kind="function">
      <type>DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a121f549c73c7463665ba5acb94f327b6</anchor>
      <arglist>(size_t index) override</arglist>
    </member>
    <member kind="function">
      <type>const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a56d39570b2bb0bfbb2515f8e30542923</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumDofs</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a43a55801341a1ecdb127aaff1b78676b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setDofName</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adb967d0bd025a7022346e226f33a7142</anchor>
      <arglist>(size_t _index, const std::string &amp;_name, bool _preserveName=true) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preserveDofName</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a234cca59d9673ae5f28512fd7279693a</anchor>
      <arglist>(size_t _index, bool _preserve) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDofNamePreserved</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8ac283f8f50690cee8a8b584cfa05bbe</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDofName</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2a516155574e94f8a72008e68b1ef2a4</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aa17ed0219109c8ae2431a6e5739d9244</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a179161b249126cbb2043c48fddb393f9</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCommand</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a727996b761aad451731ddebb81a50944</anchor>
      <arglist>(size_t _index, double _command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getCommand</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8bfa2493feb1a3ed13c5c5bc062c6ba1</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7a9d49697439f840a757c7287c3c4859</anchor>
      <arglist>(const Eigen::VectorXd &amp;_commands) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab9d418428de330f652228f267be8dfaf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aab84af08eade0cf0eee6815be8f93217</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a08f0c0c5d64b94ee71de186198b023cb</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab47e064e7551d7f66730642db1fbd40d</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7f1517584abd1d7284d6d190ea734743</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>add02dcf2d93b654d041d0de03f9e6a58</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2e25654883ffff27907744175f76fddf</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afc54796a247eb78d6e76845f5cdc4669</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0d4f3e8a4672b054f1fad9c830526ac9</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a80d2c51a235f7241c645fca5a42affdd</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a448bfb5fe02ffeb564d24b09afc7d1b7</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a074314a5fc9e7e217e5c0d0550409d29</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adc933b3962a5802395350ce3c75c2d34</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a11f6e67224ddcc930524ed0b8730e8fd</anchor>
      <arglist>(size_t _index, double _initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4262578db4f2978f17f351c2f51de7df</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a83944e598a597dd3b19abeb7adec3929</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>addd227452dd8a5e65add41c1756262cb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a67d9e136e29cbe61b5098b15e4430212</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aca5afc185be722fe5c30eee9447f0770</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>acaa6d8794f1639a8ad5d3e3229251aef</anchor>
      <arglist>(const Eigen::VectorXd &amp;_velocities) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab81c6cedf1f85bc30bed3cf505748823</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a22780c2deaa80cabda5908cd35c6afb8</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a82d366feb9087830f85bf23099e7777d</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a561d74b2f5db70355aec1481a59995e0</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afd4b8551b8a6ef9e05e1914824530340</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>acb6f7ab189ffab40dfcba01331d0329b</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af4f53e6fbf34ad1a6fffb9ea6a687f60</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a959d2e8f15b30fd4498e53cfb00ec8e1</anchor>
      <arglist>(size_t _index, double _initial) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6c4f2e641f513bffdcf1c1cace017928</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2817ed658653a05b99533ba6f7a03dde</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getInitialVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a34c8c9aabd08674a66a87ea6c37ccc7c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a5c387d73f3004daf5693693f1f2b9ff2</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad6902d9231cfa45897f2fca00cf08156</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a399d191ca1e5256cec2ba323f0c2d177</anchor>
      <arglist>(const Eigen::VectorXd &amp;_accelerations) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a90680f6bc529b710bfcdd311cb5fe665</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a63a40d8664532662f0a3a2345d0edb13</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7f4d9de0294c7d6302ca8c2ef1d8e34d</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0dae14fe97df9b494565026b3f5fac14</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6116417594649d5db6cd5a06055aed55</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a07a49215410387408e9936688622fdf6</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPositionsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6fad871fcd744ecddb2323e7a794a563</anchor>
      <arglist>(const Vector &amp;_positions)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getPositionsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4a3470038964cfe8184a6ba728412548</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocitiesStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ae7aa931fd1bf727daafb2651e376e384</anchor>
      <arglist>(const Vector &amp;_velocities)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getVelocitiesStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6d6c4264b76dadab5e323b596d9d7f78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2daf7ae406e645b3d48234c2634b5eb4</anchor>
      <arglist>(const Vector &amp;_accels)</arglist>
    </member>
    <member kind="function">
      <type>const Vector &amp;</type>
      <name>getAccelerationsStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a680528ecb078201e4ec2e37f8d492729</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afbf6552d9c8b3964979b678c883e24d0</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a79e3c4d16c1e3ce1d1aa64b0d9a3b807</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a520cce075a9b7095f7f23e244bf6f31d</anchor>
      <arglist>(const Eigen::VectorXd &amp;_forces) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7d94197af44eab04f5402d109ddd7498</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0abdaffd27d50ce6c3710bf04ca5604c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a19155cb2e4a2ea0aa476af158cd46f20</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a944337a16109d0bd86682581ce386be2</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af88cda0e5f201c5ff1b13367175a96f9</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7c08e0a4de4cd813019cb21588e57096</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVelocityChange</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a478d5beb8cc51000a02ade8d54da13e0</anchor>
      <arglist>(size_t _index, double _velocityChange) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getVelocityChange</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad2b3ac4079775bde2b713da6f1f9408c</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adedbdef5f59e76d7591d312c33a24582</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a61653481cfbbe0967f3a80c4f8114d00</anchor>
      <arglist>(size_t _index, double _impulse) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a567d1bb04d2fbe5632da52b434d78f30</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ac7c3c20f9fd5c769ca51ad7cde7de99b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integratePositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ac700e98c99b1ade0cbf63ab77174a0d7</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integrateVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8db24e20a58ae3945c98c4680693d04e</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a9f942a4aea8a3cd9376930fdc4d7f749</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q2, const Eigen::VectorXd &amp;_q1) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Matrix&lt; double, DOF, 1 &gt;</type>
      <name>getPositionDifferencesStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a3e10c4cebae8d8112554897fe9123926</anchor>
      <arglist>(const Vector &amp;_q2, const Vector &amp;_q1) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPotentialEnergy</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aa733b6e36f54bedfe297feb5e5275b0d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Vector6d</type>
      <name>getBodyConstraintWrench</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a141165d9d4794cf922e965d101f6571d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSpringStiffness</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a69a802fa145ed4331a856e069bab8c7f</anchor>
      <arglist>(size_t _index, double _k) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSpringStiffness</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a90af83b809eebf98ae7e185243ef6436</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRestPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4f7bc7e0d5c10e324969c7df101bde77</anchor>
      <arglist>(size_t _index, double _q0) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRestPosition</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a2b4555bdb9b5e46bcf9b766a292d6f94</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a466ff4b4e4260b2637f7bf8a4c69f354</anchor>
      <arglist>(size_t _index, double _d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aa597a7c4a2b5f00f73ad2200424d1ee8</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCoulombFriction</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af05accc9d0a1f386badb06f3756776e8</anchor>
      <arglist>(size_t _index, double _friction) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getCoulombFriction</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a5a9bbe735bb3a3c68b92322c5e979eec</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a9ff29d3abe8c6c3c50dcb5fffc53d7bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>UniversalJoint</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a83993bef3cc9008c7acbe726ac0ac8f4</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Joint *</type>
      <name>clone</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a8259d065fee5ebc71c93c127b91b1d21</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a5f3680d7d45dd0ce9bbd367592ea219e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalTransform</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>aa4881e539d8747725119dcfb23f7e3af</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobian</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a766bcaeae3c7b8b4a289b436607444dd</anchor>
      <arglist>(bool=true) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobianTimeDeriv</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a90d27a6c1dcc72e5bfc6ccdfa14c0e48</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MultiDofJoint</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aebce84f6be7a9725f43ff57816acfc71</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerDofs</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aeaa5491853b61e017037841989f4de83</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvMassMatrix</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4c5ffb2c7f73817abe9d584053eefe51</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceForInvAugMassMatrix</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aed2b4924d7542a7ed69201ef94eea591</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForceForInvMassMatrix</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adf534f80e0cb806c8e52b07f6a6e12d6</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvMassMatrixSegment</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a21056e75791130fdce115cdd6c33a8ea</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInvAugMassMatrixSegment</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0184659838e653f452447e50ddcdd306</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addInvMassMatrixSegmentTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aceea69dfce5684e82ff689b2bbc63782</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>getSpatialToGeneralized</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a69407379e7f265fab6e775201aeb8f13</anchor>
      <arglist>(const Eigen::Vector6d &amp;_spatial) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>acc2eec4a251207980ec8c328eb2527eb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a954a8a6b0d4dc82387566682e60cc7ff</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, 6, DOF &gt; &amp;</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab98130f46f0278228203c7e57189ead1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual Eigen::Matrix&lt; double, 6, DOF &gt;</type>
      <name>getLocalJacobianStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ae69cc19c7389d7fa2707cbe44bfd1c34</anchor>
      <arglist>(const Eigen::Matrix&lt; double, DOF, 1 &gt; &amp;_positions) const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const math::Jacobian</type>
      <name>getLocalJacobianTimeDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab1d663aabcaeefb4af8999f814104dd8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, 6, DOF &gt; &amp;</type>
      <name>getLocalJacobianTimeDerivStatic</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a58c6a50be34213d3d0b41b97d0e390a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, DOF, DOF &gt; &amp;</type>
      <name>getInvProjArtInertia</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a528d2b4dda452b480f37caeae48d13ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Eigen::Matrix&lt; double, DOF, DOF &gt; &amp;</type>
      <name>getInvProjArtInertiaImplicit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a75ee9b5c626bd4b1c6d7d682aad5642b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalSpatialVelocity</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a59b84b398e739afcdc7af4a463671542</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalSpatialAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>abb9e1037840164e8a504a9525e8f9c93</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLocalPrimaryAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6f1602aee14aa6da2fa20b0f5468fc07</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addVelocityTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a695b7ca508d75c0ec05a6f44193a0d32</anchor>
      <arglist>(Eigen::Vector6d &amp;_vel) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setPartialAccelerationTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a38538782270de20a7719bef4cce0941f</anchor>
      <arglist>(Eigen::Vector6d &amp;_partialAcceleration, const Eigen::Vector6d &amp;_childVelocity) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addAccelerationTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0c67ba1920904739f256c2ffc5c36edc</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addVelocityChangeTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7131af687c5441f5367f6509af59fac3</anchor>
      <arglist>(Eigen::Vector6d &amp;_velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addChildArtInertiaTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a21333ff1ff5616ed9b2cf5c4c8630dd8</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildArtInertiaImplicitTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ab04f3cfd4ed528821b3c824f0e8f2246</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertia</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a1106a8dac228592b4179cf3e6a893c27</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateInvProjArtInertiaImplicit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad28d890eb2ef95bcb712da59c209b61f</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasForceTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a4d7cbeb67047ed72a7dc451f2f6de4a2</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce, const Eigen::Vector6d &amp;_childPartialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addChildBiasImpulseTo</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a43065522936c0ff17261943bb07939de</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasImpulse, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a54a29f386653b06973ef62080cac2ba0</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateTotalImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad7bdb6946f0f4ba5df2abad1cf5f0b5b</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetTotalImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a58230b7b40ab0ad4c7e7c4fe773cb27b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateAcceleration</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a59bde4536c6423d0119b8765aac3db01</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateVelocityChange</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>afca2a5aa43a036e09f77aa76e84fa494</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateForceID</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad9029a773828ec608ab87d488b3218f6</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateForceFD</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a8852308c120e782aeee0644afbc11d53</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateImpulseID</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a1e188f117097d459c1ed1d18f005a19e</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateImpulseFD</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a9f455f7297554c35d02ee7836d38689b</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0c67477f166553f29bf6eb039fd40332</anchor>
      <arglist>(double _timeStep) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mUniversalP</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a57abd4f742755cc735f1971fd73c15f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MultiDofJoint&lt; DOF &gt;::UniqueProperties</type>
      <name>mMultiDofP</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>af26673521ed4c68536c0aa17bbd38616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::array&lt; DegreeOfFreedom *, DOF &gt;</type>
      <name>mDofs</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a0295360af9292b9413f7711a800f1650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mCommands</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a47310e00f6bafa84e892c2a6de7d1078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mPositions</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a67686193eb1f3a00406c6964051baf19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mPositionDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ad4b863b741157b8d6a0c4c272e2c63fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocities</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>ae3514a550010fdb8247277d1e483aa7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocitiesDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a205518d1d940bd7a58da3c4797dcd976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mAccelerations</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a1914d76f4a10a70cb769cfb078e6e761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mAccelerationsDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a24897f6727c7e9b94b1b180712ba3354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mForces</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a05eb3dd0d1a6babd1b64e0b32a87b52f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mForcesDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>adff503ec796639073c6e89c9aaeb8c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mVelocityChanges</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a175dc6b707e8768cceef85b9c25cf8a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a53e7b885ab3872ef75077d43c2098546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mConstraintImpulses</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7767c5503325a2797dcd818a898c9059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, 6, DOF &gt;</type>
      <name>mJacobian</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a35d34745d97230e6cd88e56603df41f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, 6, DOF &gt;</type>
      <name>mJacobianDeriv</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a949b3d7c16f880871b2a304e50e1b812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, DOF, DOF &gt;</type>
      <name>mInvProjArtInertia</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a40e1ebd071a7c4fb42f5ee953215722d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Matrix&lt; double, DOF, DOF &gt;</type>
      <name>mInvProjArtInertiaImplicit</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a5e665fa058bfd2c8809db6901ea26127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalForce</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a6c1af9cc0ef9fc1326ac13ff1e67c403</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mTotalImpulse</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a15f2342b6a09189540789f930d769951</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvM_a</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a7387fa0865e340d0442cdacb5e54f0f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>mInvMassMatrixSegment</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>aac97c52601a280fb48d48f057512bc63</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d1/d0e/classdart_1_1dynamics_1_1UniversalJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, DOF, 1 &gt;</type>
      <name>Vector</name>
      <anchorfile>da/d30/classdart_1_1dynamics_1_1MultiDofJoint.html</anchorfile>
      <anchor>a71c69d0d332861662f5a9dc33103148d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::UniversalJoint::Properties</name>
    <filename>df/df6/structdart_1_1dynamics_1_1UniversalJoint_1_1Properties.html</filename>
    <base>dart::dynamics::MultiDofJoint::Properties</base>
    <base>dart::dynamics::UniversalJoint::UniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>df/df6/structdart_1_1dynamics_1_1UniversalJoint_1_1Properties.html</anchorfile>
      <anchor>a377180921fee0a38a3e2032f77a2a5ab</anchor>
      <arglist>(const MultiDofJoint&lt; 2 &gt;::Properties &amp;_multiDofProperties=MultiDofJoint&lt; 2 &gt;::Properties(), const UniversalJoint::UniqueProperties &amp;_universalProperties=UniversalJoint::UniqueProperties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>df/df6/structdart_1_1dynamics_1_1UniversalJoint_1_1Properties.html</anchorfile>
      <anchor>a5ac468f5b52c26d832c2705e3dafcd01</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d9/dd5/structdart_1_1dynamics_1_1UniversalJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>aaf33b62442b40fdb39f3ea9b4b27b531</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis1=Eigen::Vector3d::UnitX(), const Eigen::Vector3d &amp;_axis2=Eigen::Vector3d::UnitY())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniqueProperties</name>
      <anchorfile>d9/dd5/structdart_1_1dynamics_1_1UniversalJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>ad265a7865a76258223102530189b0769</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; Eigen::Vector3d, 2 &gt;</type>
      <name>mAxis</name>
      <anchorfile>d9/dd5/structdart_1_1dynamics_1_1UniversalJoint_1_1UniqueProperties.html</anchorfile>
      <anchor>ad8428d875ac12debb1cddf01b8569130</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::UniversalJoint::UniqueProperties</name>
    <filename>d9/dd5/structdart_1_1dynamics_1_1UniversalJoint_1_1UniqueProperties.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::WeldJoint</name>
    <filename>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</filename>
    <base>dart::dynamics::ZeroDofJoint</base>
    <class kind="struct">dart::dynamics::WeldJoint::Properties</class>
    <member kind="function">
      <type></type>
      <name>WeldJoint</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a9439bcc047a06dfd870a16ecf49a28d1</anchor>
      <arglist>(const WeldJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WeldJoint</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>aade5b286041545e5a7b14d32c3ef26ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getWeldJointProperties</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>aba4054134ce14aa02700dd379c34aebc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getType</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>aa1f807727ceafd37f065750b605b3274</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCyclic</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a19117c999438dd08a1a55be657d2b313</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransformFromParentBodyNode</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>ae4456fa455ad0428f3d1bab0a2f32b2c</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransformFromChildBodyNode</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a033ab979e33507a6a11bed26cc7854a5</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T) override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ZeroDofJoint</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>adc06d9e57d0dfab77f0c1ef05cdae291</anchor>
      <arglist>(const ZeroDofJoint &amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ZeroDofJoint</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>adee652082c06fb6ec481756310e001a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getZeroDofJointProperties</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a2ed1ec77714921116cce2e9719dd5f30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a3555f8a602af849d872c0dd9f96c12f3</anchor>
      <arglist>(size_t) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const DegreeOfFreedom *</type>
      <name>getDof</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a6028488a045ba53c3f45c2ef0c2c0964</anchor>
      <arglist>(size_t) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setDofName</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a26c6ca414e88d1c681a09a8476b8c50e</anchor>
      <arglist>(size_t, const std::string &amp;, bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preserveDofName</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a75e870f156b5838fbc8d3c8f16b573f6</anchor>
      <arglist>(size_t, bool) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDofNamePreserved</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a6aeb683317722efa506bae98f1c2dbae</anchor>
      <arglist>(size_t) const override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDofName</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ae88b4d1591618be6fa39239895961b0e</anchor>
      <arglist>(size_t) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getNumDofs</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a0841d1743ecc0ca8fc7d9004d1b9b67d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getIndexInSkeleton</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ab9bbbf9745f30732594d0268c43d421e</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getIndexInTree</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>aa4180d15287e5954a1c6f832075572f7</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCommand</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad3e6a599234dc82ccbb14a47c6f3184e</anchor>
      <arglist>(size_t _index, double _command) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getCommand</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a4ad7648cef3bff6838355fac85013601</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCommands</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a11519b4d8a0d49d6328c1de2a646e360</anchor>
      <arglist>(const Eigen::VectorXd &amp;_commands) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::VectorXd</type>
      <name>getCommands</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a83a11f559ea4463d880915acd5cf9372</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetCommands</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a53d3454c333c5eabffc71ad9a5ff15b1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPosition</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a7464dfd47b60b0360b91b407bcbdce4f</anchor>
      <arglist>(size_t, double) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPosition</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a228e18a00119fbd0cea6b23b0e13f158</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPositions</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>adf6ea317ff1bcfeb66ea2ffa36fee68d</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::VectorXd</type>
      <name>getPositions</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a23e120f3b7b4d2ba656e34db0a224555</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPositionLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a7b7b3f38546de5e23194fcfed3def69b</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPositionLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a9786da08864637ba50c105c3dd761180</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPositionUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a4a32957e5753f5c2117bcadbf099b6c2</anchor>
      <arglist>(size_t _index, double _position) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPositionUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a1a881ec04d1ed35b504e669f8dc0e421</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasPositionLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad2ad8bcab237b21540d7f388aa2fd6da</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetPosition</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>aef7fc6645ffb0cab15fade57e4f08c5c</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetPositions</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a94ef8ce2c33d54101e943d32e78673ae</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInitialPosition</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a998f6978fd76e96a32a02c4aa2dbd95b</anchor>
      <arglist>(size_t _index, double _initial) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getInitialPosition</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>abdfcbd3e7c46796ac49ef154033269ea</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInitialPositions</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a29fbbef11009ac32d4568b0771f430a7</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::VectorXd</type>
      <name>getInitialPositions</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad9fbe4e435b4c0c02fd97c04d8925226</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVelocity</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a4761f66e91d56f70b4c1be366345eb67</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getVelocity</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a9775a5fd29faa8d898b5639d77603b39</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVelocities</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ac002abbfa56960c4e5ef25c55a582fa7</anchor>
      <arglist>(const Eigen::VectorXd &amp;_velocities) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::VectorXd</type>
      <name>getVelocities</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a04feb84a483bbc17f8aea1035e821d89</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVelocityLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a3170d53b41016d8457055cf74bf87b1d</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getVelocityLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a13f65e1a78cf8ae860385676160792fc</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVelocityUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a4eaf7639d453186352f021a03506c4f0</anchor>
      <arglist>(size_t _index, double _velocity) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getVelocityUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a35700b72c1935ff89be5e407d7766a71</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetVelocity</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>aa98690e09b711bbfc49b36e45f89c013</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetVelocities</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a92b6c83ec9d4a18163f9e79ce432d6fb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInitialVelocity</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a72137341d60757c52188f65ee034d461</anchor>
      <arglist>(size_t _index, double _initial) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getInitialVelocity</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a892ef30f9449d08d336c14d97b50fc52</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setInitialVelocities</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a5bb969da58bd0241d3796ff7e07d268d</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initial) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::VectorXd</type>
      <name>getInitialVelocities</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>af2795eecad5ccb8051f6695f078c0705</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAcceleration</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>abe25e0f43aa7ea6af512900374b0cf35</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getAcceleration</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>aea2027b8da631f91b5ffd20d6511f0a0</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAccelerations</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>afd7d7b83c6b135504fe2bddd7862c25b</anchor>
      <arglist>(const Eigen::VectorXd &amp;_accelerations) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::VectorXd</type>
      <name>getAccelerations</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a787ad8b7304a6dfeb258fa749cb4df6a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetAccelerations</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>add3d03281aee67ba95bea1225aa56014</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAccelerationLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ab7eb23f77b2b00452a8ca043d017ab0b</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getAccelerationLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a14085ed563d1d732c1e25acc47b4b0ea</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAccelerationUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>aba0a888de3097a0c58df474f3900e509</anchor>
      <arglist>(size_t _index, double _acceleration) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getAccelerationUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a50306d059870d19a718caecdcfb56086</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setForce</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a2b885a80e3bb1f1e28f6fd13cab35a9c</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getForce</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a0d1026ba18b316845317f70bb203d7a6</anchor>
      <arglist>(size_t _index) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setForces</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>afdb79207395a9e82869370a38cfdb9c8</anchor>
      <arglist>(const Eigen::VectorXd &amp;_forces) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::VectorXd</type>
      <name>getForces</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ab1d81b47e76c6ea1a15a0e5185e804ac</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetForces</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a8750c730976a0b6eea3ba679ec5090cf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setForceLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a9823de0e4c48e6081cfc3739337cac17</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getForceLowerLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>aa2f6046205991aec016e79e349471d42</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setForceUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a3816bcb6cb3bcb7669f8a731cc21dd95</anchor>
      <arglist>(size_t _index, double _force) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getForceUpperLimit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>add8d1cdef4c30061dbe16d0382106084</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVelocityChange</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a4cbbc07b73f82d61ed0df6aeb5182c14</anchor>
      <arglist>(size_t _index, double _velocityChange) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getVelocityChange</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>addaca32c0f3f27779d7211605edb635b</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetVelocityChanges</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a6811cb47040f888ce177cf2113852d38</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConstraintImpulse</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a5d36b066a6408559f51f39f4ad027b11</anchor>
      <arglist>(size_t _index, double _impulse) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getConstraintImpulse</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a65e2b994080cafee115e836bd7d700d8</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetConstraintImpulses</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a5cf126b514bafc19a0f8aa9050d39254</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integratePositions</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>adb87daeaf9ea818e1033f25f0580efc8</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integrateVelocities</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a3c6ad052126ed830ce0e3b8b6352ab6d</anchor>
      <arglist>(double _dt) override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPositionDifferences</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>af56c040ae1fadadf457ca2f7b82d78b6</anchor>
      <arglist>(const Eigen::VectorXd &amp;_q2, const Eigen::VectorXd &amp;_q1) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPotentialEnergy</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ab5b63d33cb5cc5e4e11d56461aa694d3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Vector6d</type>
      <name>getBodyConstraintWrench</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a59c9c9edec62d75c858c952c6c109b93</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSpringStiffness</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a7f0d9f82cf8765dd259e78f010f7e95b</anchor>
      <arglist>(size_t _index, double _k) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSpringStiffness</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad1425a49da60f86bb9820d76bedf05e1</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRestPosition</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a71290ecd336dc6e70805d61cbf834aac</anchor>
      <arglist>(size_t _index, double _q0) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRestPosition</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a5afdb3592fb7535c6198f215d7155df2</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDampingCoefficient</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>aed51eba84304ebed551323e73c3b6d1e</anchor>
      <arglist>(size_t _index, double _d) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDampingCoefficient</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a0f566a48c9d8993874818282990a7a54</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCoulombFriction</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a1420071869a78d98f081e39cef782530</anchor>
      <arglist>(size_t _index, double _friction) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getCoulombFriction</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>af5aba28264d66bba5d275321f7d48897</anchor>
      <arglist>(size_t _index) const override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStaticType</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>aa77c549d17f007132828ebd1c935e16a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WeldJoint</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a92b7dc6effec9b2e496a30c592b8c38b</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Joint *</type>
      <name>clone</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>af150db4f7f9c4f009c815fc69acaef2e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalTransform</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a468a7993ba180f569cc7df69f69747b8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalSpatialVelocity</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a99fe4c77d9a3f4449a0e09fc74a53b53</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalSpatialAcceleration</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a0ed1ce341b8f674bb303f89539e4b44b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalPrimaryAcceleration</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>acbc80afd6456547ae0255e59c853930b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobian</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a04f114ec32cf1a6e0d9d040f6081ff69</anchor>
      <arglist>(bool=true) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateLocalJacobianTimeDeriv</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a85c3ad50dc668522895d893a7e9f3666</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ZeroDofJoint</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a4865d1fd6b444a3ea17f0b0909c27503</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerDofs</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a6940d0eee52e92e6d1bf387db0ba2f34</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateDegreeOfFreedomNames</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ac4e9f64834adb930882a7674a51c1495</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a32e2322de137a2deb3832d4e818bfe09</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>math::Jacobian</type>
      <name>getLocalJacobian</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a8fcaca3a9967918bcdf2f0582d472735</anchor>
      <arglist>(const Eigen::VectorXd &amp;_positions) const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const math::Jacobian</type>
      <name>getLocalJacobianTimeDeriv</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a79a9ab488dd3689a0fbdc5ba62630ef9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addVelocityTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a7c50f03310035341a579a713511c7dfb</anchor>
      <arglist>(Eigen::Vector6d &amp;_vel) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setPartialAccelerationTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a1f726f837917146c1848849585dbb859</anchor>
      <arglist>(Eigen::Vector6d &amp;_partialAcceleration, const Eigen::Vector6d &amp;_childVelocity) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addAccelerationTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a511f30d7a1668a51d3adf5a16ff23672</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addVelocityChangeTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a02fce9dbbafaaf117e35b8524fb5eab7</anchor>
      <arglist>(Eigen::Vector6d &amp;_velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addChildArtInertiaTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a2953a6e0533fefac15f56d3133e7924b</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addChildArtInertiaImplicitTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a4a1b4c37b38bd09a9c86d240376df718</anchor>
      <arglist>(Eigen::Matrix6d &amp;_parentArtInertia, const Eigen::Matrix6d &amp;_childArtInertia) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateInvProjArtInertia</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad5ac09922cf45c0ccfd6fb323e3bc75e</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateInvProjArtInertiaImplicit</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a93e3475b29d48a98c9ac8352cfc4bb80</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addChildBiasForceTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a365bbb2836e779859fa7f2ffe6dd631b</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce, const Eigen::Vector6d &amp;_childPartialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addChildBiasImpulseTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a30011b74bbfd260f6d3a9d8c3ffd9093</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasImpulse, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTotalForce</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ab6044aedf66519825738951a80be1765</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTotalImpulse</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a961c6e58547e81b12900a027430e21da</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resetTotalImpulses</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad726a9dcab6cb6bf64f568732555e31d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateAcceleration</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>afaca58018997d1d6b687743d86d158ff</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateVelocityChange</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a8d3be36c94f69dbd88048c71a463cc77</anchor>
      <arglist>(const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_velocityChange) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateForceID</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a46d6809c7e108b7355796562309f032e</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateForceFD</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a9041f182d356df03f1e5e222940d3474</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce, double _timeStep, bool _withDampingForces, bool _withSpringForces) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateImpulseID</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a4777e72f89659e8639397d20c76b2c8e</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateImpulseFD</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a0763e2c0996a206339461c654dbd8583</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyImpulse) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateConstrainedTerms</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a9c0b06c8720adbe3e74e9a64514fa5af</anchor>
      <arglist>(double _timeStep) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addChildBiasForceForInvMassMatrix</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a17239509ea8151b6af2db72689653068</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addChildBiasForceForInvAugMassMatrix</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a048ddf0153d8e3c25cac1350f4887471</anchor>
      <arglist>(Eigen::Vector6d &amp;_parentBiasForce, const Eigen::Matrix6d &amp;_childArtInertia, const Eigen::Vector6d &amp;_childBiasForce) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateTotalForceForInvMassMatrix</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ad0b394535f3424d663ec6df17916914b</anchor>
      <arglist>(const Eigen::Vector6d &amp;_bodyForce) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getInvMassMatrixSegment</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a15e75d291e55e37bc3eae9710402c03c</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getInvAugMassMatrixSegment</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>ab33a6439accf4baee1a4857cfe599fa4</anchor>
      <arglist>(Eigen::MatrixXd &amp;_invMassMat, const size_t _col, const Eigen::Matrix6d &amp;_artInertia, const Eigen::Vector6d &amp;_spatialAcc) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>addInvMassMatrixSegmentTo</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a160dc181cad600b53c0e1cd8e724d7d5</anchor>
      <arglist>(Eigen::Vector6d &amp;_acc) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Eigen::VectorXd</type>
      <name>getSpatialToGeneralized</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a70e86fd73b97028578e2768598779ae3</anchor>
      <arglist>(const Eigen::Vector6d &amp;_spatial) override</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Skeleton</name>
      <anchorfile>d8/da2/classdart_1_1dynamics_1_1WeldJoint.html</anchorfile>
      <anchor>a6a11291b70c2cbded85d321ce539c62f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::WeldJoint::Properties</name>
    <filename>d4/d7c/structdart_1_1dynamics_1_1WeldJoint_1_1Properties.html</filename>
    <base>dart::dynamics::ZeroDofJoint::Properties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d4/d7c/structdart_1_1dynamics_1_1WeldJoint_1_1Properties.html</anchorfile>
      <anchor>a11735b57a2c71342bc96b42b8135a7fe</anchor>
      <arglist>(const Joint::Properties &amp;_properties=Joint::Properties())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>d4/d7c/structdart_1_1dynamics_1_1WeldJoint_1_1Properties.html</anchorfile>
      <anchor>ac0f29d764cc029af4509479618c4ab08</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>dc/d8c/structdart_1_1dynamics_1_1ZeroDofJoint_1_1Properties.html</anchorfile>
      <anchor>aecea39fe423c9f5269eec239aeffbfc3</anchor>
      <arglist>(const Joint::Properties &amp;_properties=Joint::Properties())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::dynamics::ZeroDofJoint</name>
    <filename>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</filename>
    <base>dart::dynamics::Joint</base>
    <class kind="struct">dart::dynamics::ZeroDofJoint::Properties</class>
    <member kind="variable" protection="private">
      <type>const std::string</type>
      <name>emptyString</name>
      <anchorfile>db/d77/classdart_1_1dynamics_1_1ZeroDofJoint.html</anchorfile>
      <anchor>a59d8c6a1ce9deaffaa7b9a0ca4362747</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::dynamics::ZeroDofJoint::Properties</name>
    <filename>dc/d8c/structdart_1_1dynamics_1_1ZeroDofJoint_1_1Properties.html</filename>
    <base>dart::dynamics::Joint::Properties</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Properties</name>
      <anchorfile>dc/d8c/structdart_1_1dynamics_1_1ZeroDofJoint_1_1Properties.html</anchorfile>
      <anchor>ae3bd97210629453ea612ea5cb29dd7c7</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::gui</name>
    <filename>d0/dcf/namespacedart_1_1gui.html</filename>
    <class kind="class">dart::gui::GlutWindow</class>
    <class kind="class">dart::gui::GraphWindow</class>
    <class kind="struct">dart::gui::jitter_point</class>
    <class kind="class">dart::gui::Jitter</class>
    <class kind="class">dart::gui::SimWindow</class>
    <class kind="class">dart::gui::SoftSimWindow</class>
    <class kind="class">dart::gui::Trackball</class>
    <class kind="class">dart::gui::Win2D</class>
    <class kind="class">dart::gui::Win3D</class>
    <member kind="function">
      <type>void</type>
      <name>drawStringOnScreen</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>aed01baef32d8b5e219071ebcdd9f8279</anchor>
      <arglist>(float _x, float _y, const std::string &amp;_s, bool _bigFont)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArrow3D</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a6737073c5dc3bbeca4c8c3fa02bcf57d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_pt, const Eigen::Vector3d &amp;_dir, const double _length, const double _thickness, const double _arrowThickness)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawArrow2D</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a136a9ef3518f5e063d4b8f8b025723cc</anchor>
      <arglist>(const Eigen::Vector2d &amp;_pt, const Eigen::Vector2d &amp;_vec, double _thickness)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawProgressBar</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a2813fb1495c904db58809b2b7741614d</anchor>
      <arglist>(int _currFrame, int _totalFrame)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accFrustum</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a078416ecc6eaca1ef95264f1b20ddb19</anchor>
      <arglist>(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble nearPlane, GLdouble farPlane, GLdouble pixdx, GLdouble pixdy, GLdouble eyedx, GLdouble eyedy, GLdouble focus)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>accPerspective</name>
      <anchorfile>d0/dcf/namespacedart_1_1gui.html</anchorfile>
      <anchor>a2c941c1d02febca8d5f9828e0eb7887d</anchor>
      <arglist>(GLdouble fovy, GLdouble aspect, GLdouble nearPlane, GLdouble farPlane, GLdouble pixdx, GLdouble pixdy, GLdouble eyedx, GLdouble eyedy, GLdouble focus)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::GlutWindow</name>
    <filename>d1/d33/classdart_1_1gui_1_1GlutWindow.html</filename>
    <member kind="function">
      <type></type>
      <name>GlutWindow</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>ade729c55069b099e6b88fac9f18b1f5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GlutWindow</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>aef170e75a65e96b1c7ef2948c9059767</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initWindow</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a8b41128be04cbe6005e72c6509227810</anchor>
      <arglist>(int _w, int _h, const char *_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>reshape</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a73b70ae7440a2441aa46bdc57b565c04</anchor>
      <arglist>(int _w, int _h)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>keyEvent</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a64fcaf65679d010aace3f2b91dcb3fe6</anchor>
      <arglist>(unsigned char _key, int _x, int _y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>specKeyEvent</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>ac660d2468da9d029d6ae43767e57aff5</anchor>
      <arglist>(int _key, int _x, int _y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>mouseClick</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a837bec2d991a831486dda6d1f38c67f0</anchor>
      <arglist>(int _button, int _state, int _x, int _y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>mouseDrag</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a0829e6f712362a33994cc95a73b29239</anchor>
      <arglist>(int _x, int _y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>mouseMove</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a265cd2ef52631f58c9d137ec6f5708c6</anchor>
      <arglist>(int _x, int _y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>refresh</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>af398c7b13ba369251b5440262378230e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>refreshTimer</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a9c5bded8b84bfea659bdd66ffcc6c8fd</anchor>
      <arglist>(int _val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runTimer</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a2ec6e6ada1d025d83668490f49acb79e</anchor>
      <arglist>(int _val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GlutWindow *</type>
      <name>current</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a391e127f13d571850117714eaa1a8997</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::vector&lt; GlutWindow * &gt;</type>
      <name>mWindows</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>aad788cd617640cfc0fdfa7c3a14d5fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::vector&lt; int &gt;</type>
      <name>mWinIDs</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a44496c041c40292385ce3ab5a18eb47f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a02e91a6bdd229d7448e70b4f0e124f70</anchor>
      <arglist>(int _w, int _h)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a1f843290dd635d7f6a2636416a5d3010</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>keyboard</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a9e7fb1809eb4e9a0ba16f38ddbf5a705</anchor>
      <arglist>(unsigned char _key, int _x, int _y)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>specKey</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>ae73b27dd2924a7d91510c3759f9eb6b9</anchor>
      <arglist>(int _key, int _x, int _y)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>click</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a45f2143f1842c5ed0aa7d67dba83fd79</anchor>
      <arglist>(int _button, int _state, int _x, int _y)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>drag</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a731c742119aa38a6f648452a647e79f5</anchor>
      <arglist>(int _x, int _y)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>move</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a403680fb29f83b8c1db9dfc72335e880</anchor>
      <arglist>(int _x, int _y)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>displayTimer</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>adf919a5f3f1e1a7476f4811802d9339f</anchor>
      <arglist>(int _val)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>simTimer</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a7b93bcdf3e582203294ece1190310bfa</anchor>
      <arglist>(int _val)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>screenshot</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a462309e471fbf61356db2bae3468b3cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mWinWidth</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a8e0c1faf0fbd6c56a9bd74e1ca59b8c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mWinHeight</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a1fedec243e338f96f50fbf9f988d357d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mMouseX</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>abfd95d5ec55d2dc4fb379153fbd9f0bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mMouseY</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a6044c4060180b3b1aed11a642d3ebaa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mDisplayTimeout</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a0cbc77f9ad81caedd41214067a90481b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mMouseDown</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>aad887dd92cacf1ff5ebc441411832186</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mMouseDrag</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a7453760e52d92db1310d68e26127a8f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mCapture</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a03d049f3813b0232ef367c855f6a3163</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mBackground</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>ae6e097cc33fbe9197fe535370930c6f2</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>renderer::RenderInterface *</type>
      <name>mRI</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>aa9f70a8401cbee32cc10fec5c0b90ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; unsigned char &gt;</type>
      <name>mScreenshotTemp</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a909e0f34027645d02193a4ad6d94e9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; unsigned char &gt;</type>
      <name>mScreenshotTemp2</name>
      <anchorfile>d1/d33/classdart_1_1gui_1_1GlutWindow.html</anchorfile>
      <anchor>a8b511f1180c2f1014a303bf4bdd78721</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::GraphWindow</name>
    <filename>d4/d40/classdart_1_1gui_1_1GraphWindow.html</filename>
    <base>dart::gui::Win2D</base>
    <member kind="function">
      <type></type>
      <name>GraphWindow</name>
      <anchorfile>d4/d40/classdart_1_1gui_1_1GraphWindow.html</anchorfile>
      <anchor>ab6de6a3cc80d7eaf4f008abe90773a1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GraphWindow</name>
      <anchorfile>d4/d40/classdart_1_1gui_1_1GraphWindow.html</anchorfile>
      <anchor>a9c9da2ee59f54265176793cc4274b0af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>d4/d40/classdart_1_1gui_1_1GraphWindow.html</anchorfile>
      <anchor>a090ceb3914e8401d534d540a09c799fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>keyboard</name>
      <anchorfile>d4/d40/classdart_1_1gui_1_1GraphWindow.html</anchorfile>
      <anchor>ae8e20629543563017d4698561ac73cfc</anchor>
      <arglist>(unsigned char _key, int _x, int _y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>d4/d40/classdart_1_1gui_1_1GraphWindow.html</anchorfile>
      <anchor>a74f36b635c850ec7cba7f52eaa4b2211</anchor>
      <arglist>(Eigen::VectorXd _data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Win2D</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a36842239e7e986d2d36a1ecaa993fd60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>ac3a73e799ba32239e81a90742d4beb99</anchor>
      <arglist>(int _w, int _h)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a1b6060109348d45878f3a70bace12d8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>click</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a008367dbc772abca6d163febff8a466d</anchor>
      <arglist>(int _button, int _state, int _x, int _y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drag</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>af09f6cb85169a0e9db6034aa20b770d1</anchor>
      <arglist>(int _x, int _y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initGL</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>aaf2e7d1d4cc2d675b4a54e95f706f76c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mData</name>
      <anchorfile>d4/d40/classdart_1_1gui_1_1GraphWindow.html</anchorfile>
      <anchor>a0cffc691ea6fbd06a39477a9fdca4ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mTranslate</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a67ff5dfcb81763aa00dd5a994d6299cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTransX</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a65f721d1252bae6f330b791dd8cb1d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTransY</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a0ab6436a8d8b1606f407529705595b92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::gui::jitter_point</name>
    <filename>d8/d0d/structdart_1_1gui_1_1jitter__point.html</filename>
    <member kind="variable">
      <type>GLfloat</type>
      <name>x</name>
      <anchorfile>d8/d0d/structdart_1_1gui_1_1jitter__point.html</anchorfile>
      <anchor>a64344d246bceef448d1c2c1fad1d6f51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GLfloat</type>
      <name>y</name>
      <anchorfile>d8/d0d/structdart_1_1gui_1_1jitter__point.html</anchorfile>
      <anchor>aea13ac6733f0516a692fc8b1a4be871d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::Jitter</name>
    <filename>da/ded/classdart_1_1gui_1_1Jitter.html</filename>
    <member kind="variable" static="yes">
      <type>static jitter_point</type>
      <name>j2</name>
      <anchorfile>da/ded/classdart_1_1gui_1_1Jitter.html</anchorfile>
      <anchor>a68de230b43263a67c6a86ace5e3c9243</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static jitter_point</type>
      <name>j4</name>
      <anchorfile>da/ded/classdart_1_1gui_1_1Jitter.html</anchorfile>
      <anchor>a02d3f5cd708ead192d083ddd4754fa9f</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static jitter_point</type>
      <name>j8</name>
      <anchorfile>da/ded/classdart_1_1gui_1_1Jitter.html</anchorfile>
      <anchor>aa78af7c5a1069cce01b787ca433865d0</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static jitter_point</type>
      <name>j15</name>
      <anchorfile>da/ded/classdart_1_1gui_1_1Jitter.html</anchorfile>
      <anchor>a90695eac7152b1877d1f7f70e6158cc5</anchor>
      <arglist>[15]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static jitter_point</type>
      <name>j24</name>
      <anchorfile>da/ded/classdart_1_1gui_1_1Jitter.html</anchorfile>
      <anchor>ace57c8b6037d47e29187337a43e0f6db</anchor>
      <arglist>[24]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static jitter_point</type>
      <name>j66</name>
      <anchorfile>da/ded/classdart_1_1gui_1_1Jitter.html</anchorfile>
      <anchor>a0b585db09c076632065d8828a51bc2bb</anchor>
      <arglist>[66]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::SimWindow</name>
    <filename>d9/d05/classdart_1_1gui_1_1SimWindow.html</filename>
    <base>dart::gui::Win3D</base>
    <member kind="function">
      <type></type>
      <name>SimWindow</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a0caa9d9d58d0c346092c396d8a18026d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SimWindow</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a84a5efcca016c271be0ffa6b20f50906</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>timeStepping</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>ac29a6f682db7f66136fe5644de217caf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawSkels</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a1c2a180ba4be75d2ded8d2f0f499589f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawEntities</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>acf691a61bf149feb8412143dab2b9383</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>displayTimer</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a31b962739851fdcac932ac8009dc38db</anchor>
      <arglist>(int _val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a9553988847fcbad396e6967f13eaf0e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>keyboard</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a10e696df9e62585b7f815b18abd2e8b6</anchor>
      <arglist>(unsigned char _key, int _x, int _y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorld</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>afb2f6dceb1a9dbb4d52442b4b14a150e</anchor>
      <arglist>(dart::simulation::WorldPtr _world)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveWorld</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a65fc17a37aa640ea4d1ab81c3d94add6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>plot</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>af784298c68d6a4c0adce65bfac6a3f3e</anchor>
      <arglist>(Eigen::VectorXd &amp;_data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Win3D</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a6edb95192d918478fd0df82ebcdf0a0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initWindow</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>acc0475383343c366eefc321803b48aa1</anchor>
      <arglist>(int _w, int _h, const char *_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resize</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>aca6fa3ec4d532c68e3ad652de1e38617</anchor>
      <arglist>(int _w, int _h)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>render</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a5eb8c37c27fe118c2cda818cf1ff65c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>click</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>afa378a19aafab795bdd09299fbbfe180</anchor>
      <arglist>(int _button, int _state, int _x, int _y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drag</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>ab34aa2c482190ebecf2ea6dad18f7de4</anchor>
      <arglist>(int _x, int _y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>capturing</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>ac69f6f3956880c8af2646062edae809a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initGL</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a5ed6a9e23c47c45d545cc29592ccea27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initLights</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a539604adda2e6cc8e514cc433e6e32f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>simulation::WorldPtr</type>
      <name>mWorld</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a17abeb350b301503571d125ba1d2f832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mPlayFrame</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a965e0cd4536689bc862205bc848476bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mPlay</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a843dde2a24337c67c70a9f2b046bdfcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mSimulating</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>a774bf8b65b7b3e1f0a320210e46e84b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mShowMarkers</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>aa5985fa2c00ea209b5b754dcd359fbf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; GraphWindow * &gt;</type>
      <name>mGraphWindows</name>
      <anchorfile>d9/d05/classdart_1_1gui_1_1SimWindow.html</anchorfile>
      <anchor>ae45ba970bebf1c6b5a8bd33becd83666</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Trackball</type>
      <name>mTrackBall</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a4c942b630d04a0e95bccbf84bd413a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mTrans</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>ac8402595b842775ed26dde371ff58dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mEye</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a48508a30e4de1fb22bd06e634b5cc351</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mUp</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a6b4c9fd4ffa9c72d10abea33ed61088e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mZoom</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a69e0d1a5893daead1ac89aa9c6b02589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mPersp</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>ae192f4f9d8f008eba6a1795689367d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mRotate</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a475bc57ebeffa84949439602e73965e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mTranslate</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>aae2c4c90637857acce0cad93430dd448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mZooming</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>ae6dcdb24d660877352ad726636bb5ef3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::SoftSimWindow</name>
    <filename>d9/de6/classdart_1_1gui_1_1SoftSimWindow.html</filename>
    <base>dart::gui::SimWindow</base>
    <member kind="function">
      <type></type>
      <name>SoftSimWindow</name>
      <anchorfile>d9/de6/classdart_1_1gui_1_1SoftSimWindow.html</anchorfile>
      <anchor>a5d7b69f0d4d5c3f831494faaf5892743</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SoftSimWindow</name>
      <anchorfile>d9/de6/classdart_1_1gui_1_1SoftSimWindow.html</anchorfile>
      <anchor>ac185dec9bbf39e608fda0ead16683a1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>keyboard</name>
      <anchorfile>d9/de6/classdart_1_1gui_1_1SoftSimWindow.html</anchorfile>
      <anchor>a926f29a1568d46b7fe4440eb6fb1e98c</anchor>
      <arglist>(unsigned char key, int x, int y)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mShowPointMasses</name>
      <anchorfile>d9/de6/classdart_1_1gui_1_1SoftSimWindow.html</anchorfile>
      <anchor>ae4a3794f9e547aad6b1064b42d28084b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mShowMeshs</name>
      <anchorfile>d9/de6/classdart_1_1gui_1_1SoftSimWindow.html</anchorfile>
      <anchor>aa7fd61b498c976d3a295de480f262c10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::Trackball</name>
    <filename>de/d9b/classdart_1_1gui_1_1Trackball.html</filename>
    <member kind="function">
      <type>EIGEN_MAKE_ALIGNED_OPERATOR_NEW</type>
      <name>Trackball</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a4436cc7e00488107b108fa9672acb8cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Trackball</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a10b89406848a04fc067a3b5c0dab2751</anchor>
      <arglist>(const Eigen::Vector2d &amp;_center, double _radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startBall</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>ac1c83a44d3f391ff95fd94617548cc99</anchor>
      <arglist>(double _x, double _y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateBall</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a0947e098c8a03fe1b8e4b00f95aff40c</anchor>
      <arglist>(double _x, double _y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyGLRotation</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a9947356fefc862df7948a575ddd469ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a38f979f06c568457c3d55a0ce9e74eb0</anchor>
      <arglist>(int _winWidth, int _winHeight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrackball</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>ace692a981533cd48b1a9f992517463f8</anchor>
      <arglist>(const Eigen::Vector2d &amp;_center, const double _radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCenter</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a90dda8bbc6b14bec4a7d34844b42ad43</anchor>
      <arglist>(const Eigen::Vector2d &amp;_center)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>aa51687a618a11a5d6d62b3785cf313cc</anchor>
      <arglist>(const double _radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuaternion</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a374f8ccfb35f54ce6723467872da8e43</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Quaterniond</type>
      <name>getCurrQuat</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a5c5ba38c2786f5be125a0a84c5f30b72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>getRotationMatrix</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>ac23adb72870c7347de8dcf539879d56c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>getCenter</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a33d4112d811dbfe241dc0c0ef0a6a3bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRadius</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a394239a2ae0efec7281a9f518bab0dc3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mouseOnSphere</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a9c5665b4a32f0fe6168401415cb8e559</anchor>
      <arglist>(double _mouseX, double _mouseY) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Eigen::Quaterniond</type>
      <name>quatFromVectors</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>ae06b046bb599245ebce8f6f79d63eab0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_from, const Eigen::Vector3d &amp;_to) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector2d</type>
      <name>mCenter</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a21f6d6f9bbb1e6dcff44729d3c3c408b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mRadius</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a88ef4d3274fba5bd9d8fbc376d68094c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mStartPos</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a002ec153aea7cceec825aaea5648bcbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Quaterniond</type>
      <name>mCurrQuat</name>
      <anchorfile>de/d9b/classdart_1_1gui_1_1Trackball.html</anchorfile>
      <anchor>a26fffcaef9a39dfcb0560bc52433c2db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::Win2D</name>
    <filename>d2/ded/classdart_1_1gui_1_1Win2D.html</filename>
    <base>dart::gui::GlutWindow</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>keyboard</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a0dd3a6a6895b7cabf6109647a73bb13b</anchor>
      <arglist>(unsigned char _key, int _x, int _y)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>d2/ded/classdart_1_1gui_1_1Win2D.html</anchorfile>
      <anchor>a73d666aa914c774f330dab2748eb2229</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::gui::Win3D</name>
    <filename>d9/df5/classdart_1_1gui_1_1Win3D.html</filename>
    <base>dart::gui::GlutWindow</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>keyboard</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a838eb80b960ebfd5383c293f61ffd323</anchor>
      <arglist>(unsigned char _key, int _x, int _y)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>d9/df5/classdart_1_1gui_1_1Win3D.html</anchorfile>
      <anchor>a0ed33795c7172f7769ab66a7ab14bcea</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::integration</name>
    <filename>d2/d08/namespacedart_1_1integration.html</filename>
    <class kind="class">dart::integration::EulerIntegrator</class>
    <class kind="class">dart::integration::IntegrableSystem</class>
    <class kind="class">dart::integration::Integrator</class>
    <class kind="class">dart::integration::RK4Integrator</class>
    <class kind="class">dart::integration::SemiImplicitEulerIntegrator</class>
  </compound>
  <compound kind="class">
    <name>dart::integration::EulerIntegrator</name>
    <filename>d5/d89/classdart_1_1integration_1_1EulerIntegrator.html</filename>
    <base>dart::integration::Integrator</base>
    <member kind="function">
      <type></type>
      <name>EulerIntegrator</name>
      <anchorfile>d5/d89/classdart_1_1integration_1_1EulerIntegrator.html</anchorfile>
      <anchor>a6965c805658806e1123d0a981d913beb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EulerIntegrator</name>
      <anchorfile>d5/d89/classdart_1_1integration_1_1EulerIntegrator.html</anchorfile>
      <anchor>ad7b2c699890aea80b139dc40fc7495fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integrate</name>
      <anchorfile>d5/d89/classdart_1_1integration_1_1EulerIntegrator.html</anchorfile>
      <anchor>a5fa486f62742ea386e7fdfffe9bf1ecf</anchor>
      <arglist>(IntegrableSystem *_system, double _dt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integratePos</name>
      <anchorfile>d5/d89/classdart_1_1integration_1_1EulerIntegrator.html</anchorfile>
      <anchor>ab200b9e24644cf7df342f7676af9215c</anchor>
      <arglist>(IntegrableSystem *_system, double _dt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integrateVel</name>
      <anchorfile>d5/d89/classdart_1_1integration_1_1EulerIntegrator.html</anchorfile>
      <anchor>a52dcb852270248248b39443434c3c05d</anchor>
      <arglist>(IntegrableSystem *_system, double _dt)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Integrator</name>
      <anchorfile>de/d6a/classdart_1_1integration_1_1Integrator.html</anchorfile>
      <anchor>a91c61669cc390c4f9d444d05e99c2cb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Integrator</name>
      <anchorfile>de/d6a/classdart_1_1integration_1_1Integrator.html</anchorfile>
      <anchor>a964ade6f361c91b12f6b468c922a83a0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::integration::IntegrableSystem</name>
    <filename>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</filename>
    <member kind="function">
      <type></type>
      <name>IntegrableSystem</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>a82342896aa990aef8fae025d1f202aac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IntegrableSystem</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>adc88a004620d328a173427f252e9ea12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setConfigs</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>aa36000aa29b07865ebe092c863c5e1ba</anchor>
      <arglist>(const Eigen::VectorXd &amp;_configs)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setGenVels</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>a35052d65dc82d87fefeffc8bdaca569a</anchor>
      <arglist>(const Eigen::VectorXd &amp;_genVels)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getConfigs</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>a0cc4665f3ceb9ac93f767918094dd9b0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getGenVels</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>a5ab08d4449cb3ef37dc6a08a2300a152</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>evalGenAccs</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>a776a6ac9ca1bac3f639cef2ccfee5314</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>integrateConfigs</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>a30d9e370716d7b5d77df84c29ccf4ec4</anchor>
      <arglist>(const Eigen::VectorXd &amp;_genVels, double _dt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>integrateGenVels</name>
      <anchorfile>d1/ddb/classdart_1_1integration_1_1IntegrableSystem.html</anchorfile>
      <anchor>abc70edea248c79de22b5fa23dada3690</anchor>
      <arglist>(const Eigen::VectorXd &amp;_genVels, double _dt)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::integration::Integrator</name>
    <filename>de/d6a/classdart_1_1integration_1_1Integrator.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>integrate</name>
      <anchorfile>de/d6a/classdart_1_1integration_1_1Integrator.html</anchorfile>
      <anchor>a8a2cd1a325345d1e2818041db23264e8</anchor>
      <arglist>(IntegrableSystem *_system, double _dt)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integratePos</name>
      <anchorfile>de/d6a/classdart_1_1integration_1_1Integrator.html</anchorfile>
      <anchor>a3a791e282b044459b990f3d78d3ed496</anchor>
      <arglist>(IntegrableSystem *_system, double _dt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integrateVel</name>
      <anchorfile>de/d6a/classdart_1_1integration_1_1Integrator.html</anchorfile>
      <anchor>a3ae8ff2ff1a62098c703967eec32d2aa</anchor>
      <arglist>(IntegrableSystem *_system, double _dt)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::integration::RK4Integrator</name>
    <filename>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</filename>
    <base>dart::integration::Integrator</base>
    <member kind="function">
      <type></type>
      <name>RK4Integrator</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>acfa64ece4e5e8233ab8bfe5491568e13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RK4Integrator</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>a22f0812e3224a3900c1d3db926e22c86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integrate</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>a5c36834dc3fc610aefbee0ac0ea094aa</anchor>
      <arglist>(IntegrableSystem *_system, double _dt)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>q1</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>a54b735fe63e6eb4868cbf781d1e6f37e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>dq1</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>aa4dbaa5dd6d816e616092eb21080bcd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>dq2</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>ad7a8f93418ed2432bfe207dd189c1f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>dq3</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>ac6ab56a179a630c1ccabb0304c1ff879</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>dq4</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>aae776af3b770a73e0c0e315da6da121e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>ddq1</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>ad491f0043edd8f934aae95e9063a3922</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>ddq2</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>a3ae493b284c9259bc60fc25817d57700</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>ddq3</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>ab1eb8d6ba49f8b26205f56cd3d20e612</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>ddq4</name>
      <anchorfile>d8/d3c/classdart_1_1integration_1_1RK4Integrator.html</anchorfile>
      <anchor>afc40f3721c025af6f979b47b591187e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::integration::SemiImplicitEulerIntegrator</name>
    <filename>d0/d5e/classdart_1_1integration_1_1SemiImplicitEulerIntegrator.html</filename>
    <base>dart::integration::Integrator</base>
    <member kind="function">
      <type></type>
      <name>SemiImplicitEulerIntegrator</name>
      <anchorfile>d0/d5e/classdart_1_1integration_1_1SemiImplicitEulerIntegrator.html</anchorfile>
      <anchor>af6a738542090e0c0a2502cc203b126bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SemiImplicitEulerIntegrator</name>
      <anchorfile>d0/d5e/classdart_1_1integration_1_1SemiImplicitEulerIntegrator.html</anchorfile>
      <anchor>a6eca5fda3f412c1a388ade941f22e6d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integrate</name>
      <anchorfile>d0/d5e/classdart_1_1integration_1_1SemiImplicitEulerIntegrator.html</anchorfile>
      <anchor>aaa0d63a09251c978505d598abb93b87e</anchor>
      <arglist>(IntegrableSystem *_system, double _dt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integratePos</name>
      <anchorfile>d0/d5e/classdart_1_1integration_1_1SemiImplicitEulerIntegrator.html</anchorfile>
      <anchor>af65438e6b161c3b8288068c47aa81913</anchor>
      <arglist>(IntegrableSystem *_system, double _dt)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>integrateVel</name>
      <anchorfile>d0/d5e/classdart_1_1integration_1_1SemiImplicitEulerIntegrator.html</anchorfile>
      <anchor>aed11c1c751288e0f76b392adb5123035</anchor>
      <arglist>(IntegrableSystem *_system, double _dt)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::lcpsolver</name>
    <filename>d4/d05/namespacedart_1_1lcpsolver.html</filename>
    <class kind="class">dart::lcpsolver::ODELCPSolver</class>
    <member kind="function">
      <type>int</type>
      <name>Lemke</name>
      <anchorfile>d4/d05/namespacedart_1_1lcpsolver.html</anchorfile>
      <anchor>ab1b433bd881c42c773799c25053272bd</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_M, const Eigen::VectorXd &amp;_q, Eigen::VectorXd *_z)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validate</name>
      <anchorfile>d4/d05/namespacedart_1_1lcpsolver.html</anchorfile>
      <anchor>a9762b4ca0686aa114c73d7e8f951e6e1</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_M, const Eigen::VectorXd &amp;_z, const Eigen::VectorXd &amp;_q)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::lcpsolver::ODELCPSolver</name>
    <filename>d4/d65/classdart_1_1lcpsolver_1_1ODELCPSolver.html</filename>
    <member kind="function">
      <type></type>
      <name>ODELCPSolver</name>
      <anchorfile>d4/d65/classdart_1_1lcpsolver_1_1ODELCPSolver.html</anchorfile>
      <anchor>adf33dcbd5405bfbfe61eb28b72be01a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ODELCPSolver</name>
      <anchorfile>d4/d65/classdart_1_1lcpsolver_1_1ODELCPSolver.html</anchorfile>
      <anchor>af7030f2791a6455880404706f3e94a45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Solve</name>
      <anchorfile>d4/d65/classdart_1_1lcpsolver_1_1ODELCPSolver.html</anchorfile>
      <anchor>a8b88ae06a0d3855d18efd51492d6049d</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_A, const Eigen::VectorXd &amp;_b, Eigen::VectorXd *_x, int numContacts, double mu=0, int numDir=0, bool bUseODESolver=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>transferToODEFormulation</name>
      <anchorfile>d4/d65/classdart_1_1lcpsolver_1_1ODELCPSolver.html</anchorfile>
      <anchor>a350df3d8fa53b8fc9d61cbcf9125c2bc</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_A, const Eigen::VectorXd &amp;_b, Eigen::MatrixXd *_AOut, Eigen::VectorXd *_bOut, int _numDir, int _numContacts)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>transferSolFromODEFormulation</name>
      <anchorfile>d4/d65/classdart_1_1lcpsolver_1_1ODELCPSolver.html</anchorfile>
      <anchor>a2e42f432b12118cee8f73d25179c3faf</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::VectorXd *_xOut, int _numDir, int _numContacts)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>checkIfSolution</name>
      <anchorfile>d4/d65/classdart_1_1lcpsolver_1_1ODELCPSolver.html</anchorfile>
      <anchor>a15fafa037ad1b9fc4f7963872dc10301</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_A, const Eigen::VectorXd &amp;_b, const Eigen::VectorXd &amp;_x)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::math</name>
    <filename>d8/d96/namespacedart_1_1math.html</filename>
    <class kind="struct">dart::math::HullAngle</class>
    <member kind="typedef">
      <type>std::vector&lt; Eigen::Vector3d &gt;</type>
      <name>SupportGeometry</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae600b44172da50dfaf79a6bb02493e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::aligned_vector&lt; Eigen::Vector2d &gt;</type>
      <name>SupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a179187b12bcf5f46512c64ee1b0585a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix6d</type>
      <name>Inertia</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7603ceb33198e1ae9b1b6ba8bb6d2581</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 3, Eigen::Dynamic &gt;</type>
      <name>LinearJacobian</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>acaf385e0537db2db2df04bf8baf7543b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 3, Eigen::Dynamic &gt;</type>
      <name>AngularJacobian</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abd5ac0d14d2fd0c60fa633b16723f71a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 6, Eigen::Dynamic &gt;</type>
      <name>Jacobian</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>acc30f8840c232e09c8dbaed44de40742</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Intersection_t</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a6738b54f0224620743ddb50c386dfaf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INTERSECTING</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a6738b54f0224620743ddb50c386dfaf9a092c53833ef135d6d824e61467ac63cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>PARALLEL</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a6738b54f0224620743ddb50c386dfaf9ae0bd9f4a8d9f0863eafccd58ed9dd75e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BEYOND_ENDPOINTS</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a6738b54f0224620743ddb50c386dfaf9ad29cba0b7fcfeffda98892d6ac27fa83</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Eigen::Quaterniond</type>
      <name>expToQuat</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af7d1a1edd8644935ddf7d40e7c39139a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>quatToExp</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a141d99b2112e9037173869b04db2f2f1</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerXYX</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a2cc210efedf46185991c7d7a48041302</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerXYZ</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a53e69e887f81c59d26779a25fbe6ea7d</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerZYX</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad2b40ea6672026a84497098ac5cb1397</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerXZY</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aba375c47a8f4c23887c774f919414394</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerYZX</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac6b7603b1f1331d7325d4f839d5b9f94</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerZXY</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a300bb57a417ec13fea861862d5fc515c</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>matrixToEulerYXZ</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ab1e6567ea0da8425074d0aeaf33eccf4</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>quatDeriv</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abb994d2ee6ea73bb6cbe905cd1315b84</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q, int _el)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>quatSecondDeriv</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abe977fd6ccd95a05f68c80d4b33cdae7</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q, int _el1, int _el2)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>rotatePoint</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7ea25a547fac6b565c3648d4ff166015</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q, const Eigen::Vector3d &amp;_pt)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>rotatePoint</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abe4adfd592c2583df0a781858b2fb95e</anchor>
      <arglist>(const Eigen::Quaterniond &amp;_q, double _x, double _y, double _z)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapRot</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af297b066593714b7d7006d531c2328ac</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a412fc66129eb82f75db6583bdf92bee0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapJacDot</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a522cc1f979c523b9cc941314ef12617a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap, const Eigen::Vector3d &amp;_qdot)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>expMapJacDeriv</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a34115fbab9140a00f3b487988af277a2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_expmap, int _qi)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>logMap</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a91021e58843804e7ca334848ff9f0323</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>logMap</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ace4da4be316f9118106f4aacfe8f64f9</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae84a491564ace03bafae3c722aa34625</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_V)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix6d</type>
      <name>getAdTMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a19a4d72416c58021ea930b2abfd43bd8</anchor>
      <arglist>(const Eigen::Isometry3d &amp;T)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdR</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a94ee36ccaecf43cd56f76436a162c739</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_V)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdTAngular</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad93b6aeae970e23802f8414fd9e6a04a</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector3d &amp;_w)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdTLinear</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a74e4177978a837724e6e7a0cb245dbf2</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdInvT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9101a1475e595473ff3f10a4327c8298</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_V)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>AdInvRLinear</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7e6d60f0c41f72b7882c0d5284dad923</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>ad</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adff5879e39b18ee5960c5a08d5df2e4d</anchor>
      <arglist>(const Eigen::Vector6d &amp;_X, const Eigen::Vector6d &amp;_Y)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dAdT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adeb4234a66c0ed1421dcd29f93019ec6</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_F)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dAdInvT</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9854a5049755e2a650b3991b6d3f5e7a</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_F)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dAdInvR</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af711369d6350070cfa4c77755a2ab7cd</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::Vector6d &amp;_F)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXYXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a20617208f9bbe866879599ec6dd9f786</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXYZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a1b38698e6201d7b0e4aaf2e6b911ca11</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXZXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a802f1b38213ae193e12a240bc62a9185</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerXZYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a96f028b28d5e6a7b8cc5655b68a06742</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYXYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a39ba5e09917d711d74c2f8d0ec0479a7</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYXZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>acef3b0a3efc7e66ec7d15ca3bdd32fb2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYZXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa10f381ffdb7c81e65a9b774a745718e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerYZYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae44c2d83cb238e105321c14fc7055ecf</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZXYToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a3449f3b223c59177be45caff72055d9e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZYXToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7666b356f04c3c164d5163941c9163d3</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZXZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a264c003134882cd1dfbd24b555e73ee3</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>eulerZYZToMatrix</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a33ad7519de3e0ea3ff49070cb670a191</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angle)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>expMap</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a941645eb9bd1432d03c8c1c895f61f22</anchor>
      <arglist>(const Eigen::Vector6d &amp;_S)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>expAngular</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a81ae793a0afa85624599fdde127531f2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_s)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>dad</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a04344c560b26fbaa456dbb0ed4a09c21</anchor>
      <arglist>(const Eigen::Vector6d &amp;_s, const Eigen::Vector6d &amp;_t)</arglist>
    </member>
    <member kind="function">
      <type>Inertia</type>
      <name>transformInertia</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a729c89efdeb2557f1106bf89275e5b2a</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Inertia &amp;_I)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>parallelAxisTheorem</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a81735893e4f6d1cf950a0aa181db367e</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_original, const Eigen::Vector3d &amp;_comShift, double _mass)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyRotation</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a251a976dbb610f07df4ef5b3efba4f00</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_R)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyTransform</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a87b8aed61a081a0130e6e24759af13e4</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>fromSkewSymmetric</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a60ed1d87345d9718ff7f9a6cb337eac4</anchor>
      <arglist>(const Eigen::Matrix3d &amp;_m)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix3d</type>
      <name>makeSkewSymmetric</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abc4b6c2f5202c6ee0d82ff84812dae6b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getFrameOriginAxisZ</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0f897dd4d484e992da657fcbabb0f919</anchor>
      <arglist>(const Eigen::Vector3d &amp;_origin, const Eigen::Vector3d &amp;_axisZ)</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeSupportPolgyon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a29ae6cceff278dcf8050c1d898d74ce6</anchor>
      <arglist>(const SupportGeometry &amp;_geometry, const Eigen::Vector3d &amp;_axis1=Eigen::Vector3d::UnitX(), const Eigen::Vector3d &amp;_axis2=Eigen::Vector3d::UnitY())</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeSupportPolgyon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad25b1327853655ca28f519a2022aca19</anchor>
      <arglist>(std::vector&lt; size_t &gt; &amp;_originalIndices, const SupportGeometry &amp;_geometry, const Eigen::Vector3d &amp;_axis1=Eigen::Vector3d::UnitX(), const Eigen::Vector3d &amp;_axis2=Eigen::Vector3d::UnitY())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>HullAngleComparison</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae49e071956594129e38963ee5658b352</anchor>
      <arglist>(const HullAngle &amp;a, const HullAngle &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeConvexHull</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa51acb5d0b72768b14d41d537f7491ce</anchor>
      <arglist>(const SupportPolygon &amp;_points)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeCentroidOfHull</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7428be3f6b672574f5d88ab0b151679e</anchor>
      <arglist>(const SupportPolygon &amp;_convexHull)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isLeftTurn</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aedf772d885972a89cdfb838ba4ed7d30</anchor>
      <arglist>(const Eigen::Vector2d &amp;p1, const Eigen::Vector2d &amp;p2, const Eigen::Vector2d &amp;p3)</arglist>
    </member>
    <member kind="function">
      <type>SupportPolygon</type>
      <name>computeConvexHull</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a8c967c0907e41ffb974db2bfddf4c1a6</anchor>
      <arglist>(std::vector&lt; size_t &gt; &amp;_originalIndices, const SupportPolygon &amp;_points)</arglist>
    </member>
    <member kind="function">
      <type>Intersection_t</type>
      <name>computeIntersection</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a7df4e6c71a322095e4265d1bc286d42a</anchor>
      <arglist>(Eigen::Vector2d &amp;_intersectionPoint, const Eigen::Vector2d &amp;a1, const Eigen::Vector2d &amp;a2, const Eigen::Vector2d &amp;b1, const Eigen::Vector2d &amp;b2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>cross</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a95a0f98be589c708f9506e634eb5df77</anchor>
      <arglist>(const Eigen::Vector2d &amp;_v1, const Eigen::Vector2d &amp;_v2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInsideSupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a797012fe8e744db0d506962babc459e9</anchor>
      <arglist>(const Eigen::Vector2d &amp;_p, const SupportPolygon &amp;_support, bool _includeEdge=true)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeClosestPointOnLineSegment</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a691f20bdcabbd8698298956308e2d161</anchor>
      <arglist>(const Eigen::Vector2d &amp;_p, const Eigen::Vector2d &amp;_s1, const Eigen::Vector2d &amp;_s2)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeClosestPointOnSupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae496bd6bc2539f04e3d896beea4ca076</anchor>
      <arglist>(const Eigen::Vector2d &amp;_p, const SupportPolygon &amp;_support)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>computeClosestPointOnSupportPolygon</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac46b22dbd6e5d93f6bce17632d20fe79</anchor>
      <arglist>(size_t &amp;_index1, size_t &amp;_index2, const Eigen::Vector2d &amp;_p, const SupportPolygon &amp;_support)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdTJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adcd54cb5639a2593346270b2c53db123</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdTJacFixed</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aabbaeab2e1963d804100e12d8074c721</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdRJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a1b9e504bac01072086e0c5b193977471</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdRInvJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a8f0824887c01f56cb9fcaa1c378c6e97</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>adJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad451eb0dab3653087e5c4a2796142fcd</anchor>
      <arglist>(const Eigen::Vector6d &amp;_V, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdInvTJac</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0a8894d3fc25851007d2e017e72bbbb7</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>Derived::PlainObject</type>
      <name>AdInvTJacFixed</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a131e114a83953cf9d09ef1f2023b3a72</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_T, const Eigen::MatrixBase&lt; Derived &gt; &amp;_J)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractNullSpace</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aabe11a905af9d37de0be1d8ef240e5f9</anchor>
      <arglist>(const Eigen::JacobiSVD&lt; MatrixType &gt; &amp;_SVD, ReturnType &amp;_NS)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeNullSpace</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abdcb569c37a9d5877249411ec09b8975</anchor>
      <arglist>(const MatrixType &amp;_M, ReturnType &amp;_NS)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Matrix2d</type>
      <name>CR</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a016887264359b2adec638f50b2f521d9</anchor>
      <arglist>((Eigen::Matrix2d()&lt;&lt; 0.0,-1.0, 1.0, 0.0).finished())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>delta</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ae6aede87f5eb5a1e43f0c8421dc237fa</anchor>
      <arglist>(int _i, int _j)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>sign</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9eef8bbcf51caedb89883c2379e3f1bd</anchor>
      <arglist>(T x, std::false_type)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>sign</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac8163ea1c30b0bea0518b73f3a64bad1</anchor>
      <arglist>(T x, std::true_type)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int</type>
      <name>sign</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>abc6974b0afdc5c38c0d708ac527a9e94</anchor>
      <arglist>(T x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sgn</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af3299a641f96393c7bc2dddf6a442452</anchor>
      <arglist>(double _a)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sqr</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aaf35aa090d0b6f33e81c40697334df61</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Tsinc</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a9f15082c7168daabbfddd223e1fe0158</anchor>
      <arglist>(double _theta)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZero</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0ad9bb6d4eb0eeaa2f5d8181da7a0fb3</anchor>
      <arglist>(double _theta)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>asinh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adbdd4d2bd45b418902a972396060ab83</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>acosh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a5c44bf9370aa09e62340dd61475c11be</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>atanh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a607feabb775dd93e2b935cb0fef3f712</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>asech</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad24a2a30d51d65525d2214ef57cb01e7</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>acosech</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a4d0c4511a8ead15fb3b6ddc00b474b80</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>acotanh</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ad7e59127fc4e27b67a6851eb785591c7</anchor>
      <arglist>(double _X)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>round</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aa69de55cf8cae77bea99419a278bf436</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>round2</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a897a62e960b3fe0f95a529fe911eff7d</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>clip</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a245be608b49628752ed042179cd818fc</anchor>
      <arglist>(const T &amp;val, const T &amp;lower, const T &amp;upper)</arglist>
    </member>
    <member kind="function">
      <type>DerivedA::PlainObject</type>
      <name>clip</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac03ac59520bf6338921471e34af439bb</anchor>
      <arglist>(const Eigen::MatrixBase&lt; DerivedA &gt; &amp;val, const Eigen::MatrixBase&lt; DerivedB &gt; &amp;lower, const Eigen::MatrixBase&lt; DerivedB &gt; &amp;upper)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEqual</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a3660a2b791e39ec186f8632c94ba0dbb</anchor>
      <arglist>(double _x, double _y)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInt</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aecdb589c0ea301a4d55e79780479b0b3</anchor>
      <arglist>(double _x)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNan</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af5b30515f57b6a7eea27ace602bb346b</anchor>
      <arglist>(double _v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNan</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a17ab5a7cba3e8f0f27e6b5f300c290ed</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInf</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>ac722257c75263b69e7997d672ffe0126</anchor>
      <arglist>(double _v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInf</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>af1b073e98b687a9aa406af54ad68d3d2</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aca0a14a88fdfa483185ffa5fe66feeba</anchor>
      <arglist>(const Eigen::MatrixXd &amp;_m, double _tol=1e-6)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>seedRand</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a0f60c93c6ccddec2989611956bce69bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>random</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>aaebe9dfa697cd24a66650059b1bc743a</anchor>
      <arglist>(double _min, double _max)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, N, 1 &gt;</type>
      <name>randomVector</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a5133c95e7c1213b2af0de0696047c5f3</anchor>
      <arglist>(double _min, double _max)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Matrix&lt; double, N, 1 &gt;</type>
      <name>randomVector</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>adfee9c8e11ec79925fefa99e527dd781</anchor>
      <arglist>(double _limit)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>randomVectorXd</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>afb42517351767562eb4243b51ca017b7</anchor>
      <arglist>(size_t size, double min, double max)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>randomVectorXd</name>
      <anchorfile>d8/d96/namespacedart_1_1math.html</anchorfile>
      <anchor>a80a0dbf8770bf38fe58b8fb76029c632</anchor>
      <arglist>(size_t size, double limit)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::math::HullAngle</name>
    <filename>d7/dc6/structdart_1_1math_1_1HullAngle.html</filename>
    <member kind="function">
      <type></type>
      <name>HullAngle</name>
      <anchorfile>d7/dc6/structdart_1_1math_1_1HullAngle.html</anchorfile>
      <anchor>a09bd870f80002334b2f1976b61e46fbf</anchor>
      <arglist>(double angle, double distance, size_t index)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mAngle</name>
      <anchorfile>d7/dc6/structdart_1_1math_1_1HullAngle.html</anchorfile>
      <anchor>aceb5d36428ee02e0e0ca14cdfa5495ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mDistance</name>
      <anchorfile>d7/dc6/structdart_1_1math_1_1HullAngle.html</anchorfile>
      <anchor>af0e82d62420aaf09166307e56c430124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mIndex</name>
      <anchorfile>d7/dc6/structdart_1_1math_1_1HullAngle.html</anchorfile>
      <anchor>ae7a233bb97333c52b7fc940b917b8f70</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::optimizer</name>
    <filename>d4/d47/namespacedart_1_1optimizer.html</filename>
    <namespace>dart::optimizer::snopt</namespace>
    <class kind="class">dart::optimizer::Function</class>
    <class kind="class">dart::optimizer::ModularFunction</class>
    <class kind="class">dart::optimizer::NullFunction</class>
    <class kind="class">dart::optimizer::MultiFunction</class>
    <class kind="class">dart::optimizer::GradientDescentSolver</class>
    <class kind="class">dart::optimizer::IpoptSolver</class>
    <class kind="class">dart::optimizer::DartTNLP</class>
    <class kind="class">dart::optimizer::NloptSolver</class>
    <class kind="class">dart::optimizer::Problem</class>
    <class kind="class">dart::optimizer::Solver</class>
    <member kind="typedef">
      <type>std::shared_ptr&lt; Function &gt;</type>
      <name>FunctionPtr</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a091d108c3f5c8ca77baeae7abe86c31c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; double(const Eigen::VectorXd &amp;)&gt;</type>
      <name>CostFunction</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>af80afcab7fabba4d4448dda1c1dc67a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const Eigen::VectorXd &amp;, Eigen::Map&lt; Eigen::VectorXd &gt;)&gt;</type>
      <name>GradientFunction</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a0b89e9da6eecfd2bddffa178f9c2e9cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const Eigen::VectorXd &amp;, Eigen::Map&lt; Eigen::VectorXd, Eigen::RowMajor &gt;)&gt;</type>
      <name>HessianFunction</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a5655d552729d314fa9ed6e1674c0b10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; double &gt;</type>
      <name>convertToStd</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a36ec915bdf1142fda333b8f9097897fb</anchor>
      <arglist>(const Eigen::VectorXd &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Eigen::VectorXd</type>
      <name>convertToEigen</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>af02d36b8a16c293b1f7f3d8e3cff14e3</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;_v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>getVectorObjectIfAvailable</name>
      <anchorfile>d4/d47/namespacedart_1_1optimizer.html</anchorfile>
      <anchor>a34c1b2dba6d4b86e50f4ef125d0286a0</anchor>
      <arglist>(size_t _idx, const std::vector&lt; T &gt; &amp;_vec)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::Function</name>
    <filename>d9/dae/classdart_1_1optimizer_1_1Function.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>a199d4e95b540face3f38123c151c5bb1</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalGradient</name>
      <anchorfile>d9/dae/classdart_1_1optimizer_1_1Function.html</anchorfile>
      <anchor>afe460f53b91a4e0445d9a10f77bcf827</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::ModularFunction</name>
    <filename>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</filename>
    <base>dart::optimizer::Function</base>
    <member kind="function">
      <type></type>
      <name>ModularFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a9a62e3a8edb7666d2501af39b1812597</anchor>
      <arglist>(const std::string &amp;_name=&quot;modular_function&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ModularFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a9cdbcedfae40cabf3cd89a00021dcff1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>aa01834a9a48e4cb2d0b2a30690a108de</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalGradient</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>aa676e52319c2159a6edb2a378162c40c</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalHessian</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a1d9f92a5b42e265bab72d35909d3e423</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd, Eigen::RowMajor &gt; _Hess) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCostFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>ad742eb80e1910a96ea603f8a8ff11e90</anchor>
      <arglist>(CostFunction _cost)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCostFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a01e21a00f2dea82dfa271cba916cc77f</anchor>
      <arglist>(bool _printWarning=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGradientFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>ab7a7074eb43851f8d74b020dd125fd7c</anchor>
      <arglist>(GradientFunction _gradient)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearGradientFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a5550bfc0185f6d224f115c02281d28a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHessianFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>ad943114af84c4c3106de9222b7fc856c</anchor>
      <arglist>(HessianFunction _hessian)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearHessianFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a809579ef69fda39410655dfd86c68b22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CostFunction</type>
      <name>mCostFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a386fde0fc7b3e00cb550501ad669a64e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GradientFunction</type>
      <name>mGradientFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>aa9e1099f5a2408c705f46387b74f6fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HessianFunction</type>
      <name>mHessianFunction</name>
      <anchorfile>d9/d98/classdart_1_1optimizer_1_1ModularFunction.html</anchorfile>
      <anchor>a0a7cf770906c224cf88400ab1af88664</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::NullFunction</name>
    <filename>dd/dfa/classdart_1_1optimizer_1_1NullFunction.html</filename>
    <base>dart::optimizer::Function</base>
    <member kind="function">
      <type></type>
      <name>NullFunction</name>
      <anchorfile>dd/dfa/classdart_1_1optimizer_1_1NullFunction.html</anchorfile>
      <anchor>a6e75d90f421c0dc3f133f27ea153ce3b</anchor>
      <arglist>(const std::string &amp;_name=&quot;null_function&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NullFunction</name>
      <anchorfile>dd/dfa/classdart_1_1optimizer_1_1NullFunction.html</anchorfile>
      <anchor>ac8157d173b7ce19455b6dc804718b3e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>eval</name>
      <anchorfile>dd/dfa/classdart_1_1optimizer_1_1NullFunction.html</anchorfile>
      <anchor>acb4e30788249d26c15fed53f61c40502</anchor>
      <arglist>(const Eigen::VectorXd &amp;) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalGradient</name>
      <anchorfile>dd/dfa/classdart_1_1optimizer_1_1NullFunction.html</anchorfile>
      <anchor>a63db7cdd1ca136bd990fe4d98ae24952</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; _grad) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evalHessian</name>
      <anchorfile>dd/dfa/classdart_1_1optimizer_1_1NullFunction.html</anchorfile>
      <anchor>a06930265e8ba6903674648dd0a0ea31e</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd, Eigen::RowMajor &gt; _Hess) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::MultiFunction</name>
    <filename>d5/d58/classdart_1_1optimizer_1_1MultiFunction.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiFunction</name>
      <anchorfile>d5/d58/classdart_1_1optimizer_1_1MultiFunction.html</anchorfile>
      <anchor>af76236970e4d820a8d66ab23df4ec8b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiFunction</name>
      <anchorfile>d5/d58/classdart_1_1optimizer_1_1MultiFunction.html</anchorfile>
      <anchor>a72cfb5b6147e1d12d591d782a0c30204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>operator()</name>
      <anchorfile>d5/d58/classdart_1_1optimizer_1_1MultiFunction.html</anchorfile>
      <anchor>a19a969b227a0b092dee23fff37e46180</anchor>
      <arglist>(const Eigen::VectorXd &amp;_x, Eigen::Map&lt; Eigen::VectorXd &gt; &amp;_f, Eigen::Map&lt; Eigen::MatrixXd &gt; &amp;_grad)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::GradientDescentSolver</name>
    <filename>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</filename>
    <base>dart::optimizer::Solver</base>
    <class kind="struct">dart::optimizer::GradientDescentSolver::Properties</class>
    <class kind="struct">dart::optimizer::GradientDescentSolver::UniqueProperties</class>
    <member kind="function">
      <type></type>
      <name>GradientDescentSolver</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a644f62a228d00429b0c99d70263a1874</anchor>
      <arglist>(const Properties &amp;_properties=Properties())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GradientDescentSolver</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>acd81a622ba20191af3735e15a1f85062</anchor>
      <arglist>(std::shared_ptr&lt; Problem &gt; _problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GradientDescentSolver</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a18fc49f7c50b8a501faf0ab99135a8a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>solve</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>aec4f05450d464144040a1801f8dabf6a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getLastConfiguration</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>aac0865feb998704f5d073867f614d712</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getType</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>af33b5d6bcf408eff837cc0968f1f4214</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; Solver &gt;</type>
      <name>clone</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>af5af360ac4623c2f8ca07307d6f5cdab</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a8f61d39098cb0eb41f5a4e6254383f6b</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>ae1a2cb45cb1e024ab0f976cb754283a3</anchor>
      <arglist>(const UniqueProperties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>Properties</type>
      <name>getGradientDescentProperties</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>abb7c5916501ccd752e1328dfb4aaca38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>acb67ff9dfd56b985b03324adc12ca61f</anchor>
      <arglist>(const GradientDescentSolver &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>GradientDescentSolver &amp;</type>
      <name>operator=</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a6b8ea8149cba43f25dc0177dbbbb3b9b</anchor>
      <arglist>(const GradientDescentSolver &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStepSize</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a2eb4366b4aadb1d4c569331101696e68</anchor>
      <arglist>(double _newMultiplier)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStepSize</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a9aa52337f59adeaf7de70368914019c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxAttempts</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a25265c36b0558ba3146e5f1b6558ad0e</anchor>
      <arglist>(size_t _maxAttempts)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getMaxAttempts</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>ad692d08b8acb2f6ea2d78a5f55174167</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPerturbationStep</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>ab71c159a87f654dd04bab6319c8799ad</anchor>
      <arglist>(size_t _step)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPerturbationStep</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a03a00b52b9cc5a84ea722cd4ae679e03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxPerturbationFactor</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>ab02173a3e286320198b1d902ed713cdb</anchor>
      <arglist>(double _factor)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxPerturbationFactor</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a1eb571e12f67953c0bb9a4becfbd1844</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultConstraintWeight</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>ad68d1b651e2debe330192cd3e9a03d3a</anchor>
      <arglist>(double _newDefault)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDefaultConstraintWeight</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a41577e77b2c9f1660ef433f9a74b5bba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd &amp;</type>
      <name>getEqConstraintWeights</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>ad9ef0c4501c91f1dc8a7d7cc81b6f7b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getEqConstraintWeights</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>af0d044516719d51ad554ee9a4e9c7902</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd &amp;</type>
      <name>getIneqConstraintWeights</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a0cd5a88a9e989e642ec5aadf6c9f7e0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getIneqConstraintWeights</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>aabcd09277bc3c0d4be3d1faaac442df5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomizeConfiguration</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a83342b3771414e67b7ebc992109ba81e</anchor>
      <arglist>(Eigen::VectorXd &amp;_x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clampToBoundary</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a9dc72d54240a31a8e09ff20f4d6c2871</anchor>
      <arglist>(Eigen::VectorXd &amp;_x)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLastNumIterations</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>ab35b823d119c9ea69b247acf4531aaa8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Solver</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>af480f5200ed42551a9f1392545aa772a</anchor>
      <arglist>(const Properties &amp;_properties=Properties())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Solver</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>aee36c5d2b25195ef86a08759274e1a27</anchor>
      <arglist>(std::shared_ptr&lt; Problem &gt; _problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Solver</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a69bd13c0d9ad96746697909fb4ae1d7b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperties</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>ab13e2b57c01c5da82f131166797ba6c7</anchor>
      <arglist>(const Properties &amp;_properties)</arglist>
    </member>
    <member kind="function">
      <type>const Properties &amp;</type>
      <name>getSolverProperties</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a16387723a2325619c709b8b92ce7030f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a34042a8350719ae993014080da507b84</anchor>
      <arglist>(const Solver &amp;_otherSolver)</arglist>
    </member>
    <member kind="function">
      <type>Solver &amp;</type>
      <name>operator=</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a3f963399dad37543faa3bc71bb62b72a</anchor>
      <arglist>(const Solver &amp;_otherSolver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setProblem</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a28c784c676becce01d7c4392478102dc</anchor>
      <arglist>(std::shared_ptr&lt; Problem &gt; _newProblem)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Problem &gt;</type>
      <name>getProblem</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a41ebe9ea5dd127a939a63f4473c25f5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTolerance</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>ab049613cfaed036f0bd2e1187ade5bce</anchor>
      <arglist>(double _newTolerance)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTolerance</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a910fab01853329b0fb05384a98e889d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setNumMaxIterations</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a28a7899c1fff9e54c3708772736a8e08</anchor>
      <arglist>(size_t _newMax)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumMaxIterations</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a976b9858e906623e573bcd967dd3b1af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIterationsPerPrint</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>ad47d862f1ec5ac4b3cbe9acd206ce10c</anchor>
      <arglist>(size_t _newRatio)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getIterationsPerPrint</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a2cb4a4709ec67d1c3b9cf077387e5bbb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setOutStream</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a246afc16ee8bbec331187e709b1a2e02</anchor>
      <arglist>(std::ostream *_os)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream *</type>
      <name>getOutStream</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a26213fddc87b237d26d0d9c10f8c77be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPrintFinalResult</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a196a3118b57acfb70848e6498ee0943d</anchor>
      <arglist>(bool _print)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPrintFinalResult</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a2b8822485d72a57260bca897323812a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setResultFileName</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>ab48523a7f3a48333fbdd2b5ae5ddc9e5</anchor>
      <arglist>(const std::string &amp;_resultFile)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getResultFileName</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>ac4b4febb53a738891172acaa5e2530d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>Type</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a4ccdcadea280697ea9ef919c43451dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>UniqueProperties</type>
      <name>mGradientP</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a41e0a42caab656366e6af4996e0d7545</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mLastNumIterations</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>aa10006b1f772b0301f4fbcfda0451667</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::random_device</type>
      <name>mRD</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a427e408ac8a00741ade70f8cbbf382ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mt19937</type>
      <name>mMT</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>ad1ec0e6a39ab8a5253cc732ef9f3736a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::uniform_real_distribution&lt; double &gt;</type>
      <name>mDistribution</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a7c9a5c23d2b606c18a7baa7c0d16c070</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mEqConstraintCostCache</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a55aa0cbe1c550d420f3d5840dc4b8aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mIneqConstraintCostCache</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>a70cb526de1022b8d9bbf76d618d385b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mLastConfig</name>
      <anchorfile>d7/dbc/classdart_1_1optimizer_1_1GradientDescentSolver.html</anchorfile>
      <anchor>aa96842fec8a2a2b160c26099cf7016bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Properties</type>
      <name>mProperties</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a4eba45b7e2fe9a3585c918a0483f1753</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::optimizer::GradientDescentSolver::Properties</name>
    <filename>d5/d12/structdart_1_1optimizer_1_1GradientDescentSolver_1_1Properties.html</filename>
    <base>dart::optimizer::Solver::Properties</base>
    <base>dart::optimizer::GradientDescentSolver::UniqueProperties</base>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>d5/d12/structdart_1_1optimizer_1_1GradientDescentSolver_1_1Properties.html</anchorfile>
      <anchor>a1f3430f3f36bdc9d9741244b06071a58</anchor>
      <arglist>(const Solver::Properties &amp;_solverProperties=Solver::Properties(), const UniqueProperties &amp;_descentProperties=UniqueProperties())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Properties</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>acb5bac2724e66ef9ed8241739e935bfc</anchor>
      <arglist>(std::shared_ptr&lt; Problem &gt; _problem=nullptr, double _tolerance=1e-9, size_t _numMaxIterations=500, size_t _iterationsPerPrint=0, std::ostream *_ostream=&amp;std::cout, bool _printFinalResult=false, const std::string &amp;_resultFile=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UniqueProperties</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>aa97155271fac5aea085b714e4ab3029c</anchor>
      <arglist>(double _stepMultiplier=0.1, size_t _maxAttempts=1, size_t _perturbationStep=0, double _maxPerturbationFactor=1.0, double _maxRandomizationStep=1e10, double _defaultConstraintWeight=1.0, Eigen::VectorXd _eqConstraintWeights=Eigen::VectorXd(), Eigen::VectorXd _ineqConstraintWeights=Eigen::VectorXd())</arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; Problem &gt;</type>
      <name>mProblem</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>afa79c2c6b67637bb2528d7f6b120a0ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mTolerance</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>ae5b85eee23e8e90f78aacc16ad3abc7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mNumMaxIterations</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>ae5ea7e196db6f2cd97ebb7d4ee9925d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mIterationsPerPrint</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>ad6e32f0ecca844d2599326674f58e6ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream *</type>
      <name>mOutStream</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>a1257be23c85527e679cfac6ef666bcb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mPrintFinalResult</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>a75388b53777f1ee5625b11458ef69643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mResultFile</name>
      <anchorfile>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</anchorfile>
      <anchor>a41df1a1c0cfaf6b8548563c4f86ebe54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mStepSize</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>a2649167e2f901db9c671162f75642c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mMaxAttempts</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>ac52452889f690b23d213bc3daa6b46f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mPerturbationStep</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>a21e2af665b26892ac6aa5477ac05e70b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMaxPerturbationFactor</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>ac8ff3573c74cd0053bbb82712bf0ce14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mMaxRandomizationStep</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>ac35a58bf6521cd532ffd69950f37d832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mDefaultConstraintWeight</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>a689ff1bc4202bf543a2a3bbb5110c21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mEqConstraintWeights</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>a6298e647fedb8bf31b2783e742e07176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mIneqConstraintWeights</name>
      <anchorfile>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</anchorfile>
      <anchor>afd812ecc7889b8fdb4b9dde4ae751c7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::optimizer::GradientDescentSolver::UniqueProperties</name>
    <filename>d8/db5/structdart_1_1optimizer_1_1GradientDescentSolver_1_1UniqueProperties.html</filename>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::IpoptSolver</name>
    <filename>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</filename>
    <base>dart::optimizer::Solver</base>
    <member kind="function">
      <type></type>
      <name>IpoptSolver</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>ab66018cb25bc979d5068377a44a5a68d</anchor>
      <arglist>(const Solver::Properties &amp;_properties=Solver::Properties())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IpoptSolver</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>a4c190a86f23ac8ae7d9255d3e9ae7ae8</anchor>
      <arglist>(std::shared_ptr&lt; Problem &gt; _problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IpoptSolver</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>aedd686fe69a89653c40fcee763de7938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>solve</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>ad952e5ef7191a43fd4c1337a8e9fdf4e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getType</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>ab80e0a71160db928c7c11d13b8beafcb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; Solver &gt;</type>
      <name>clone</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>a049097ac4f97334d419203bede258ed8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>const Ipopt::SmartPtr&lt; Ipopt::IpoptApplication &gt; &amp;</type>
      <name>getApplication</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>a56d63ee6a99d1332859b64659d37fd5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Ipopt::SmartPtr&lt; const Ipopt::IpoptApplication &gt;</type>
      <name>getApplication</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>a94eacb0556dbbc1b4788fba349145269</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>IpoptSolver</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>aa01c4d861be8af8e01796f3a22a0f24c</anchor>
      <arglist>(const Properties &amp;_properties, const Ipopt::SmartPtr&lt; Ipopt::IpoptApplication &gt; &amp;_app)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ipopt::SmartPtr&lt; Ipopt::TNLP &gt;</type>
      <name>mNlp</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>afb4059d40814c14cbbf8f243eced2991</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ipopt::SmartPtr&lt; Ipopt::IpoptApplication &gt;</type>
      <name>mIpoptApp</name>
      <anchorfile>dc/ddb/classdart_1_1optimizer_1_1IpoptSolver.html</anchorfile>
      <anchor>a2be0de7e94cb9ace34072ea0f5a3d748</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::DartTNLP</name>
    <filename>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DartTNLP</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a5bbbf091dca46bea0f3778d7ed41d073</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_nlp_info</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a420f807cbc8b6c72407aefa8e2609d5d</anchor>
      <arglist>(Ipopt::Index &amp;n, Ipopt::Index &amp;m, Ipopt::Index &amp;nnz_jac_g, Ipopt::Index &amp;nnz_h_lag, Ipopt::TNLP::IndexStyleEnum &amp;index_style) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_bounds_info</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a66fc616b7334e54e73284d1aff004499</anchor>
      <arglist>(Ipopt::Index n, Ipopt::Number *x_l, Ipopt::Number *x_u, Ipopt::Index m, Ipopt::Number *g_l, Ipopt::Number *g_u) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>get_starting_point</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a0eb8a6e43c309bffeb869358856f2265</anchor>
      <arglist>(Ipopt::Index n, bool init_x, Ipopt::Number *x, bool init_z, Ipopt::Number *z_L, Ipopt::Number *z_U, Ipopt::Index m, bool init_lambda, Ipopt::Number *lambda) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>eval_f</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>aabeb9c4cd9cfae5b955acf63603cbeeb</anchor>
      <arglist>(Ipopt::Index _n, const Ipopt::Number *_x, bool _new_x, Ipopt::Number &amp;_obj_value) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>eval_grad_f</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a3b3f67ef3c47dc020d99b91cac3cdc24</anchor>
      <arglist>(Ipopt::Index _n, const Ipopt::Number *_x, bool _new_x, Ipopt::Number *_grad_f) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>eval_g</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>ae1907394130992b28809496139a7bca5</anchor>
      <arglist>(Ipopt::Index _n, const Ipopt::Number *_x, bool _new_x, Ipopt::Index _m, Ipopt::Number *_g) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>eval_jac_g</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>aba52ede8617a3ad57be2884ab3b2cd3c</anchor>
      <arglist>(Ipopt::Index _n, const Ipopt::Number *_x, bool _new_x, Ipopt::Index _m, Ipopt::Index _nele_jac, Ipopt::Index *_iRow, Ipopt::Index *_jCol, Ipopt::Number *_values) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>eval_h</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a8f8d3bec5dcc01df08c1205a349a1d3d</anchor>
      <arglist>(Ipopt::Index _n, const Ipopt::Number *_x, bool _new_x, Ipopt::Number _obj_factor, Ipopt::Index _m, const Ipopt::Number *_lambda, bool _new_lambda, Ipopt::Index _nele_hess, Ipopt::Index *_iRow, Ipopt::Index *_jCol, Ipopt::Number *_values) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finalize_solution</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a3451ce9fcd5e194d3a2c1e9023cff327</anchor>
      <arglist>(Ipopt::SolverReturn _status, Ipopt::Index _n, const Ipopt::Number *_x, const Ipopt::Number *_z_L, const Ipopt::Number *_z_U, Ipopt::Index _m, const Ipopt::Number *_g, const Ipopt::Number *_lambda, Ipopt::Number _obj_value, const Ipopt::IpoptData *_ip_data, Ipopt::IpoptCalculatedQuantities *_ip_cq) override</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>DartTNLP</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>af6c6434e5f6751fd7af97b9c0a6884cd</anchor>
      <arglist>(IpoptSolver *_solver)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>IpoptSolver *</type>
      <name>mSolver</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a5e9e560babbc67d3fb15a6dbbf9cca5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ipopt::Number</type>
      <name>mObjValue</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>ac75b1d438c47a07f6c83c1e904a9fdc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>mObjGradient</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>a5f3e4f4e53cc294ed1555b03b5f6bb4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::MatrixXd</type>
      <name>mObjHessian</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>aa7d9c1124464b1abaf1c0ffee84358a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>IpoptSolver</name>
      <anchorfile>df/d64/classdart_1_1optimizer_1_1DartTNLP.html</anchorfile>
      <anchor>ab7a6727f9083807e04f404d44fb028b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::NloptSolver</name>
    <filename>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</filename>
    <base>dart::optimizer::Solver</base>
    <member kind="function">
      <type></type>
      <name>NloptSolver</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>abe1b82421da21c9738c491749f0e8fb9</anchor>
      <arglist>(const Solver::Properties &amp;_properties=Solver::Properties(), nlopt::algorithm _alg=nlopt::LN_COBYLA)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NloptSolver</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a6b63f2ed7d7b6b0bc236daee5aca2171</anchor>
      <arglist>(std::shared_ptr&lt; Problem &gt; _problem, nlopt::algorithm _alg=nlopt::LN_COBYLA)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NloptSolver</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>ad79cea312a068e78db1f57620a0280eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>solve</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>ad7e9e65a0653f6f846fd8ae4558c3979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getLastConfiguration</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a7a491ca0a6459504f029b6e2183a0069</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getType</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a10cf16baaf5c301ea72ffa8eb8b97d48</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; Solver &gt;</type>
      <name>clone</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a6b8a0b0bd24baae2f2fca4b5b4389e3a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>abfbb45cba3d3e46e8ef39aab43a10fdb</anchor>
      <arglist>(const NloptSolver &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>NloptSolver &amp;</type>
      <name>operator=</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>aee60a27f712c70489468965071a8b6b7</anchor>
      <arglist>(const NloptSolver &amp;_other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlgorithm</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a4af1775dd455a34e1cf1bbc702771fb9</anchor>
      <arglist>(nlopt::algorithm _alg)</arglist>
    </member>
    <member kind="function">
      <type>nlopt::algorithm</type>
      <name>getAlgorithm</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>ab2f5308303039e63b60893c817917cf0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setNumMaxEvaluations</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a4ada3ef6191ad89f315b5ead4be93741</anchor>
      <arglist>(size_t _numVal)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getNumEvaluationMax</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>aaeb4a8515a15e656c98c634d6a59717e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static double</type>
      <name>_nlopt_func</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>ac10965b50628d80818145a367e7adc02</anchor>
      <arglist>(unsigned _n, const double *_x, double *_gradient, void *_func_data)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>_nlopt_mfunc</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>ad92a4904738b4402da3d516481f51898</anchor>
      <arglist>(unsigned _m, double *_result, unsigned _n, const double *_x, double *_gradient, void *_func_data)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unique_ptr&lt; nlopt::opt &gt;</type>
      <name>mOpt</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a6f026724e6cc699d24929878bc206896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>nlopt::algorithm</type>
      <name>mAlg</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>aca3d06519bb33d974e53d8a73816dd12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>mX</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>a994a719ce5eba02b770a57d72f65128c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mMinF</name>
      <anchorfile>d0/d1c/classdart_1_1optimizer_1_1NloptSolver.html</anchorfile>
      <anchor>ac169a3887d43f20b8e4d9d2a253b3244</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::Problem</name>
    <filename>df/dbc/classdart_1_1optimizer_1_1Problem.html</filename>
    <member kind="function">
      <type></type>
      <name>Problem</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a62d5ed82ac08b515ff69f357d8542e4a</anchor>
      <arglist>(size_t _dim=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Problem</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a55529a9f7ffbc93c65831a0aead18d03</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDimension</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a1d91d0757b10f49afac3cb1b2dae6195</anchor>
      <arglist>(size_t _dim)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getDimension</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ad1c014b399012f04dc4df9ab006887a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialGuess</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>adbb327b9c086baf45cf50354f729a8df</anchor>
      <arglist>(const Eigen::VectorXd &amp;_initGuess)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getInitialGuess</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a8183e5c497241df121934d391d752a0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSeed</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ac193f361cbc8bcf9fcd6166448e72f8c</anchor>
      <arglist>(const Eigen::VectorXd &amp;_seed)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd &amp;</type>
      <name>getSeed</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a9726914b3fa2db3075c20728e3add56e</anchor>
      <arglist>(size_t _index)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getSeed</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a0f6cb47a86aaae6d90823bec3df087b7</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Eigen::VectorXd &gt; &amp;</type>
      <name>getSeeds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ae0138cc20fc9b3dece6e6623e0e47041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Eigen::VectorXd &gt; &amp;</type>
      <name>getSeeds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ad92708e5838235023877c4e668e956a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAllSeeds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ac5156ed1dd9f2fc8bbf20c3e8b6500e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowerBounds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a16160aee4cafd7b4619d673dd30ad9f0</anchor>
      <arglist>(const Eigen::VectorXd &amp;_lb)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getLowerBounds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>abe7f0169446754ad6c163ccef93b3541</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUpperBounds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a488043ea0c891777bcfd64d4b05d1880</anchor>
      <arglist>(const Eigen::VectorXd &amp;_ub)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getUpperBounds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ab93784216b85c044d6d2a6a38d36aaca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjective</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ae9d21a8188e698db509707fec181fca9</anchor>
      <arglist>(FunctionPtr _obj)</arglist>
    </member>
    <member kind="function">
      <type>FunctionPtr</type>
      <name>getObjective</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>af10b216be34ea08421aacacd40a50b46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEqConstraint</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a7d339af8e30e114bda97458328ba9cae</anchor>
      <arglist>(FunctionPtr _eqConst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addIneqConstraint</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a00ea5c3e28459bd06f7b3fb13cabfe7e</anchor>
      <arglist>(FunctionPtr _ineqConst)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEqConstraints</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a7b6ea83d4d1090a111a570aafd9e1d93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumIneqConstraints</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>acdb504c1c408310332454e3fa7416932</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FunctionPtr</type>
      <name>getEqConstraint</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>afcfa7990ea329e8dcf73c8586bf3aa1a</anchor>
      <arglist>(size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>FunctionPtr</type>
      <name>getIneqConstraint</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a5747fde66592a051981ae6b4091614ff</anchor>
      <arglist>(size_t _idx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEqConstraint</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a85a1bb550de1be0ab972413db924d6c5</anchor>
      <arglist>(FunctionPtr _eqConst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIneqConstraint</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ae0390b7ac3b823664996ae42c010cc00</anchor>
      <arglist>(FunctionPtr _ineqConst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllEqConstraints</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a2a35cca066c1781a7a38ed73a6b808a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllIneqConstraints</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>aaa83504feff013e8923181da53b9bda2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOptimumValue</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>aece739ccd1fc4c00440a6a8f4cf861c3</anchor>
      <arglist>(double _val)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOptimumValue</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a02f20bc31c21bf502bc7dbd9d06cfda5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOptimalSolution</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a188897d458238f9c2780b58b1ee132e5</anchor>
      <arglist>(const Eigen::VectorXd &amp;_optParam)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::VectorXd &amp;</type>
      <name>getOptimalSolution</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>aae4169e7cb4b073f270cd9f90bc8e515</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mDimension</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a7dcf4715512aeb73041599b1a127a0af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mInitialGuess</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a058f35c9e6ca6be6aba8c09526f247e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Eigen::VectorXd &gt;</type>
      <name>mSeeds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a9620456cef740b0af8b8bd348ecbccb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mLowerBounds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a85de78a841ed3ebc768c1ca9a3c56acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mUpperBounds</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a9a7bceb1fa75e9cca3444f2b40af2400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FunctionPtr</type>
      <name>mObjective</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>afba35354993dbf68a061bd2ca593551a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; FunctionPtr &gt;</type>
      <name>mEqConstraints</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a713a7ef206a722ae68fe8e9de9dce83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; FunctionPtr &gt;</type>
      <name>mIneqConstraints</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>ae61a1858242e0c925f27e9482bb62373</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mOptimumValue</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a375ff405f430cb2618fa21bc74bc2589</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::VectorXd</type>
      <name>mOptimalSolution</name>
      <anchorfile>df/dbc/classdart_1_1optimizer_1_1Problem.html</anchorfile>
      <anchor>a5986732b804682ee3dfb2ec0b7003e37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::Solver</name>
    <filename>d0/d68/classdart_1_1optimizer_1_1Solver.html</filename>
    <class kind="struct">dart::optimizer::Solver::Properties</class>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>solve</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>a9621b9518a482293b035e234a796efa9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getType</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>af5bce8c03145ba5fca2a9756960f4c5e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; Solver &gt;</type>
      <name>clone</name>
      <anchorfile>d0/d68/classdart_1_1optimizer_1_1Solver.html</anchorfile>
      <anchor>af81a4a4f69a787883fa2c13c46a85237</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::optimizer::Solver::Properties</name>
    <filename>db/d48/structdart_1_1optimizer_1_1Solver_1_1Properties.html</filename>
  </compound>
  <compound kind="namespace">
    <name>dart::optimizer::snopt</name>
    <filename>de/db4/namespacedart_1_1optimizer_1_1snopt.html</filename>
    <class kind="class">dart::optimizer::snopt::SnoptInterface</class>
    <class kind="class">dart::optimizer::snopt::SnoptSolver</class>
    <member kind="function">
      <type>void</type>
      <name>SNINIT</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>a60fdb40aaa96d031f09511a039979053</anchor>
      <arglist>(int *iprint, int *isum, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SNOPT</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>a7a442c132dea18c4e34eecef12c71a3f</anchor>
      <arglist>(char *start, int *m, int *n, int *ne, int *nName, int *nnCon, int *nnObj, int *nnJac, int *iObj, double *ObjAdd, char *Prob, void(*funCon)(int *mode, int *nnCon, int *nnJac, int *neJac, double *x, double *fCon, double *gCon, int *nState, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru), void(*funObj)(int *mode, int *nnObj, double *x, double *fObj, double *gObj, int *nState, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru), double *a, int *ha, int *ka, double *bl, double *bu, char *Names, int *hs, double *xs, double *pi, double *rc, int *inform, int *mincw, int *miniw, int *minrw, int *nS, int *nInf, double *sInf, double *Obj, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw, int start_len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SNSPEC</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>a8d28ca58a2a54564821e65a53e3768f0</anchor>
      <arglist>(int *ispecs, int *inform, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>S1USER</name>
      <anchorfile>de/db4/namespacedart_1_1optimizer_1_1snopt.html</anchorfile>
      <anchor>a5ffdd19cada10a014eea34e3fe48779d</anchor>
      <arglist>(int *iAbort, char *MjrMsg, int *KTcond, int *m, int *n, int *nb, int *nR, int *nS, int *nMajor, int *nMinor, int *nSwap, double *condHz, double *duInf, double *emaxS, double *fObj, double *fMrt, double gMrt, double *PenNrm, double *prInf, double *step, double *vimax, double *dxnrm, double *dxrel, int *ne, int *nka, double *a, int *ha, int *ka, int *hs, double *bl, double *bu, double *pi, double *rc, double *xs, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru, char *cw, int *lencw, int *iw, int *leniw, double *rw, int *lenrw)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::snopt::SnoptInterface</name>
    <filename>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</filename>
    <class kind="struct">dart::optimizer::snopt::SnoptInterface::Slack</class>
    <member kind="enumeration">
      <type></type>
      <name>Return</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1c337f54c6162498c26908088dda78c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Solution</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1c337f54c6162498c26908088dda78c4a2df07e69137a4a7638e80f24444d33f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>UserStop</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1c337f54c6162498c26908088dda78c4a6205954ad8b806747ddc4e7beb80c2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Error</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1c337f54c6162498c26908088dda78c4ae6494a9b646b13a5a3c3c21e4af463f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Stop</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1c337f54c6162498c26908088dda78c4a24bcd68d9ae245dbc08e0ecc0ecadb23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Infeasible</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1c337f54c6162498c26908088dda78c4a6cd96d98ac9df0240eff119a8b74f589</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UpdateType</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a9c539367f6ec94e75ecbf03246ff4474</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Obj</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a9c539367f6ec94e75ecbf03246ff4474a4aa05f0ca9900403bb082e20fec59339</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Constr</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a9c539367f6ec94e75ecbf03246ff4474ad17d04fdfe71399533ae5cf2125e356f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SlackType</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a0d76878f36b20c37f7807771d5652538</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NoSlack</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a0d76878f36b20c37f7807771d5652538a9cc52aa60ee2ba206ad957dbfe4c3381</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Vslack</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a0d76878f36b20c37f7807771d5652538a60fb3ca2a1f7c6d0bf0bb738746bbc34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>Wslack</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a0d76878f36b20c37f7807771d5652538ad16d481e18679700c8a5a2aa78fb7fa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AbnormalType</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a99d7fcde3398a4439b8a2d2c16f51b7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NONE</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a99d7fcde3398a4439b8a2d2c16f51b7ba35dbe549f6d720df433a65e32591a397</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>INFEASIBLE</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a99d7fcde3398a4439b8a2d2c16f51b7ba9424649079bb058d3e9551ef62e742ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>HESSIAN_UPDATE</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a99d7fcde3398a4439b8a2d2c16f51b7ba7771d5556c089bb695a0e517e8dc7fe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>HESSIAN_RESET</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a99d7fcde3398a4439b8a2d2c16f51b7bac1062a3c8b4dd9aca587e1f4b08d7546</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>updateFunc</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a6618ad09f1f5436ac7f056d8a2431eb8</anchor>
      <arglist>)(long mask, int compute_gradients, double *coef_values, void *update_data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SnoptInterface</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ace54711f7175f79c7545e841f75120df</anchor>
      <arglist>(int constr_total, int coef_total, int nonlin_constr_total, int nonlin_obj_coef, int nonlin_jac_coef, int *constr_eqns, int has_objective, VVD J, VVB JMap, std::vector&lt; double &gt; *constraints, double *objective, std::vector&lt; double &gt; *gradient, updateFunc update_f, void *update_d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SnoptInterface</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ad514cf92a321e502c559606c2fff1b26</anchor>
      <arglist>(int has_objective, VVD J, VVB JMap, std::vector&lt; double &gt; *constraints, double *objective, std::vector&lt; double &gt; *gradient, updateFunc update_f, void *update_d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SnoptInterface</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ab9e79f64abeccc018c8ae0b90aa9a26b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Return</type>
      <name>solve</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>af69e5b7c5f9bbd26c32b6ab4e49967fa</anchor>
      <arglist>(double *x, double *lo_bounds, double *hi_bounds, int unit=4)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1a45316cb6f914119b5a69da0d36cdd1</anchor>
      <arglist>(long mask, int compute_derivs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeJacobian</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a47ed11cf4f232bb145ca2b546e98db09</anchor>
      <arglist>(int coef_total, int nonlin_coef_total, int constr_total, int nonlin_constr_total)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeCoef</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>aa2ebd14b3c25526aa168b61e81aee9bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSolverX</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a36208c2bbf78d5a7ae51412d16609d9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a5c7bfcbb825c9f4ad2ee09fce819bf3d</anchor>
      <arglist>(long mask, int compute_derivs, double *x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>checkTermination</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a916e03462a9fef52029ec9dbbf33fc26</anchor>
      <arglist>(int *iAbort, double *xs)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mNumConstr</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ada78d0c2545ebd74bfed1aac254b9542</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mNumCoef</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>adbac83d2de262676aadd582c7b0bf338</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mNumNonlinConstr</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ad05d6abb7a53c1ee88d0f17ec6cf3ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mNumNonlinObjCoef</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a2b2b3fbce0decd7e741514aad6f57553</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mNumNonlinJacCoef</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>abb66ff2edd6cca21a2ba7677a529f5ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>mSolverX</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a019e2b7550f25d5b113ead14cdc44ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>mProblemX</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a4a682f4da379dc6231327aa4013f7123</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>mBoundsLo</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a35e8a5817df8cd6fcc041e15f81211f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>mBoundsHi</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>aa8afc1d912e090ab54fe65167cc9791c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>mConstrEqns</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a9a048272ca01655f7d37f4107cd5a129</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mHasObjective</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ab681a481d910e4b649f79009d358b5f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>mObj</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ac8529e70d31afd8da2c84b4e7867c18b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt; *</type>
      <name>mdObjdCoef</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a78c03bac36a03e6452604856a9e193fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt; *</type>
      <name>mConstr</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>aab05df435acaf72a28b4aed2696022d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VVD</type>
      <name>mdConstrdCoef</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a76debbc74c13e1308e769299228e203c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mConstrScale</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1ea5b06379978b2119f6181bd3990f4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>mCoefScale</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ae8e687b3b518c1dd7c24428bfd9ca4f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VVB</type>
      <name>mCoefMap</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a46f6c5388cac040149feb43e0664ec95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>mReturnedObj</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>adc3c3a25991bd1560c063c5c2188d416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mOutput</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a7271b8433af334912f62206fc785437e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mSum</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ae4cd77d79219cefb47bf5c6a13fba9e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mCheckTerm</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ae796e1680514d97d465c79eae8964a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mTermination</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a5bb16eccf9f8347b95943138a11b5bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AbnormalType</type>
      <name>mAbnormal</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1644a7fb6bd89fee5300c5549a2b25be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mBreak</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ac310fb00bab4e949e5b2447d96f8699b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static SnoptInterface *</type>
      <name>mRef</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ae1335fd3899686f198b03847b4667af0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>scaleValues</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>afd2830fc236a2b0e2835d76ff5cde3ed</anchor>
      <arglist>(long update_type, int compute_derivs)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SnoptInterface::updateFunc</type>
      <name>mUpdateFunc</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ae2965273aa43a1ee2e4200446c91a5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>void *</type>
      <name>mUpdateData</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1c63d82114b9477815444e9e558a956e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>fillUpSnoptFormat</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a18c96ed2e1b5551ff9b2bbd5a211739e</anchor>
      <arglist>(VVD jacobian, double **a, int **ha, int **ka)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>sparseCount</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>ae4328c1c31dfaea2058a6fa349651b62</anchor>
      <arglist>(int col)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>snoptObj</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a1cc3aa0b6b4505423408d86f9229fff7</anchor>
      <arglist>(int *mode, int *nn_obj, double *x, double *f_obj, double *g_obj, int *nstate, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>snoptJac</name>
      <anchorfile>d2/d9b/classdart_1_1optimizer_1_1snopt_1_1SnoptInterface.html</anchorfile>
      <anchor>a103ef49b611c9c6e041f8dfc4e8a43f1</anchor>
      <arglist>(int *mode, int *nn_con, int *nn_jac, int *ne_jac, double *x, double *f_con, double *g_con, int *nstate, char *cu, int *lencu, int *iu, int *leniu, double *ru, int *lenru)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::optimizer::snopt::SnoptInterface::Slack</name>
    <filename>df/da5/structdart_1_1optimizer_1_1snopt_1_1SnoptInterface_1_1Slack.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>constr_idx</name>
      <anchorfile>df/da5/structdart_1_1optimizer_1_1snopt_1_1SnoptInterface_1_1Slack.html</anchorfile>
      <anchor>add0bae8cb263c3e2c0b74bfa7a9a8e5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SlackType</type>
      <name>type</name>
      <anchorfile>df/da5/structdart_1_1optimizer_1_1snopt_1_1SnoptInterface_1_1Slack.html</anchorfile>
      <anchor>a4a348f75eb2a1eada9609397f3ea6aab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>val</name>
      <anchorfile>df/da5/structdart_1_1optimizer_1_1snopt_1_1SnoptInterface_1_1Slack.html</anchorfile>
      <anchor>a3dcc6c3d80c0e29541433cc35d230ae9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::optimizer::snopt::SnoptSolver</name>
    <filename>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</filename>
    <base>dart::optimizer::Solver</base>
    <member kind="function">
      <type></type>
      <name>SnoptSolver</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a328a2a953fe6bcf3d88839964239d73c</anchor>
      <arglist>(Problem *problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SnoptSolver</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a72993e9c17db7d2fb4bb822ded099a8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>solve</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a900ac57a07254f8b83f14eb8e5ec2511</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetSolver</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>ad8b1390b26d7cd065f0e945cb683e467</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>iterUpdate</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>ac1c76a9535aace94b54586ebb60dfd53</anchor>
      <arglist>(long mask, int compute_gradients, double *coefs, void *update_data)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ConstraintSet *</type>
      <name>conBox</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a5b454bc90ea804e2d7ed5f824f642dce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ObjectiveSet *</type>
      <name>objBox</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a02d5c36f5df888d1906f6f4313cba516</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SnoptInterface *</type>
      <name>mSnopt</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>afb4a634059abbd82d14143cb3de8e4ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mNoDisplay</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a8b9f157e716f0e1a5d334afd46cc4a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mSolverIter</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a906059fa53b006a8623d227d2b1243bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mTotalDofs</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a217ec889ad7170055946e19ca60a41e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mOptCount</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a31cc0e7e1e1d32d623a754af7804247f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mPrint</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a232888f487ab481ea6a72388e0dde50b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mUnit</name>
      <anchorfile>d4/da4/classdart_1_1optimizer_1_1snopt_1_1SnoptSolver.html</anchorfile>
      <anchor>a8e3431411520c873c3dab215f3a5a7fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::planning</name>
    <filename>d6/dc4/namespacedart_1_1planning.html</filename>
    <class kind="class">dart::planning::LinearPathSegment</class>
    <class kind="class">dart::planning::CircularPathSegment</class>
    <class kind="class">dart::planning::PathSegment</class>
    <class kind="class">dart::planning::Path</class>
    <class kind="class">dart::planning::PathFollowingTrajectory</class>
    <class kind="class">dart::planning::PathPlanner</class>
    <class kind="class">dart::planning::PathShortener</class>
    <class kind="class">dart::planning::RRT</class>
    <class kind="class">dart::planning::Trajectory</class>
  </compound>
  <compound kind="class">
    <name>dart::planning::LinearPathSegment</name>
    <filename>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</filename>
    <base>dart::planning::PathSegment</base>
    <member kind="function">
      <type></type>
      <name>LinearPathSegment</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>a2f7c0c41debfa726eb57290051216b6f</anchor>
      <arglist>(const Eigen::VectorXd &amp;start, const Eigen::VectorXd &amp;end)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getConfig</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>a1c0254f077c60dd408b78c9f6df86e3a</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getTangent</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>ae99384182e454b92462d14daf63579ab</anchor>
      <arglist>(double) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCurvature</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>a86a2cbf1b3154069a58396f7bb2f72fa</anchor>
      <arglist>(double) const </arglist>
    </member>
    <member kind="function">
      <type>list&lt; double &gt;</type>
      <name>getSwitchingPoints</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>ac2e8a480f96178c658234beaf8bb9f05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LinearPathSegment *</type>
      <name>clone</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>ae92bfb152c405bec5b2c555ec8583959</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PathSegment</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a9e21ea93e6bbb6fe4a757e3c6c196f00</anchor>
      <arglist>(double length=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PathSegment</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a0cc6eff7706e495f0be3d8e99dd7d98d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a89454471747e1f1d343309f8bc126831</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>start</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>a466ad10e409ab4960fa69095e85c14d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>end</name>
      <anchorfile>d9/dda/classdart_1_1planning_1_1LinearPathSegment.html</anchorfile>
      <anchor>ac445dbc42641ffb4f7641c72d294e736</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>position</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a0dc43b15b057edd6057addb68507f857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>length</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a4fc83115b6a411a0ed3438be6fc198dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::CircularPathSegment</name>
    <filename>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</filename>
    <base>dart::planning::PathSegment</base>
    <member kind="function">
      <type></type>
      <name>CircularPathSegment</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>a3a7e9a50e776589bd71bcb7122ddc8d7</anchor>
      <arglist>(const Eigen::VectorXd &amp;start, const Eigen::VectorXd &amp;intersection, const Eigen::VectorXd &amp;end, double maxDeviation)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getConfig</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>a1d366ff935259f7a79af0a3e5ffc7e05</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getTangent</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>a274641d1d4a5333b3e268a75bde67ac3</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCurvature</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>a378bc732930c821472307768d7cd1215</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>list&lt; double &gt;</type>
      <name>getSwitchingPoints</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>aba73c56944a28caeeb9846a39baf2d7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CircularPathSegment *</type>
      <name>clone</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>aa0a46192ac907b8b56a625022bb398b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>radius</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>a22b1c44a039d76ad0f69f63d1fedf561</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>center</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>a02acf7bbc739d7f7953f38123f248ddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>x</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>a3ca6135d26743cb4e5a9be00a97d3577</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>y</name>
      <anchorfile>df/df5/classdart_1_1planning_1_1CircularPathSegment.html</anchorfile>
      <anchor>adead96859fc702f8242f49a37b78ab54</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::PathSegment</name>
    <filename>d9/d64/classdart_1_1planning_1_1PathSegment.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getConfig</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>aea8a05ee9b05b37ce34504f4b4fdb742</anchor>
      <arglist>(double s) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getTangent</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a3b5d78d023470befd20de575a39604a7</anchor>
      <arglist>(double s) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getCurvature</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a30dd3374db6e15ed09cb6361a60bf3d5</anchor>
      <arglist>(double s) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; double &gt;</type>
      <name>getSwitchingPoints</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a91a1f3cce4d139d5b36cc949681d07d1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PathSegment *</type>
      <name>clone</name>
      <anchorfile>d9/d64/classdart_1_1planning_1_1PathSegment.html</anchorfile>
      <anchor>a4096f33d3d3f4230ab2298b4a16201fe</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::Path</name>
    <filename>d6/de6/classdart_1_1planning_1_1Path.html</filename>
    <member kind="function">
      <type></type>
      <name>Path</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>a5f339f2881222e19dcdb1e7c3e55bcc8</anchor>
      <arglist>(const std::list&lt; Eigen::VectorXd &gt; &amp;path, double maxDeviation=0.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Path</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>a12863a508b5aac89ee9b65769f84acd9</anchor>
      <arglist>(const Path &amp;path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Path</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>a734cd2720eee72f1a810e8d1fe2e7e95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>ac95a615ab3db4afe04a13cea16695639</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getConfig</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>ab2e71db0320eaabb5046101edc1a6567</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getTangent</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>a2a2325f2cca5dec3f2206fc1493a47f9</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getCurvature</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>a76bcb5342077d8251929a877b7acb949</anchor>
      <arglist>(double s) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNextSwitchingPoint</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>abfe9e5e17651520457f1d9755426dac4</anchor>
      <arglist>(double s, bool &amp;discontinuity) const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::pair&lt; double, bool &gt; &gt;</type>
      <name>getSwitchingPoints</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>aa8c297ceeb9b0907ea91984535f15f93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>PathSegment *</type>
      <name>getPathSegment</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>a389d2395cb68c7d4d193a978050180c8</anchor>
      <arglist>(double &amp;s) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>length</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>aebe0a80368ecab6e3e1d97f5ebbd5937</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::pair&lt; double, bool &gt; &gt;</type>
      <name>switchingPoints</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>a9cb108e49cf2dbd2b49214997bcebd64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; PathSegment * &gt;</type>
      <name>pathSegments</name>
      <anchorfile>d6/de6/classdart_1_1planning_1_1Path.html</anchorfile>
      <anchor>ade18c4af7044bcd5443a5fbb4edd1686</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::PathFollowingTrajectory</name>
    <filename>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</filename>
    <base>dart::planning::Trajectory</base>
    <class kind="struct">dart::planning::PathFollowingTrajectory::TrajectoryStep</class>
    <member kind="function">
      <type></type>
      <name>PathFollowingTrajectory</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a88862d81d5045aa77e7357fb0b929081</anchor>
      <arglist>(const Path &amp;path, const Eigen::VectorXd &amp;maxVelocity, const Eigen::VectorXd &amp;maxAcceleration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PathFollowingTrajectory</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a2bf5eb836549bf350e124849a82f37af</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>ac18c93bcb5d3f50dbdd754ad5614371d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDuration</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>acaba29c8541a179875a2fa408fef470d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPosition</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a43dfdfee9631f1bf0b008bf47cf056e1</anchor>
      <arglist>(double time) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getVelocity</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a27f0a49ec370eb9e16ab375ba8cbbf3d</anchor>
      <arglist>(double time) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxAccelerationError</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a51c4a2eeda3ac2c42fed73458c411beb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>getNextSwitchingPoint</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a1f1341ebe370965a5aca05138fcb01bd</anchor>
      <arglist>(double pathPos, TrajectoryStep &amp;nextSwitchingPoint, double &amp;beforeAcceleration, double &amp;afterAcceleration)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>getNextAccelerationSwitchingPoint</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>aaa0bd512e86a6fae9461bff1b0bac3c8</anchor>
      <arglist>(double pathPos, TrajectoryStep &amp;nextSwitchingPoint, double &amp;beforeAcceleration, double &amp;afterAcceleration)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>getNextVelocitySwitchingPoint</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>ab0bab10102e00b75db1a24f8bf26a823</anchor>
      <arglist>(double pathPos, TrajectoryStep &amp;nextSwitchingPoint, double &amp;beforeAcceleration, double &amp;afterAcceleration)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>integrateForward</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a905027474f1f7d70a14455def5067015</anchor>
      <arglist>(std::list&lt; TrajectoryStep &gt; &amp;trajectory, double acceleration)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>integrateBackward</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a02be39d9c12c41cdb7e8a13b89690710</anchor>
      <arglist>(std::list&lt; TrajectoryStep &gt; &amp;trajectory, std::list&lt; TrajectoryStep &gt; &amp;startTrajectory, double acceleration)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getMinMaxPathAcceleration</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a9ebfffa0ec292d1cfe31fcb36461fc76</anchor>
      <arglist>(double pathPosition, double pathVelocity, bool max)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getMinMaxPhaseSlope</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a43c091c8a05ffd77bfaed3a116864132</anchor>
      <arglist>(double pathPosition, double pathVelocity, bool max)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getAccelerationMaxPathVelocity</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a9bf6edefde3ab32445d29a836eb141fb</anchor>
      <arglist>(double pathPos)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getVelocityMaxPathVelocity</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a37fa804100bc88f57fbfcf6c206e8097</anchor>
      <arglist>(double pathPos)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getAccelerationMaxPathVelocityDeriv</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>af176abce483f5817a7383a8e4083f984</anchor>
      <arglist>(double pathPos)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getVelocityMaxPathVelocityDeriv</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>aaa7b72cb92413321ff1ecfb0cdd1603d</anchor>
      <arglist>(double pathPos)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>TrajectoryStep</type>
      <name>getIntersection</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>aad6318e64edb777e668cc2ccf98ccf69</anchor>
      <arglist>(const std::list&lt; TrajectoryStep &gt; &amp;trajectory, std::list&lt; TrajectoryStep &gt;::iterator &amp;it, const TrajectoryStep &amp;linePoint1, const TrajectoryStep &amp;linePoint2)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getSlope</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a158ea2263521a283bebc16573a7734b2</anchor>
      <arglist>(const TrajectoryStep &amp;point1, const TrajectoryStep &amp;point2)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>getSlope</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a7e3a5b92ab370a91f1531e40052a030b</anchor>
      <arglist>(std::list&lt; TrajectoryStep &gt;::const_iterator lineEnd)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::list&lt; TrajectoryStep &gt;::const_iterator</type>
      <name>getTrajectorySegment</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a5aac6519f0e3c00755fb331a025b5a87</anchor>
      <arglist>(double time) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Path</type>
      <name>path</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a01455eb28a2210e6abf2496a2c300b86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>maxVelocity</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a0633b6c439b7ba63f6a9cb8a8fbdfb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::VectorXd</type>
      <name>maxAcceleration</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>aa35a31469d452c2be5a16d6d79585bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>n</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a0782e6282d270d9bdb4ff1f4c9afbfae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a15cea98f2ea2d4102680f6718414f3d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; TrajectoryStep &gt;</type>
      <name>trajectory</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a4556c8737f329a458e67abd34d6dae4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>cachedTime</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a6a3b52db309000a8403b66abc10a6330</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; TrajectoryStep &gt;::const_iterator</type>
      <name>cachedTrajectorySegment</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>a539168245348cb01ce1b7c5d3b45f8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const double</type>
      <name>eps</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>ac9e92ee37323908a6e8ff54f2ae6e11d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const double</type>
      <name>timeStep</name>
      <anchorfile>d8/ddd/classdart_1_1planning_1_1PathFollowingTrajectory.html</anchorfile>
      <anchor>acccad32c54ccb9cdb58619f029a4ffcf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::planning::PathFollowingTrajectory::TrajectoryStep</name>
    <filename>de/dce/structdart_1_1planning_1_1PathFollowingTrajectory_1_1TrajectoryStep.html</filename>
    <member kind="function">
      <type></type>
      <name>TrajectoryStep</name>
      <anchorfile>de/dce/structdart_1_1planning_1_1PathFollowingTrajectory_1_1TrajectoryStep.html</anchorfile>
      <anchor>a51c6a9fe5f2ac595a7a7579ed2eb6363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrajectoryStep</name>
      <anchorfile>de/dce/structdart_1_1planning_1_1PathFollowingTrajectory_1_1TrajectoryStep.html</anchorfile>
      <anchor>a3f8a1829875efee70672f3a7b96ea07a</anchor>
      <arglist>(double pathPos, double pathVel)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pathPos</name>
      <anchorfile>de/dce/structdart_1_1planning_1_1PathFollowingTrajectory_1_1TrajectoryStep.html</anchorfile>
      <anchor>a2d90ff6e956796ae4f4c0df78a246004</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pathVel</name>
      <anchorfile>de/dce/structdart_1_1planning_1_1PathFollowingTrajectory_1_1TrajectoryStep.html</anchorfile>
      <anchor>addd6aa1daa06b554103020f2aa00d659</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>time</name>
      <anchorfile>de/dce/structdart_1_1planning_1_1PathFollowingTrajectory_1_1TrajectoryStep.html</anchorfile>
      <anchor>ab3709dbe676ef83cbab23a6d378efa77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::PathPlanner</name>
    <filename>d5/d78/classdart_1_1planning_1_1PathPlanner.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>PathPlanner</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>ab9dc2cdafbe89cefebea994bfe07d98c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PathPlanner</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>a813b752e3d35b72d5af83ba441a47d74</anchor>
      <arglist>(simulation::World &amp;world, bool bidirectional_=true, bool connect_=true, double stepSize_=0.1, size_t maxNodes_=1e6, double goalBias_=0.3)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PathPlanner</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>a0dbc01a9ef0611103becc7510df20691</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>planPath</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>a9274294ccba1cc5da1de333b30e29071</anchor>
      <arglist>(dynamics::Skeleton *robot, const std::vector&lt; int &gt; &amp;dofs, const Eigen::VectorXd &amp;start, const Eigen::VectorXd &amp;goal, std::list&lt; Eigen::VectorXd &gt; &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>planPath</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>a1ea74ed40cf7b33e6b86c084d767985c</anchor>
      <arglist>(dynamics::Skeleton *robot, const std::vector&lt; size_t &gt; &amp;dofs, const std::vector&lt; Eigen::VectorXd &gt; &amp;start, const std::vector&lt; Eigen::VectorXd &gt; &amp;goal, std::list&lt; Eigen::VectorXd &gt; &amp;path)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>ae7f2151164ab6a2f2a09fdb2241756e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bidirectional</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>aae9b3daf00efcf1ffb52bfea743473e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>stepSize</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>ac587f04fc4a6f81dd9446594715a210c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>goalBias</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>ab8ce7158030f93c75c5fafc552d5e987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>maxNodes</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>ab4991d17a397d1cd4d5a1e8ffdfd04e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>simulation::WorldPtr</type>
      <name>world</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>aa19d63ffe4a313566d78fc0a5cb9a7ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>R *</type>
      <name>start_rrt</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>aec2de4cb48295ce8bd9e25139fdfb9d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>R *</type>
      <name>goal_rrt</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>a4bab31112002b7be20a3ef824b71426f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>planSingleTreeRrt</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>ad137bf4ca8ebc2f372b57ebcb446cc83</anchor>
      <arglist>(dynamics::Skeleton *robot, const std::vector&lt; int &gt; &amp;dofs, const std::vector&lt; Eigen::VectorXd &gt; &amp;start, const Eigen::VectorXd &amp;goal, std::list&lt; Eigen::VectorXd &gt; &amp;path)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>planBidirectionalRrt</name>
      <anchorfile>d5/d78/classdart_1_1planning_1_1PathPlanner.html</anchorfile>
      <anchor>a150cca7308767573e954b4a53ddc19fd</anchor>
      <arglist>(dynamics::Skeleton *robot, const std::vector&lt; int &gt; &amp;dofs, const std::vector&lt; Eigen::VectorXd &gt; &amp;start, const std::vector&lt; Eigen::VectorXd &gt; &amp;goal, std::list&lt; Eigen::VectorXd &gt; &amp;path)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::PathShortener</name>
    <filename>d9/da3/classdart_1_1planning_1_1PathShortener.html</filename>
    <member kind="function">
      <type></type>
      <name>PathShortener</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>ab2aea4410fa25f2a1b4a528dd1332266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PathShortener</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>a31f6305eb059b65d469dd82a66cdf352</anchor>
      <arglist>(simulation::WorldPtr world, dynamics::SkeletonPtr robot, const std::vector&lt; size_t &gt; &amp;dofs, double stepSize=0.1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PathShortener</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>afd0cdff9509bc79595d1d89c930b49a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shortenPath</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>a2f34c4351735550bc35a6bccca07e480</anchor>
      <arglist>(std::list&lt; Eigen::VectorXd &gt; &amp;rawPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>segmentCollisionFree</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>a9d6942523ac5c3bde4d5742e22494554</anchor>
      <arglist>(std::list&lt; Eigen::VectorXd &gt; &amp;waypoints, const Eigen::VectorXd &amp;config1, const Eigen::VectorXd &amp;config2)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>localPlanner</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>a4d38631dc319b05b3298e00f2b64ccca</anchor>
      <arglist>(std::list&lt; Eigen::VectorXd &gt; &amp;waypoints, std::list&lt; Eigen::VectorXd &gt;::const_iterator it1, std::list&lt; Eigen::VectorXd &gt;::const_iterator it2)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>simulation::WorldPtr</type>
      <name>world</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>a798038d98ac047aff4d7195950d86231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dynamics::SkeletonPtr</type>
      <name>robot</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>ad9f83553d45c4ee94679ca3eec3bdf67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>dofs</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>a41a7b57b694d4d7328ea60b4abf2d3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>stepSize</name>
      <anchorfile>d9/da3/classdart_1_1planning_1_1PathShortener.html</anchorfile>
      <anchor>a8ad62815cbaba087d00d5d430ae49a7b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::RRT</name>
    <filename>d7/dd6/classdart_1_1planning_1_1RRT.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>StepResult</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a38adc04d2f3c41b2fcd838b15961c357</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STEP_COLLISION</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a38adc04d2f3c41b2fcd838b15961c357ad3b80a815ac2e4b6dd1deed007ba36c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STEP_REACHED</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a38adc04d2f3c41b2fcd838b15961c357ab6063599a97693cf474a827c0928c12a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STEP_PROGRESS</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a38adc04d2f3c41b2fcd838b15961c357a3288cfb4d8915f3ac364c1aaf82e999a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RRT</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a17e4b2aeb7e4f710c92bee61a4c23c75</anchor>
      <arglist>(dart::simulation::WorldPtr world, dart::dynamics::SkeletonPtr robot, const std::vector&lt; size_t &gt; &amp;dofs, const Eigen::VectorXd &amp;root, double stepSize=0.02)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RRT</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>aeae636697bb2c1ceaf7bfb9ab15bc6c6</anchor>
      <arglist>(simulation::WorldPtr world, dynamics::SkeletonPtr robot, const std::vector&lt; size_t &gt; &amp;dofs, const std::vector&lt; Eigen::VectorXd &gt; &amp;roots, double stepSize=0.02)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RRT</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ade135508c7ae8bf68053717d17086e94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ab609e1f7fa7eef91bcced8f6a0193646</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ac7a50a64b5279c701e5eff1d9bc3fbd2</anchor>
      <arglist>(const Eigen::VectorXd &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>StepResult</type>
      <name>tryStep</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a2bff503512b314d3064e2c84dc1cd475</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StepResult</type>
      <name>tryStep</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a6b6b1ad947c12d607d7b5c057199bf6b</anchor>
      <arglist>(const Eigen::VectorXd &amp;qtry)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StepResult</type>
      <name>tryStepFromNode</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>af54d3c4706c389b0e7f33990e7bec13d</anchor>
      <arglist>(const Eigen::VectorXd &amp;qtry, int NNidx)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>newConfig</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a3e1c739f1ef601282623392c3d31177a</anchor>
      <arglist>(std::list&lt; Eigen::VectorXd &gt; &amp;intermediatePoints, Eigen::VectorXd &amp;qnew, const Eigen::VectorXd &amp;qnear, const Eigen::VectorXd &amp;qtarget)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getGap</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a648b7c4079feeaf67419d4fbbdc68bde</anchor>
      <arglist>(const Eigen::VectorXd &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tracePath</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ad6ca538536f6e706c531e534eb3f0005</anchor>
      <arglist>(int node, std::list&lt; Eigen::VectorXd &gt; &amp;path, bool reverse=false)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSize</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ade2f3f6d8db66d66f6ece344e0cc22ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkCollisions</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ab54a80092a4ff46e844dffbbf451ede3</anchor>
      <arglist>(const Eigen::VectorXd &amp;c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::VectorXd</type>
      <name>getRandomConfig</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a5300d3f63e68c0725e19fef5dc13b1f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>ndim</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a26e8d49708915c80f223745de93ea071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>stepSize</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a1418ade624849da6ac89f5e7c1cc76a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>activeNode</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a4f3deb3c7dc7a905ee46d4e529771c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>parentVector</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a22c4713758198d9608229d2ea18d6bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; const Eigen::VectorXd * &gt;</type>
      <name>configVector</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ad033b222671adabdc106aa0802bd5ceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>randomInRange</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>ae2cfcce67f5f5e0fdc80c842c0a916de</anchor>
      <arglist>(double min, double max)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>getNearestNeighbor</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a9555f355bc66cf9ffc6a72a6546607e2</anchor>
      <arglist>(const Eigen::VectorXd &amp;qsamp)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>addNode</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a1bee295679a662a2ff9b2f394296440f</anchor>
      <arglist>(const Eigen::VectorXd &amp;qnew, int parentId)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>simulation::WorldPtr</type>
      <name>world</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a889d8e011b343728e9b40c3b0d3acc86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dynamics::SkeletonPtr</type>
      <name>robot</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a56369f4a252648e20f871e03ec7ef1ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>dofs</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>afc795bd06e3163bf74c9f083d13aec66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>flann::Index&lt; flann::L2&lt; double &gt; &gt; *</type>
      <name>index</name>
      <anchorfile>d7/dd6/classdart_1_1planning_1_1RRT.html</anchorfile>
      <anchor>a3918a515d42c45f4a53cee22de5c0622</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::planning::Trajectory</name>
    <filename>d6/d3a/classdart_1_1planning_1_1Trajectory.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getDuration</name>
      <anchorfile>d6/d3a/classdart_1_1planning_1_1Trajectory.html</anchorfile>
      <anchor>a104fbf2d811c6c47652cc04d3dbd1907</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getPosition</name>
      <anchorfile>d6/d3a/classdart_1_1planning_1_1Trajectory.html</anchorfile>
      <anchor>a575aa9e0e3e4b2e9ee9d46a0de29f214</anchor>
      <arglist>(double time) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Eigen::VectorXd</type>
      <name>getVelocity</name>
      <anchorfile>d6/d3a/classdart_1_1planning_1_1Trajectory.html</anchorfile>
      <anchor>af3a96d14827546b1137733defe07fb70</anchor>
      <arglist>(double time) const =0</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::renderer</name>
    <filename>db/dd1/namespacedart_1_1renderer.html</filename>
    <class kind="class">dart::renderer::Camera</class>
    <class kind="class">dart::renderer::Light</class>
    <class kind="class">dart::renderer::OpenGLCamera</class>
    <class kind="class">dart::renderer::OpenGLRenderInterface</class>
    <class kind="class">dart::renderer::RenderInterface</class>
    <member kind="enumeration">
      <type></type>
      <name>AXIS</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>af6a99067870ecb5696a8eaf5709d1f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AXIS_X</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>af6a99067870ecb5696a8eaf5709d1f09a4ff3a2cd2c824b0dd3b2c1b2a221a071</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AXIS_Y</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>af6a99067870ecb5696a8eaf5709d1f09ac98ff74589d89d0265331a29a403ef69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AXIS_Z</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>af6a99067870ecb5696a8eaf5709d1f09ab7d421c5a1a8ebfc5efb89d61fcaab70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LightType</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac132458d777d97036b5d17e5515ec703</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LT_PointLight</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac132458d777d97036b5d17e5515ec703a3c2dd6eb0e1e724770737f1665f6c96c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LT_DirectionLight</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac132458d777d97036b5d17e5515ec703a96b896dbf84941c8f3ee0bb756461aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DecoBufferType</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>acf87eb7802dde6a39804b3bb9665971a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BT_Front</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>acf87eb7802dde6a39804b3bb9665971aad22b58a789a682f3de7bd2fb305f5c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BT_Back</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>acf87eb7802dde6a39804b3bb9665971aa004ccfd3677ad920358336e6d79f2666</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DecoColorChannel</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>a906b07495de2d463f0d43f0addb79ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_R</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>a906b07495de2d463f0d43f0addb79ae5a38372d2ebb1dd3b09a77924b0971728a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_G</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>a906b07495de2d463f0d43f0addb79ae5aac7702d39cdcd66566fd5cb56379a63d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_B</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>a906b07495de2d463f0d43f0addb79ae5a571c7d2d59c97d16c67538d83c5ce8df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_A</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>a906b07495de2d463f0d43f0addb79ae5a47aee9a3eb7847044d4f92fb704686ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_RGB</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>a906b07495de2d463f0d43f0addb79ae5ab50693fd5cfb3986c5ea5d10285e79c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CC_RGBA</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>a906b07495de2d463f0d43f0addb79ae5a8d0a2375bc6fb5ba7f5df0f9b314690a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DecoDrawType</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac61641b5f1f95dab6b3d3cac2477dc60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_WireFrame</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac61641b5f1f95dab6b3d3cac2477dc60a87c3cdbf00b1f42d35b4ef23276f4e81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_SolidPolygon</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac61641b5f1f95dab6b3d3cac2477dc60a9d52823b3675ea04276f6a091310e542</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_FrontPolygon</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac61641b5f1f95dab6b3d3cac2477dc60a0acfa65117e0fe59c608580620268429</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_BackPolygon</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac61641b5f1f95dab6b3d3cac2477dc60af1b8b2fe0e51df7abb11b98b7728ab8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>DT_Max</name>
      <anchorfile>db/dd1/namespacedart_1_1renderer.html</anchorfile>
      <anchor>ac61641b5f1f95dab6b3d3cac2477dc60a197f480e6d50c4c39f92d70bd652c5b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::renderer::Camera</name>
    <filename>db/d67/classdart_1_1renderer_1_1Camera.html</filename>
    <member kind="function">
      <type></type>
      <name>Camera</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a00282279d4b4171fc0619bb4941106da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Camera</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a90360997d8ed12ed2ef39b7c39fdf35d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a4b2662c594305cce992fe2c3fd3d729a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_eye, const Eigen::Vector3d &amp;_look, const Eigen::Vector3d &amp;_up)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>slide</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a9a66252aabe953131a155a95ceebf126</anchor>
      <arglist>(double _delX, double _delY, double _delZ, bool _bLocal=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFrustum</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a5fa4c4cdfa940326cab3858140803afe</anchor>
      <arglist>(float _vAng, float _asp, float _nearD, float _farD)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setOrtho</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a86027b6c657a72da66162930080fc1c2</anchor>
      <arglist>(float _width, float _height, float _nearD, float _farD)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>roll</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a1fee5a93969c6d8159a4f294678948a8</anchor>
      <arglist>(float _angle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pitch</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>aec35a21ad5a7c0705a5205793d03c314</anchor>
      <arglist>(float _angle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>yaw</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a536cc9fac9fbff3a850b72cf152b8262</anchor>
      <arglist>(float _angle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>localRotate</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a31fd92b63d866824adad111a8a38f49e</anchor>
      <arglist>(float _angle, AXIS _axis)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>globalRotate</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a291c24cfec93dcb034f3411a858a59b0</anchor>
      <arglist>(float _angle, AXIS _axis)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Vector3d</type>
      <name>getEye</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a87c988dc63926e602aa88e6cbe5a1e06</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Vector3d</type>
      <name>getLookAtDir</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a4666cb8c3fdcd50da2ebb0036dd83542</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Eigen::Vector3d</type>
      <name>getUpDir</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>abbe8b55124d688c5762e1ccef3d16038</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isOrthogonal</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a4a96eee806a8e236ad420818c79cf6eb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getVerticalViewAngle</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>ac107584e5d289d95204dad789923e45d</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getNearDistance</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>ac4d9a586c9f7c75b808580ec543f5990</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getFarDistance</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a6b4c9b5b6c67ab8e1915712228542445</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getWidth</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a6ae9028d983ed7a8b46c9425e402801c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getHeight</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a77cb2d7d7a35d963a65c4b2471772bb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mViewAngle</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a842b753adcd4e036a99c23a7bb13c28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mAspect</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>ab5391134910c4ca06663dfaa0bcd44e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mNearDist</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a4b5a6546776ce3fb33abfdc70056e56a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mFarDist</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a2b0330eeace8924f02a05ab46f28ca7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mWidth</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a2dc0b7102bfdf2277142b340bf424172</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mHeight</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>aa8d88215cef8b32f0f342eef2cd63f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsOrthognal</name>
      <anchorfile>db/d67/classdart_1_1renderer_1_1Camera.html</anchorfile>
      <anchor>a09c2ec6933ab6b9b9452c5394217019c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::renderer::Light</name>
    <filename>d7/d86/classdart_1_1renderer_1_1Light.html</filename>
    <member kind="function">
      <type></type>
      <name>Light</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>a1bb5066c247e003d2b05a9adb46a6afa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Light</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>a8b0322da1e93413142fc35abd3dd0e3a</anchor>
      <arglist>(LightType type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Light</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>adfba373c24c362316e3ed9037d056f52</anchor>
      <arglist>(const Eigen::Vector3d &amp;_pos, const Eigen::Vector3d &amp;_diffuse, const Eigen::Vector3d &amp;_specular, LightType _type)</arglist>
    </member>
    <member kind="function">
      <type>LightType</type>
      <name>GetType</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>aea984e127ca59e781a73ac747777c396</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPosition</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>a5746f9d216d95d1300b5ed5ec6bde0c9</anchor>
      <arglist>(const Eigen::Vector3d &amp;_p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetPosition</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>a97ac03c777e223ae13d24752a9683589</anchor>
      <arglist>(float *_pos) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetSpecular</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>adc247cc589fa8360688dd842dccf1e2c</anchor>
      <arglist>(float *_specular) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetDiffuse</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>a8687209ac5fa934a93624f0e298f821a</anchor>
      <arglist>(float *_diffuse) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>GetPosition</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>a34d6253a4716019dd9df61939463a191</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>GetSpecular</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>a2eba65dcc11b0b348be39fedd3fe03ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>GetDiffuse</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>a8bf19af7c1239f12baaa9e70fc4f102e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mPosition</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>a4f3b66d0337b6467472a7d3600277f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mSpecular</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>ab3448c0fdf531f1f8347fb8d8fd390a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Eigen::Vector3d</type>
      <name>mDiffuse</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>a4274cad71d3c83f1a8d3c1c35fec358d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LightType</type>
      <name>mType</name>
      <anchorfile>d7/d86/classdart_1_1renderer_1_1Light.html</anchorfile>
      <anchor>a8714790a52cfb6ace8d5373f9898f171</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::renderer::OpenGLCamera</name>
    <filename>d2/ddd/classdart_1_1renderer_1_1OpenGLCamera.html</filename>
    <base>dart::renderer::Camera</base>
    <member kind="function">
      <type></type>
      <name>OpenGLCamera</name>
      <anchorfile>d2/ddd/classdart_1_1renderer_1_1OpenGLCamera.html</anchorfile>
      <anchor>ad2367f9572f80b4226763d18513a9a7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OpenGLCamera</name>
      <anchorfile>d2/ddd/classdart_1_1renderer_1_1OpenGLCamera.html</anchorfile>
      <anchor>a725628caed6918508f85ed42947ed1e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>d2/ddd/classdart_1_1renderer_1_1OpenGLCamera.html</anchorfile>
      <anchor>afe0a437bc7161062e80ead0fa3cf8739</anchor>
      <arglist>(const Eigen::Vector3d &amp;_Eye, const Eigen::Vector3d &amp;_look, const Eigen::Vector3d &amp;_up)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>slide</name>
      <anchorfile>d2/ddd/classdart_1_1renderer_1_1OpenGLCamera.html</anchorfile>
      <anchor>a1e90352c69613e4242a32b4f7eef260d</anchor>
      <arglist>(double _delX, double _delY, double _delZ, bool _bLocal=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFrustum</name>
      <anchorfile>d2/ddd/classdart_1_1renderer_1_1OpenGLCamera.html</anchorfile>
      <anchor>a0ab67a26872b3ed5b015c8571d8d3241</anchor>
      <arglist>(float _vAng, float _asp, float _nearD, float _farD)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setOrtho</name>
      <anchorfile>d2/ddd/classdart_1_1renderer_1_1OpenGLCamera.html</anchorfile>
      <anchor>a2957f3364addc213d7e3e9c8921e2d5f</anchor>
      <arglist>(float _width, float _height, float _nearD, float _farD)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>roll</name>
      <anchorfile>d2/ddd/classdart_1_1renderer_1_1OpenGLCamera.html</anchorfile>
      <anchor>a76b5b16d3f24a33a745c526548a0ce23</anchor>
      <arglist>(float _angle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pitch</name>
      <anchorfile>d2/ddd/classdart_1_1renderer_1_1OpenGLCamera.html</anchorfile>
      <anchor>a7d78bace70c3ba9bf6a851cd50f6e839</anchor>
      <arglist>(float _angle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>yaw</name>
      <anchorfile>d2/ddd/classdart_1_1renderer_1_1OpenGLCamera.html</anchorfile>
      <anchor>a14babccb9199511cc0bbfbe9c52e94ae</anchor>
      <arglist>(float _angle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>localRotate</name>
      <anchorfile>d2/ddd/classdart_1_1renderer_1_1OpenGLCamera.html</anchorfile>
      <anchor>a74298f4cdc2d0cff43e6bd0a24e0a7dd</anchor>
      <arglist>(float _angle, AXIS _axis)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>globalRotate</name>
      <anchorfile>d2/ddd/classdart_1_1renderer_1_1OpenGLCamera.html</anchorfile>
      <anchor>a38ca97805d59c19cf43e960f8e47a0c4</anchor>
      <arglist>(float _angle, AXIS _axis)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::renderer::OpenGLRenderInterface</name>
    <filename>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</filename>
    <base>dart::renderer::RenderInterface</base>
    <member kind="function">
      <type></type>
      <name>OpenGLRenderInterface</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a5255bb1da248b61aad4c367993a3e41c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OpenGLRenderInterface</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a9ba545198216e7e47455311544c8f2af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a28946700af5f8b0b0a195f0e78f8a5df</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>destroy</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a69838461f59d64031020e96aceaa341c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setViewport</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a0ce0b361deaa41f193e1b4e2ca4a20fe</anchor>
      <arglist>(int _x, int _y, int _width, int _height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getViewport</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ad6771f2ac0997a3a9af0213a7c0b9e1d</anchor>
      <arglist>(int &amp;_x, int &amp;_y, int &amp;_width, int &amp;_height) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a703be66527bf1f6b26ab65f3a65b2f15</anchor>
      <arglist>(const Eigen::Vector3d &amp;_color) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDefaultLight</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ae8033387ea597f22eb5754dfbad1a11f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>turnLightsOff</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ae4f28d40b2cfb94f3b7018c001a4ff23</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>turnLightsOn</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ac2a188f746e9bfd1dd6517834a44d67a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaterial</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a3ed8257ef018c571f011d7bf55c35267</anchor>
      <arglist>(const Eigen::Vector3d &amp;_diffuse, const Eigen::Vector3d &amp;_specular, double _cosinePow) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMaterial</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a79ddb6b4cb81a96f7ab2a5085017c28a</anchor>
      <arglist>(Eigen::Vector3d &amp;_diffuse, Eigen::Vector3d &amp;_specular, double &amp;_cosinePow) const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDefaultMaterial</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a22f5e0fc3f7deedc5caba612d211e4f1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pushMatrix</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a510731bd023604d2db4ab6914d3cc65c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>popMatrix</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ab06bc12e086658350a2c42f0225ee2f8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pushName</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a9a64af91ee2eee317c2bd90a8dbc3828</anchor>
      <arglist>(int _id) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>popName</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ac57085ee6eb9ed310f6c9143cb9b2af7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translate</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ae2d923f3dd039fba63a6d957efa4f2a0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rotate</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a6d7c9fa92aa3be837d28b12d34a12671</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis, double _rad) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transform</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a3b62a7d11828403a0f4d38e6c151d4dd</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_transform) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ad531f9ccd1cb199b9991d58766f3f7dd</anchor>
      <arglist>(const Eigen::Vector3d &amp;_scale) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compileList</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a88050c6e564512b5029f016934a4117a</anchor>
      <arglist>(dynamics::Skeleton *_skel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compileList</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ab6f07bc8f9eb2d73d8de5f45b6608e7f</anchor>
      <arglist>(dynamics::BodyNode *_node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compileList</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a9a00fabe629ad014030120447894580e</anchor>
      <arglist>(dynamics::Shape *_shape)</arglist>
    </member>
    <member kind="function">
      <type>GLuint</type>
      <name>compileList</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a9fe8cd27a3f023c9a4dc65513d5c177a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_scale, const aiScene *_mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>aa6f657d7c33efe86a783dc76a78e2ac6</anchor>
      <arglist>(dynamics::Skeleton *_skel, bool _vizCol=false, bool _colMesh=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a7acfb483a05a837b5cbbf5c1705d36ec</anchor>
      <arglist>(dynamics::BodyNode *_node, bool _vizCol=false, bool _colMesh=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>draw</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>af0bf1d5fa87f848de44964ee90eaca70</anchor>
      <arglist>(dynamics::Shape *_shape)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawEllipsoid</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a15c6b0c854ca4f0f14410773067c5a61</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawCube</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a519fc670e2309e53722081fb01fdab64</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawCylinder</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ab04dca8bca6c13116a734aea66686872</anchor>
      <arglist>(double _radius, double _height) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawMesh</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>aa84bab85d46d80119b88d04252c9a1ef</anchor>
      <arglist>(const Eigen::Vector3d &amp;_scale, const aiScene *_mesh) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawList</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a4fb24254775b995c3563c8ee61e0aff4</anchor>
      <arglist>(GLuint index) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLineSegments</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a2208b3fe43ceed8fe0b251231bf4bd25</anchor>
      <arglist>(const std::vector&lt; Eigen::Vector3d &gt; &amp;_vertices, const Eigen::aligned_vector&lt; Eigen::Vector2i &gt; &amp;_connections) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPenColor</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a08ddf1420e84a5425dcb4b6dcdb11601</anchor>
      <arglist>(const Eigen::Vector4d &amp;_col) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPenColor</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a66043f4caa7f1457678e29d575ef295d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_col) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLineWidth</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ab7ced0b0efa649f57562f8edbdd86f88</anchor>
      <arglist>(float _width) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>saveToImage</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>aa06163e60b385218bdd5b5348d82418e</anchor>
      <arglist>(const char *_filename, DecoBufferType _buffType=BT_Back) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>readFrameBuffer</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a0df1901e717c37ac4c0c12f68ef6b86c</anchor>
      <arglist>(DecoBufferType _buffType, DecoColorChannel _ch, void *_pixels) override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderInterface</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a663667e8066160365456fbffefca736f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RenderInterface</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>aafb66ccbf1d573b91f521933b8bd53ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addLight</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>ada10d872c3ed83f8c72157634af37f00</anchor>
      <arglist>(Light *_light)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>eraseAllLights</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a3fc81a7bce2bfef5577efa4641688dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawList</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>aa1da3c6c7a645c830e0b24c0b0ba9b79</anchor>
      <arglist>(unsigned int index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>compileDisplayList</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a0cfa04380802ce274d2f066bb933a127</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size, const aiScene *_mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Camera *</type>
      <name>getCamera</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a12a4f88d6d2f51cc4f7eb8b98acdebe4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>color4_to_float4</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a97e47b81951d3415f3a8b88c6afbd992</anchor>
      <arglist>(const aiColor4D *c, float f[4])</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>set_float4</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>adfd648a03703ca29c7d5f1a540a69587</anchor>
      <arglist>(float f[4], float a, float b, float c, float d)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>applyMaterial</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ad692aa02223e25e651dee919dedf75db</anchor>
      <arglist>(const struct aiMaterial *mtl)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>recursiveRender</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a514211795db2c29c36758ef3a8e566a1</anchor>
      <arglist>(const struct aiScene *sc, const struct aiNode *nd)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mViewportX</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a0d710305e04988d3055cca2a41209552</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mViewportY</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>ad6b16f3e99004a78f26bdf9be84b4e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mViewportWidth</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>a381e192049a5b2e6ba8aaedf32754098</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mViewportHeight</name>
      <anchorfile>de/d27/classdart_1_1renderer_1_1OpenGLRenderInterface.html</anchorfile>
      <anchor>abdc0b7ae340659c024e990fadfed4f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Camera *</type>
      <name>mCamera</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a875689fbdd17d04d61e10495bcaf4dfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Light * &gt;</type>
      <name>mLightList</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a62cad476515f7650f302048d60102d40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::renderer::RenderInterface</name>
    <filename>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>aa3a188a2fecfcf5b2051a7db93409c28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>destroy</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a121ec430bcf15743dbe05c4cebb2b285</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setViewport</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>af74c3380ce6935ea7623bfad1cdc04c0</anchor>
      <arglist>(int _x, int _y, int _width, int _height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getViewport</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>afa802820cb314d45d801289352e73e95</anchor>
      <arglist>(int &amp;_x, int &amp;_y, int &amp;_width, int &amp;_height) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a1dbede5326d0eb95b45e0be5a1b3bac0</anchor>
      <arglist>(const Eigen::Vector3d &amp;_color)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDefaultLight</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a839ce414e610f8bbdd535b2471ef1b62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>turnLightsOff</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>aadec9f50441c0302e2fef67d8559f4c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>turnLightsOn</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>ac05e45ac8368e1d8328aa443fed140dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMaterial</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>aa3a1bb7a95618493ba4003b5f3267dc7</anchor>
      <arglist>(const Eigen::Vector3d &amp;_diffuse, const Eigen::Vector3d &amp;_specular, double _cosinePow)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getMaterial</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a9ca3903d8793430ebff5e6202196b9b3</anchor>
      <arglist>(Eigen::Vector3d &amp;_diffuse, Eigen::Vector3d &amp;_specular, double &amp;_cosinePow) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDefaultMaterial</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a08b7c1fd3592d0247421411d90ce3144</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pushMatrix</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a51a61f74289756c34741794e97c3f228</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>popMatrix</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>aa775852f591e2057ddd4184b78878a50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pushName</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>ae8f0e8083097cfc6741451deee487d39</anchor>
      <arglist>(int _id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>popName</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>ae6fa1e7688a2c4e4a089694d15600529</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translate</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>ab0ec3f1e505313c14db19b933791cc39</anchor>
      <arglist>(const Eigen::Vector3d &amp;_offset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rotate</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a2dacd497ca3923eaca99b83a3d48c61a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_axis, double _rad)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transform</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a11186116849f139537ea8d810410f637</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_transform)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a0c07c4d712eca2cd26731f356fd0fed6</anchor>
      <arglist>(const Eigen::Vector3d &amp;_scale)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawEllipsoid</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a867bdefeb8c2303a7423866acccfa5e2</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawCube</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a5c6addf29ca5ec4acf728491ea1abe7e</anchor>
      <arglist>(const Eigen::Vector3d &amp;_size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawCylinder</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a59aefadbb2ca29b9c9ad2e086bfb51ef</anchor>
      <arglist>(double _radius, double _height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawMesh</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>aec7f7bdcb5786e528f89eb0e7f7aad5a</anchor>
      <arglist>(const Eigen::Vector3d &amp;_scale, const aiScene *_mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>drawLineSegments</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a7cc62e801ee2b44484f7cbdd87a364cb</anchor>
      <arglist>(const std::vector&lt; Eigen::Vector3d &gt; &amp;_vertices, const Eigen::aligned_vector&lt; Eigen::Vector2i &gt; &amp;_connections)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPenColor</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>ab4831f56ee341487594a4193d5fb796c</anchor>
      <arglist>(const Eigen::Vector4d &amp;_col)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPenColor</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a26ccae90e71ef7a904b82fc9a6218ef8</anchor>
      <arglist>(const Eigen::Vector3d &amp;_col)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLineWidth</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>ae7fddb689d7253590e5edd7e1d187838</anchor>
      <arglist>(float _width)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>saveToImage</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a401e506fff021894bd9f151647906cd3</anchor>
      <arglist>(const char *_filename, DecoBufferType _buffType=BT_Back)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>readFrameBuffer</name>
      <anchorfile>da/ddb/classdart_1_1renderer_1_1RenderInterface.html</anchorfile>
      <anchor>a1e1d74edb8fb3b173ba1cc5927de41a5</anchor>
      <arglist>(DecoBufferType _buffType, DecoColorChannel _ch, void *_pixels)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::simulation</name>
    <filename>d4/d0b/namespacedart_1_1simulation.html</filename>
    <class kind="class">dart::simulation::Recording</class>
    <class kind="class">dart::simulation::World</class>
    <member kind="typedef">
      <type>std::shared_ptr&lt; World &gt;</type>
      <name>WorldPtr</name>
      <anchorfile>d4/d0b/namespacedart_1_1simulation.html</anchorfile>
      <anchor>a1db1abe159f77736177ead5172d44206</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::simulation::Recording</name>
    <filename>dd/d87/classdart_1_1simulation_1_1Recording.html</filename>
    <member kind="function">
      <type></type>
      <name>Recording</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>a8a7ce1a9619cedeef427f1e079f38a8d</anchor>
      <arglist>(const std::vector&lt; dynamics::SkeletonPtr &gt; &amp;_skeletons)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Recording</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>ac9c1bb8c70b7d0e25a1bfebd5789906c</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;_skelDofs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Recording</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>ada494ecb5ac212818e246a5b28e8d422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumFrames</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>aaddd24f208ff7e95e21ae192b6e0013b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSkeletons</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>acc9b7e6a559044e36c06f7ca2b82559a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumDofs</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>a0d0f4e17455cc4a5dbb70a311642fc3c</anchor>
      <arglist>(int _skelIdx) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumContacts</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>abb0f68eb663a57780bf507f96cbfda9f</anchor>
      <arglist>(int _frameIdx) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getConfig</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>a6b9e42db4147db5ffebf91306ae322a2</anchor>
      <arglist>(int _frameIdx, int _skelIdx) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getGenCoord</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>aad41fc01640824e1cef87da80e1cf6d9</anchor>
      <arglist>(int _frameIdx, int _skelIdx, int _dofIdx) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getContactPoint</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>a57866a0d81e1820074a3a98138cabf1f</anchor>
      <arglist>(int _frameIdx, int _contactIdx) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getContactForce</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>ae68963e725df407ca8ce2f9b2dda7c53</anchor>
      <arglist>(int _frameIdx, int _contactIdx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>ad77059abae51944bcce5ca3c6641e5f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addState</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>a1083cd0643e37980929b837e68387bae</anchor>
      <arglist>(const Eigen::VectorXd &amp;_state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateNumGenCoords</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>afa801118a1d85dccf0d35b18b5c23f70</anchor>
      <arglist>(const std::vector&lt; dynamics::SkeletonPtr &gt; &amp;_skeletons)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Eigen::VectorXd &gt;</type>
      <name>mBakedStates</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>ad0a3a2724fc4cd9a9abfbeb668872262</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>mNumGenCoordsForSkeletons</name>
      <anchorfile>dd/d87/classdart_1_1simulation_1_1Recording.html</anchorfile>
      <anchor>a37758e3197ec54395e7d8d7723af8bd6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::simulation::World</name>
    <filename>d7/d41/classdart_1_1simulation_1_1World.html</filename>
    <base virtualness="virtual">dart::common::Subject</base>
    <member kind="typedef">
      <type>common::Signal&lt; void(const std::string &amp;_oldName, const std::string &amp;_newName)&gt;</type>
      <name>NameChangedSignal</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a897dd05d707d41e1f6e41f4a6e521a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>World</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>acf10565ff7edcccf806c556c3e3a9d65</anchor>
      <arglist>(const std::string &amp;_name=&quot;world&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~World</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a012bbbc562d0d11d1ff311db3223a027</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; World &gt;</type>
      <name>clone</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a359feb0d23bf0a517f329f4b38702391</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>setName</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ab2e3c6c8a93ed8260c9f9d98c26541ee</anchor>
      <arglist>(const std::string &amp;_newName)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a779a1d947049192ff99abd22344eec9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGravity</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>aca6b178778492c5881182047d8a0b24b</anchor>
      <arglist>(const Eigen::Vector3d &amp;_gravity)</arglist>
    </member>
    <member kind="function">
      <type>const Eigen::Vector3d &amp;</type>
      <name>getGravity</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>af7a436a034a3250c670c553d55175c57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeStep</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a93b9b1d8e28ce7432dac1292da705e8c</anchor>
      <arglist>(double _timeStep)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeStep</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a8ab96c5aaa4676ddea35d9a309c9680d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dynamics::SkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>af4fa7aaaf2c63d35f3e5f3b7047a1cd7</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>dynamics::SkeletonPtr</type>
      <name>getSkeleton</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>aa37316c0d59fdeffd0f0e12877e18efe</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumSkeletons</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a816530a06946f7d6e55d4b3746b5a3c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>addSkeleton</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a2d091354a864e3cfc6ea936e96734cbf</anchor>
      <arglist>(dynamics::SkeletonPtr _skeleton)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSkeleton</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a9e094752ba0e79fd7da928aa7b5e92a2</anchor>
      <arglist>(dynamics::SkeletonPtr _skeleton)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; dynamics::SkeletonPtr &gt;</type>
      <name>removeAllSkeletons</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a4e16c729076a67e36fe6e7af31c1c359</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndex</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a49df83216e5015f198046d737e19a90f</anchor>
      <arglist>(int _index) const </arglist>
    </member>
    <member kind="function">
      <type>dynamics::SimpleFramePtr</type>
      <name>getSimpleFrame</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ae10df30bb9b6729df44b19575b39bbf8</anchor>
      <arglist>(size_t _index) const </arglist>
    </member>
    <member kind="function">
      <type>dynamics::SimpleFramePtr</type>
      <name>getSimpleFrame</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a58f50b12c440263a6d050cb469d8086c</anchor>
      <arglist>(const std::string &amp;_name) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumSimpleFrames</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>af4b95a3d4426bad0ff275d9939ecece8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>addSimpleFrame</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ad63ebe2d3e588076074821f4550e5f59</anchor>
      <arglist>(dynamics::SimpleFramePtr _frame)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSimpleFrame</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>affb31047859420ea0bb8ad2861fa355a</anchor>
      <arglist>(dynamics::SimpleFramePtr _frame)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; dynamics::SimpleFramePtr &gt;</type>
      <name>removeAllSimpleFrames</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ad7d9761552dd73877b6c5eebb1cfe6b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkCollision</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a1ed8cdf92593164f187ea744cb963010</anchor>
      <arglist>(bool _checkAllCollisions=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ab7212df7957a3d17941dda4d199a30ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>step</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a58347241b736644fbc671d55a0f76d38</anchor>
      <arglist>(bool _resetCommand=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a4cff8eb25601695d80f2ef8b9871ec4e</anchor>
      <arglist>(double _time)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTime</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>af8ccaec63c40f01c240f4659127dadc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSimFrames</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>acd7a94b138ed0358535f5badd11d0819</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>constraint::ConstraintSolver *</type>
      <name>getConstraintSolver</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a6bbd6a9af74b286d9dd522d8bfef3a36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bake</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a9818ee9fc3e6e5a402ccc93b530d872a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Recording *</type>
      <name>getRecording</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ae602e49e836f4f305b0b8a08d7656695</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>common::SlotRegister&lt; NameChangedSignal &gt;</type>
      <name>onNameChanged</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a7bd499d3b626eb82e890bbbeaa543206</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleSkeletonNameChange</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a606ac7fbd3235840fe61a13ee0dbbb5b</anchor>
      <arglist>(dynamics::ConstMetaSkeletonPtr _skeleton)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleSimpleFrameNameChange</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a2f33f2cf8a5979fadb2b5a9899b400da</anchor>
      <arglist>(const dynamics::Entity *_entity)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mName</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a32175b63fe2cf7e430594c273cb9febb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; dynamics::SkeletonPtr &gt;</type>
      <name>mSkeletons</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a6b7a89ecfafb6044bf95fe4b06684d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; dynamics::ConstMetaSkeletonPtr, dynamics::SkeletonPtr &gt;</type>
      <name>mMapForSkeletons</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a0fb3ba2ac90d62510662e130e09fb83b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; common::Connection &gt;</type>
      <name>mNameConnectionsForSkeletons</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ae6786cba173e827d89534e5a2f4e717c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::common::NameManager&lt; dynamics::SkeletonPtr &gt;</type>
      <name>mNameMgrForSkeletons</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a38de24ec125489bb764627e6eb638c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; dynamics::SimpleFramePtr &gt;</type>
      <name>mSimpleFrames</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a8823a427785826bf07dbad9f1da9ec61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; common::Connection &gt;</type>
      <name>mNameConnectionsForSimpleFrames</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>abe2caf13ebd38283fd68785f7baea4c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; const dynamics::SimpleFrame *, dynamics::SimpleFramePtr &gt;</type>
      <name>mSimpleFrameToShared</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a480f00ee2c5ad32043a3c05ef55e535a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dart::common::NameManager&lt; dynamics::SimpleFramePtr &gt;</type>
      <name>mNameMgrForSimpleFrames</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>adcfcf7daf4fc391e50ec0cd78575d0af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>mIndices</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a950a0b55028b7b6c13734782a475317b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::Vector3d</type>
      <name>mGravity</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a5ede55fe21cae927c035fb67576c2d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTimeStep</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a9499ae70cc78463e92d9972da6a74f70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTime</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>afe673269f4d344f74bef467804b76886</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mFrame</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>abff4aab9c284d535ae96aa0635515071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>constraint::ConstraintSolver *</type>
      <name>mConstraintSolver</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>a0fc64a7f541b3b15658c3e2a72f8a3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Recording *</type>
      <name>mRecording</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>aefb693f716a3b86e241df77ba80b4d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NameChangedSignal</type>
      <name>mNameChangedSignal</name>
      <anchorfile>d7/d41/classdart_1_1simulation_1_1World.html</anchorfile>
      <anchor>ac0f95fe4b02f62e599166c42f0f93e81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::utils</name>
    <filename>d8/d28/namespacedart_1_1utils.html</filename>
    <namespace>dart::utils::urdf_parsing</namespace>
    <class kind="struct">dart::utils::c3d_head_t</class>
    <class kind="struct">dart::utils::c3d_param_t</class>
    <class kind="struct">dart::utils::c3d_frameSI_t</class>
    <class kind="struct">dart::utils::c3d_frame_t</class>
    <class kind="class">dart::utils::CompositeResourceRetriever</class>
    <class kind="class">dart::utils::FileInfoC3D</class>
    <class kind="class">dart::utils::FileInfoDof</class>
    <class kind="class">dart::utils::FileInfoWorld</class>
    <class kind="class">dart::utils::PackageResourceRetriever</class>
    <class kind="class">dart::utils::ElementEnumerator</class>
    <class kind="class">dart::utils::SdfParser</class>
    <class kind="class">dart::utils::SoftSdfParser</class>
    <class kind="struct">dart::utils::DofProxy</class>
    <class kind="class">dart::utils::SkelParser</class>
    <class kind="class">dart::utils::DartLoader</class>
    <member kind="typedef">
      <type>struct dart::utils::c3d_head_t</type>
      <name>c3d_head</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a3def68c5794a81e2309c716b523c6fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dart::utils::c3d_param_t</type>
      <name>c3d_param</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad95ee720fe5a2e7f47f18ad92593990c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dart::utils::c3d_frameSI_t</type>
      <name>c3d_frameSI</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a3d23a7d5dab1c15d3db9070bc56da5ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct dart::utils::c3d_frame_t</type>
      <name>c3d_frame</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a79fae4bb8e83049b9ba12b3c4be507bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; CompositeResourceRetriever &gt;</type>
      <name>CompositeResourceRetrieverPtr</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a02b215ff0eb5b6981a9effd2e3b121b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; PackageResourceRetriever &gt;</type>
      <name>PackageResourceRetrieverPtr</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a8192795044e4474bdecb0daf5c3a3b71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NextResult</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4615d94670cb9a8340ba253911c9584a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>VALID</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4615d94670cb9a8340ba253911c9584aac2971741cb0cd9f48cff28f70e970c10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONTINUE</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4615d94670cb9a8340ba253911c9584aa5559cfc6a9e39c00e71c65ab5d1ebf52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BREAK</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4615d94670cb9a8340ba253911c9584aac31e12ac7858cf846123437330409641</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CREATE_FREEJOINT_ROOT</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4615d94670cb9a8340ba253911c9584aa02ebbbb0881979114d75b6ae9e3a1693</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>ConvertDecToFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1a57a1c34d5570d6f29ea403dda63bda</anchor>
      <arglist>(char _bytes[4])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConvertFloatToDec</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a382485bd8b4a45bf55dc17c6a3cfbc25</anchor>
      <arglist>(float _f, char *_bytes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadC3DFile</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a5586cfbff35b11bd8149efbf7f20930a</anchor>
      <arglist>(const char *_fileName, Eigen::EIGEN_VV_VEC3D &amp;_pointData, int *_nFrame, int *_nMarker, double *_freq)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveC3DFile</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad4eded9eaef066f1a4fe617e940af2a5</anchor>
      <arglist>(const char *_fileName, Eigen::EIGEN_VV_VEC3D &amp;_pointData, int _nFrame, int _nMarker, double _freq)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>convertDecToFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aee22589a8d85518529348c2db8f2763e</anchor>
      <arglist>(char _bytes[4])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertFloatToDec</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1cb5c82f6b3724ff3b2023dc5d9d9f29</anchor>
      <arglist>(float _f, char *_bytes)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxElem</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a5dbbb30d1a7a53f8a3e26a7499835cc5</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;_arr, int &amp;_index)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>minElem</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac2f5aa6f573bb22953845671feb6a70c</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;_arr, int &amp;_index)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1b34e2266484324f1417d4226c70457a</anchor>
      <arglist>(bool _v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac0045163e6de06687392492b76a90982</anchor>
      <arglist>(int _v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a98951cf43149ae7e2a780f4ff03b64ea</anchor>
      <arglist>(unsigned int _v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>abf01e253eed36523fe8d72505b35dd44</anchor>
      <arglist>(float _v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a6833939c2b3b0f7d2304209a37769e2c</anchor>
      <arglist>(double _v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a9d37bf27a103909e5abece14bdd8c735</anchor>
      <arglist>(char _v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a2995c2dcb0f83bbd270ba163a02a89f4</anchor>
      <arglist>(const Eigen::Vector2d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a45e2e9d3aee166ab6914032c778eff5d</anchor>
      <arglist>(const Eigen::Vector3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ab0de436afc4afd5a9f82557404960dad</anchor>
      <arglist>(const Eigen::Vector3i &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1b933aa8f1988ba5bf6a23d46e069464</anchor>
      <arglist>(const Eigen::Vector6d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>af43136bbba82d5dbac5034cb2ae4f12e</anchor>
      <arglist>(const Eigen::VectorXd &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>acf5a708e849fa6d3e94dba3bf6e4324f</anchor>
      <arglist>(const Eigen::Isometry3d &amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toBool</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a659485a1e300a826fd942f2c70682cc9</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>toInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aac4984790c39bd7c49a2fda9584cb398</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>toUInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a0c535789d981d0d0d9ddea672a2e86d7</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>toFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a345fabff8db80bc5130069426c9526d1</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>toDouble</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a8898ea95454124450617bda816c964bf</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>toChar</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad6613a320b48e190f6964bbb09ae1bd8</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>toVector2d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>abe18b26db9233ea027ea3bef776d075d</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>toVector3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae1a82cacfc9f1c91a8d28b360bb64997</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3i</type>
      <name>toVector3i</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a731b2fc422c1638869b2b50d5fcba9a7</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>toVector6d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a608ad2461cdb0be1e3f77e39993c268c</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>toVectorXd</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ad2d09deadaca7d83fd72068a37c5a97b</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>toIsometry3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a7901ddc3932b7b4d847698ccb9125da0</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>toIsometry3dWithExtrinsicRotation</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae24cc400455d583e84c5ab0f09bfffb4</anchor>
      <arglist>(const std::string &amp;_str)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getValueString</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa5c6dc25de48775a0de17de7653c2150</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getValueBool</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a214157be76b325dcd17f80f8f519d040</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getValueInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a479495b1b62c7bdda0e33ee5ebf4fa76</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getValueUInt</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac3e3d86d2bf91164bd9d143aacc1c4e1</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getValueFloat</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae5ef0da98367024869ce7da46dc1eca3</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getValueDouble</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a4577abba1d81021d32185340af6f5c7c</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>getValueChar</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac744a2c7501213d7bb39327df4032fcf</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector2d</type>
      <name>getValueVector2d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ab06779013a1a43649d6acbce93b9f7a7</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getValueVector3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a481966f03ae3e71fdc05b780ffbc1290</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3i</type>
      <name>getValueVector3i</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa3c7147db1299ae932ef30f4be0604a6</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector6d</type>
      <name>getValueVector6d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac27f0a57398cc8c5bab9370d9ef8e326</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getValueVectorXd</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aff0f194e5ccc3ec7612d96a8b9f574a4</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getValueVec3</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a9a95a42e3c601efbeb109689c5e58168</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getValueIsometry3d</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>abf9d85028e23e7509fe4cf943f4a76bb</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>Eigen::Isometry3d</type>
      <name>getValueIsometry3dWithExtrinsicRotation</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aa7d9f73f3951f82f5c7f4b112829d4cf</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a0ae82898f2f145b583baf7ed0685fd08</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>tinyxml2::XMLElement *</type>
      <name>getElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a22b3f522f35d1ab54d19d1c83a35874d</anchor>
      <arglist>(tinyxml2::XMLElement *_parentElement, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>openXMLFile</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>afe1120e09bf0b63fc36534111a78aef7</anchor>
      <arglist>(tinyxml2::XMLDocument &amp;doc, const common::Uri &amp;uri, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAttribute</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a026d75f4787ac5d023b0bcca062005c2</anchor>
      <arglist>(tinyxml2::XMLElement *element, const char *const name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getAttribute</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a58942c589535c4d34afdc5458dbb105b</anchor>
      <arglist>(tinyxml2::XMLElement *element, const char *const name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAttribute</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>acc1b51980d8ca734760d0e92cb419cc6</anchor>
      <arglist>(tinyxml2::XMLElement *element, const char *const name, double *d)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>reportMissingElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aefcc208cfca7633c72f311da0e4c1ec2</anchor>
      <arglist>(const std::string &amp;functionName, const std::string &amp;elementName, const std::string &amp;objectType, const std::string &amp;objectName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>readAxisElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>aaa451b1fb5fb5ee8d0b494e70d77f247</anchor>
      <arglist>(tinyxml2::XMLElement *axisElement, const Eigen::Isometry3d &amp;_parentModelFrame, Eigen::Vector3d &amp;axis, double &amp;lower, double &amp;upper, double &amp;initial, double &amp;rest, double &amp;damping)</arglist>
    </member>
    <member kind="function">
      <type>common::ResourceRetrieverPtr</type>
      <name>getResourceRetriever</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac76519a694525c123544da68f21e7f50</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tinyxml2::XMLElement *</type>
      <name>checkFormatAndGetWorldElement</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a751d65746eeed6b73b6cd96508eda14b</anchor>
      <arglist>(tinyxml2::XMLDocument &amp;_document)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NextResult</type>
      <name>getNextJointAndNodePair</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ab275d434d55b631fd43f3926e1cf9b20</anchor>
      <arglist>(SkelParser::JointMap::iterator &amp;it, SkelParser::BodyMap::const_iterator &amp;child, dynamics::BodyNode *&amp;parent, const dynamics::SkeletonPtr skeleton, SkelParser::JointMap &amp;joints, const SkelParser::BodyMap &amp;bodyNodes)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; dynamics::Joint *, dynamics::BodyNode * &gt;</type>
      <name>createJointAndNodePair</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a6975963546d4f1e242bfa800132b52ad</anchor>
      <arglist>(dynamics::SkeletonPtr skeleton, dynamics::BodyNode *parent, const SkelParser::SkelJoint &amp;joint, const typename BodyType::Properties &amp;body)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createJointAndNodePair</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a42e0b608e37761de56ed4043f271479c</anchor>
      <arglist>(dynamics::SkeletonPtr skeleton, dynamics::BodyNode *parent, const SkelParser::SkelJoint &amp;joint, const SkelParser::SkelBodyNode &amp;body)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getDofAttributeIfItExists</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a7b853441bc656ba4cc49855258fce8ff</anchor>
      <arglist>(const std::string &amp;_attribute, double *_value, const std::string &amp;_element_type, const tinyxml2::XMLElement *_xmlElement, const std::string &amp;_jointName, size_t _index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDofLimitAttributes</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>adc0a25784ec5728c93b4db6946dd3594</anchor>
      <arglist>(tinyxml2::XMLElement *_dofElement, const std::string &amp;_element_type, const std::string &amp;_jointName, size_t _index, double *lower, double *upper, double *initial)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>readAllDegreesOfFreedom</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a47aeb94703b27e22cf583e7076217f43</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, PropertyType &amp;_properties, SkelParser::SkelJoint &amp;_joint, const std::string &amp;_jointName, size_t _numDofs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>readDegreeOfFreedom</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a1d2fceeca840fef69524ae18e03f6466</anchor>
      <arglist>(tinyxml2::XMLElement *_dofElement, PropertyType &amp;properties, SkelParser::SkelJoint &amp;joint, const std::string &amp;jointName, size_t numDofs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>readJointDynamicsAndLimit</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ab74efd6dcce1cf638c59dda90a041623</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, PropertyType &amp;_properties, SkelParser::SkelJoint &amp;_joint, const std::string &amp;_name, size_t _numAxis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaterial</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a320bbecab2e2cd9add2ccec54405cb99</anchor>
      <arglist>(dynamics::ShapePtr _shape, const urdf::Visual *_viz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaterial</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>a08dc494f272096d7509e83e0b9633eab</anchor>
      <arglist>(dynamics::ShapePtr _shape, const urdf::Collision *_col)</arglist>
    </member>
    <member kind="function">
      <type>template dynamics::ShapePtr</type>
      <name>DartLoader::createShape&lt; urdf::Visual &gt;</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ac48712a52ea3a23fd68dc73a0539f23f</anchor>
      <arglist>(const urdf::Visual *_vizOrCol, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function">
      <type>template dynamics::ShapePtr</type>
      <name>DartLoader::createShape&lt; urdf::Collision &gt;</name>
      <anchorfile>d8/d28/namespacedart_1_1utils.html</anchorfile>
      <anchor>ae0dccbcd41c0661ed42f77f0835ab004</anchor>
      <arglist>(const urdf::Collision *_vizOrCol, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::utils::c3d_head_t</name>
    <filename>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>prec_start</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>ad2b77b4d9bb62833851054aeffb48a57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>key</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>ad0e2ddb63516ef2e488e0e9100a83970</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>pnt_cnt</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>a7d805ed7c61da628d09a5c5eb48c1487</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>a_channels</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>aa61315b2473f5b7d24efb653bc85d410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>start_frame</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>a1472a0bb76e90430f31f9f0b5130186c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>end_frame</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>aa43f91e9beb30861a7f5de16fcab4913</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>int_gap</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>a359b415fbbe538d59d485c799f67edfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>scale</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>ae42705591a5f93213b4ad395f5a0d537</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>rec_start</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>aec6fbcdcbc10791c792ecdd080f8f881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>a_frames</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>ad4db586f54e8e837bf4bfbd1675454f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>freq</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>a603abb565a9057c7fd78baf1a616bb5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>stuff</name>
      <anchorfile>d1/d1f/structdart_1_1utils_1_1c3d__head__t.html</anchorfile>
      <anchor>a05723c903b65bf2377bc92c3cbd331a1</anchor>
      <arglist>[244]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::utils::c3d_param_t</name>
    <filename>df/d7a/structdart_1_1utils_1_1c3d__param__t.html</filename>
    <member kind="variable">
      <type>unsigned char</type>
      <name>reserved</name>
      <anchorfile>df/d7a/structdart_1_1utils_1_1c3d__param__t.html</anchorfile>
      <anchor>a3f1790944ef19d5337e510a5fa067eae</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>pblocks</name>
      <anchorfile>df/d7a/structdart_1_1utils_1_1c3d__param__t.html</anchorfile>
      <anchor>a91e8c2d6d63d2605fd1ed4a0cd580982</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>ftype</name>
      <anchorfile>df/d7a/structdart_1_1utils_1_1c3d__param__t.html</anchorfile>
      <anchor>aa17b055263b61c1829b9044c61cd94af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>stuff</name>
      <anchorfile>df/d7a/structdart_1_1utils_1_1c3d__param__t.html</anchorfile>
      <anchor>aaba01eab1453e25b50ef2442b5f15b97</anchor>
      <arglist>[C3D_REC_SIZE-4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::utils::c3d_frameSI_t</name>
    <filename>d7/d14/structdart_1_1utils_1_1c3d__frameSI__t.html</filename>
    <member kind="variable">
      <type>short</type>
      <name>x</name>
      <anchorfile>d7/d14/structdart_1_1utils_1_1c3d__frameSI__t.html</anchorfile>
      <anchor>ada8d17aae483c8ae47f0da829b16424f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>y</name>
      <anchorfile>d7/d14/structdart_1_1utils_1_1c3d__frameSI__t.html</anchorfile>
      <anchor>a917dd01b44900daddc0b74fb51e5ca8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>short</type>
      <name>z</name>
      <anchorfile>d7/d14/structdart_1_1utils_1_1c3d__frameSI__t.html</anchorfile>
      <anchor>a502b6b61538cfbf9307056c854486109</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>cam_byte</name>
      <anchorfile>d7/d14/structdart_1_1utils_1_1c3d__frameSI__t.html</anchorfile>
      <anchor>a056efb1734172f68139f9c60808e833d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>residual</name>
      <anchorfile>d7/d14/structdart_1_1utils_1_1c3d__frameSI__t.html</anchorfile>
      <anchor>a656004eddcff29185b6dee20664d8651</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::utils::c3d_frame_t</name>
    <filename>d9/d92/structdart_1_1utils_1_1c3d__frame__t.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>d9/d92/structdart_1_1utils_1_1c3d__frame__t.html</anchorfile>
      <anchor>ae158cfea924f7a4aedf0839d8588c485</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>d9/d92/structdart_1_1utils_1_1c3d__frame__t.html</anchorfile>
      <anchor>aa99173542b07a1accecbf0dcf792e055</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>z</name>
      <anchorfile>d9/d92/structdart_1_1utils_1_1c3d__frame__t.html</anchorfile>
      <anchor>aed040cb4587b65330081d27972903ea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>residual</name>
      <anchorfile>d9/d92/structdart_1_1utils_1_1c3d__frame__t.html</anchorfile>
      <anchor>a3508d8b223329f1c1e8fa7fa14ffdb48</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::CompositeResourceRetriever</name>
    <filename>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</filename>
    <base virtualness="virtual">dart::common::ResourceRetriever</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CompositeResourceRetriever</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a85272fa7d8d5b1a94d35ac1647198c90</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDefaultRetriever</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a201f12aac4d844c35ac25cddf5960f38</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addSchemaRetriever</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a11c3e8e39dabcef23f46a29fd24aa778</anchor>
      <arglist>(const std::string &amp;_schema, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a98cee7096982c0dc472301566d54bb56</anchor>
      <arglist>(const common::Uri &amp;_uri) override</arglist>
    </member>
    <member kind="function">
      <type>common::ResourcePtr</type>
      <name>retrieve</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>ac3ebe91c37dd635c68d404adc4203c14</anchor>
      <arglist>(const common::Uri &amp;_uri) override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; common::ResourceRetrieverPtr &gt;</type>
      <name>getRetrievers</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a58f9f6c8751947cc1f7daa64be2a6adc</anchor>
      <arglist>(const common::Uri &amp;_uri) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::vector&lt; common::ResourceRetrieverPtr &gt; &gt;</type>
      <name>mResourceRetrievers</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a516393a97215a713d76bd91a98977411</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; common::ResourceRetrieverPtr &gt;</type>
      <name>mDefaultResourceRetrievers</name>
      <anchorfile>da/da5/classdart_1_1utils_1_1CompositeResourceRetriever.html</anchorfile>
      <anchor>a934eebde3862477791421c629642609e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::FileInfoC3D</name>
    <filename>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</filename>
    <member kind="function">
      <type></type>
      <name>FileInfoC3D</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>ac97cf8308be104cd3ef76ec2addb59be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FileInfoC3D</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>a2deee3c842e8b1a05c4f14e61db7a1cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumMarkers</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>ada484dcffafabfb4c607d9c8b2000b89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumFrames</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>a4e7edc0223898588f6c82827258b0f6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFPS</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>ae6617be3210ba24f656a1f23924f4ac1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::Vector3d</type>
      <name>getDataAt</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>a43e2a31cee5dc5c539d2ad452be66300</anchor>
      <arglist>(int _frame, int _idx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addData</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>ada3f1bdd5cc52b32d6c254c029a843b7</anchor>
      <arglist>(const Eigen::EIGEN_V_VEC3D &amp;_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>loadFile</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>adc084e88c1ee3b86576a0f271e87563f</anchor>
      <arglist>(const char *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>saveFile</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>ad57ecdce2165bbccc1618b21759fc0b9</anchor>
      <arglist>(const char *, int _start, int _end, double _sampleRate=1)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mNumMarkers</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>a08647a34dbc8f0e7f34597b185681a17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mNumFrames</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>aef269a648b2171027858aa2ad41915a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Eigen::EIGEN_VV_VEC3D</type>
      <name>mData</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>a58260ec88fb72f4e6efe63f4ab8553bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mFPS</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>ad1f1a05f7b2fb25b77f61cdd9743bd14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>mFileName</name>
      <anchorfile>de/db6/classdart_1_1utils_1_1FileInfoC3D.html</anchorfile>
      <anchor>ab0f94892d2f92893667aa0e2bda1490a</anchor>
      <arglist>[256]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::FileInfoDof</name>
    <filename>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</filename>
    <member kind="function">
      <type></type>
      <name>FileInfoDof</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a19eb607103244cafe8752640d965641b</anchor>
      <arglist>(dynamics::Skeleton *_skel, double _fps=120.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FileInfoDof</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>aa9e3a3a68ea1b9222130e2296f518783</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadFile</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a94d9636b3b4fb8e847671bb09a8bca1a</anchor>
      <arglist>(const char *_fileName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveFile</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a840b7e9b21693b21c30e29a9afd07154</anchor>
      <arglist>(const char *_fileName, size_t _start, size_t _end, double _sampleRate=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDof</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a42e382ca8d929d60807b946f17f41e1a</anchor>
      <arglist>(const Eigen::VectorXd &amp;_dofs)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDofAt</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a3d1fd2ea5b2393cbffb22b40a99372b1</anchor>
      <arglist>(size_t _frame, size_t _id) const </arglist>
    </member>
    <member kind="function">
      <type>Eigen::VectorXd</type>
      <name>getPoseAtFrame</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a095803e056b8421ea6caf67a19fdd104</anchor>
      <arglist>(int _frame) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFPS</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a52d51aca3f9940fc341d0a47e6e8a4e3</anchor>
      <arglist>(double _fps)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFPS</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a0008ea1cea4ce2ca5a71484695d3c736</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumFrames</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>aeec061c8de04c42c2b3ea15011db2eca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>dynamics::Skeleton *</type>
      <name>getSkel</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>ac797aa9acc3112099d2fa103f213dd21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>dynamics::Skeleton *</type>
      <name>mSkel</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a36e305c83799f754a38546e121d7e576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mFPS</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a5f8d54438cdb4e8dd34f2c16291d5f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>mNumFrames</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a5652fab625cf5d741a2c3e1f2a0c0121</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>mFileName</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>ae88ede7a7a0b8812febd7269fb317d79</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Eigen::VectorXd &gt;</type>
      <name>mDofs</name>
      <anchorfile>d9/dbf/classdart_1_1utils_1_1FileInfoDof.html</anchorfile>
      <anchor>a501aad9f9adf5a8bb8b562af6c2f29d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::FileInfoWorld</name>
    <filename>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</filename>
    <member kind="function">
      <type></type>
      <name>FileInfoWorld</name>
      <anchorfile>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</anchorfile>
      <anchor>aba43add1c6200235e265c02702e51dff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FileInfoWorld</name>
      <anchorfile>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</anchorfile>
      <anchor>ae465ad3637493134b9339abe3034fe76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadFile</name>
      <anchorfile>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</anchorfile>
      <anchor>ab212dd2783b7809e70c17c19dab1eef5</anchor>
      <arglist>(const char *_fileName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveFile</name>
      <anchorfile>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</anchorfile>
      <anchor>a5e514a30d00f7012a359a7ce5c2dd967</anchor>
      <arglist>(const char *_fileName, simulation::Recording *_record)</arglist>
    </member>
    <member kind="function">
      <type>simulation::Recording *</type>
      <name>getRecording</name>
      <anchorfile>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</anchorfile>
      <anchor>a13812052ba4c248f114b823505f0b94a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>mFileName</name>
      <anchorfile>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</anchorfile>
      <anchor>a2025a7b17a046acc2393fe00d613aa71</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>simulation::Recording *</type>
      <name>mRecord</name>
      <anchorfile>d8/db2/classdart_1_1utils_1_1FileInfoWorld.html</anchorfile>
      <anchor>a2b5306d96023cad9800f9ef988869555</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::PackageResourceRetriever</name>
    <filename>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</filename>
    <base virtualness="virtual">dart::common::ResourceRetriever</base>
    <member kind="function">
      <type></type>
      <name>PackageResourceRetriever</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>abb4c74ac7d6f15f612fd9ba00ad8b97d</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;_localRetriever=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PackageResourceRetriever</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a4169130db19c1c4200fe316afbc6befc</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPackageDirectory</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a252db2d0346dc20ddb9eda44bab76cc1</anchor>
      <arglist>(const std::string &amp;_packageName, const std::string &amp;_packageDirectory)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a565a38bb690d63fdd25f1a1affcc907c</anchor>
      <arglist>(const common::Uri &amp;_uri) override</arglist>
    </member>
    <member kind="function">
      <type>common::ResourcePtr</type>
      <name>retrieve</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a4f19c0190dd81d8acf1c5f2a1433ec92</anchor>
      <arglist>(const common::Uri &amp;_uri) override</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>getPackagePaths</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a8d6cc8993491f0c25a0a843f8de04754</anchor>
      <arglist>(const std::string &amp;_packageName) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>resolvePackageUri</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a88ea5ca9ec7c3ca133068baa4ba2bb0d</anchor>
      <arglist>(const common::Uri &amp;_uri, std::string &amp;_packageName, std::string &amp;_relativePath) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>common::ResourceRetrieverPtr</type>
      <name>mLocalRetriever</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>ad56d953a1c1e345b7c052addf9b2261e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::vector&lt; std::string &gt; &gt;</type>
      <name>mPackageMap</name>
      <anchorfile>d8/d23/classdart_1_1utils_1_1PackageResourceRetriever.html</anchorfile>
      <anchor>a1400f414fb9544de0c88795739a76ea2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::ElementEnumerator</name>
    <filename>dd/dc3/classdart_1_1utils_1_1ElementEnumerator.html</filename>
    <member kind="function">
      <type></type>
      <name>ElementEnumerator</name>
      <anchorfile>dd/dc3/classdart_1_1utils_1_1ElementEnumerator.html</anchorfile>
      <anchor>a534b66b3740f1fe3819309d5c2cc8e5b</anchor>
      <arglist>(tinyxml2::XMLElement *_parent, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ElementEnumerator</name>
      <anchorfile>dd/dc3/classdart_1_1utils_1_1ElementEnumerator.html</anchorfile>
      <anchor>a8bcea8ddd0b6c1a8cfbfbd7401659ce0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>dd/dc3/classdart_1_1utils_1_1ElementEnumerator.html</anchorfile>
      <anchor>a0d32d921520b07906fc580c8b0dfe478</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>next</name>
      <anchorfile>dd/dc3/classdart_1_1utils_1_1ElementEnumerator.html</anchorfile>
      <anchor>a00f73b9ca7f10c1071c35a9038155ba2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tinyxml2::XMLElement *</type>
      <name>get</name>
      <anchorfile>dd/dc3/classdart_1_1utils_1_1ElementEnumerator.html</anchorfile>
      <anchor>a8657e9a6151230a7ed06d9ca6cb55843</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tinyxml2::XMLElement *</type>
      <name>operator-&gt;</name>
      <anchorfile>dd/dc3/classdart_1_1utils_1_1ElementEnumerator.html</anchorfile>
      <anchor>ab8b274d3269a9a5548f168d64c53fd22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tinyxml2::XMLElement &amp;</type>
      <name>operator*</name>
      <anchorfile>dd/dc3/classdart_1_1utils_1_1ElementEnumerator.html</anchorfile>
      <anchor>a4b69ba912dc9468f67292a45da32052d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>dd/dc3/classdart_1_1utils_1_1ElementEnumerator.html</anchorfile>
      <anchor>aa6527f76f9ed2b93b8b6aad35637f8ee</anchor>
      <arglist>(const ElementEnumerator &amp;_rhs) const </arglist>
    </member>
    <member kind="function">
      <type>ElementEnumerator &amp;</type>
      <name>operator=</name>
      <anchorfile>dd/dc3/classdart_1_1utils_1_1ElementEnumerator.html</anchorfile>
      <anchor>ab724c8cfea8a9c21b24a02fbb19a7db0</anchor>
      <arglist>(const ElementEnumerator &amp;_rhs)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_name</name>
      <anchorfile>dd/dc3/classdart_1_1utils_1_1ElementEnumerator.html</anchorfile>
      <anchor>a026adb3736de381aa71fd44e983fd0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tinyxml2::XMLElement *</type>
      <name>m_parent</name>
      <anchorfile>dd/dc3/classdart_1_1utils_1_1ElementEnumerator.html</anchorfile>
      <anchor>a57bbb9c88308ad8027bb3b5b399a6bf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tinyxml2::XMLElement *</type>
      <name>m_current</name>
      <anchorfile>dd/dc3/classdart_1_1utils_1_1ElementEnumerator.html</anchorfile>
      <anchor>a353a0cc7c041e140fbb0f8519e6f12bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::SdfParser</name>
    <filename>d2/d42/classdart_1_1utils_1_1SdfParser.html</filename>
    <class kind="struct">dart::utils::SdfParser::SDFBodyNode</class>
    <class kind="struct">dart::utils::SdfParser::SDFJoint</class>
    <member kind="enumeration">
      <type></type>
      <name>NextResult</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a87dc15818fc719447fd863ea8cff14a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>VALID</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a87dc15818fc719447fd863ea8cff14a8ae7390a14ec5610e35ac2092caef651fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CONTINUE</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a87dc15818fc719447fd863ea8cff14a8ab9ce85f7a3ccca36500c90ff29cb6b72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BREAK</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a87dc15818fc719447fd863ea8cff14a8ab096063662791b655535338fa23089de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CREATE_FREEJOINT_ROOT</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a87dc15818fc719447fd863ea8cff14a8aad9cf0b55e6b8b86a2cb6f812f62f237</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; dynamics::BodyNode::Properties &gt;</type>
      <name>BodyPropPtr</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a085481d77e1f7be1d1a320ee069d5f53</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; dynamics::Joint::Properties &gt;</type>
      <name>JointPropPtr</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a46b1adbc11a87566bfe9534d8586dd1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::aligned_map&lt; std::string, SDFBodyNode &gt;</type>
      <name>BodyMap</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a15d27ebd5d2405a6cca68b527f898495</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, SDFJoint &gt;</type>
      <name>JointMap</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a734d0081510a6f86d14f88beaf57ede0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dart::simulation::WorldPtr</type>
      <name>readSdfFile</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a4b9dbfad7d8dd66fd985fe5f254320ce</anchor>
      <arglist>(const common::Uri &amp;_fileUri, const common::ResourceRetrieverPtr &amp;_retriever=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static simulation::WorldPtr</type>
      <name>readSdfFile</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>ac04738d68024f986a2030daa8d49b86f</anchor>
      <arglist>(const common::Uri &amp;_fileUri, const common::ResourceRetrieverPtr &amp;_retriever, std::function&lt; simulation::WorldPtr(tinyxml2::XMLElement *, const std::string &amp;, const common::ResourceRetrieverPtr &amp;)&gt; xmlReader)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::SkeletonPtr</type>
      <name>readSkeleton</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a6f26ea7266f450f4827c98f453747369</anchor>
      <arglist>(const common::Uri &amp;_fileUri, const common::ResourceRetrieverPtr &amp;_retriever=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::SkeletonPtr</type>
      <name>readSkeleton</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a090f81e0639d80eb35946fd98299951d</anchor>
      <arglist>(const common::Uri &amp;_fileUri, const common::ResourceRetrieverPtr &amp;_retriever, std::function&lt; dynamics::SkeletonPtr(tinyxml2::XMLElement *, const std::string &amp;, const common::ResourceRetrieverPtr &amp;)&gt; xmlReader)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static simulation::WorldPtr</type>
      <name>readWorld</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>aba17852fac5b4bf97d621b9b921ccfea</anchor>
      <arglist>(tinyxml2::XMLElement *_worldElement, const std::string &amp;_skelPath, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static simulation::WorldPtr</type>
      <name>readWorld</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a0e2a66f9a80725fc767e88e9def0c0ed</anchor>
      <arglist>(tinyxml2::XMLElement *_worldElement, const std::string &amp;_skelPath, const common::ResourceRetrieverPtr &amp;_retriever, std::function&lt; dynamics::SkeletonPtr(tinyxml2::XMLElement *, const std::string &amp;, const common::ResourceRetrieverPtr &amp;)&gt; skeletonReader)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>readPhysics</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a2ff78cb3e9feadc411eb8f19e73edeb8</anchor>
      <arglist>(tinyxml2::XMLElement *_physicsElement, simulation::WorldPtr _world)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::SkeletonPtr</type>
      <name>readSkeleton</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>ad9356768f1d16cc28a8935a27d599354</anchor>
      <arglist>(tinyxml2::XMLElement *_skeletonElement, const std::string &amp;_skelPath, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::SkeletonPtr</type>
      <name>readSkeleton</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>aa0377ac847917665b051df2d614e1158</anchor>
      <arglist>(tinyxml2::XMLElement *_skeletonElement, const std::string &amp;_skelPath, const common::ResourceRetrieverPtr &amp;_retriever, std::function&lt; SDFBodyNode(tinyxml2::XMLElement *, const Eigen::Isometry3d &amp;, const std::string &amp;, const common::ResourceRetrieverPtr &amp;)&gt; bodyReader, std::function&lt; bool(dynamics::SkeletonPtr, dynamics::BodyNode *, const SDFJoint &amp;, const SDFBodyNode &amp;)&gt; pairCreator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>createPair</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>ae81742d117be83f12ae831dd72232ea4</anchor>
      <arglist>(dynamics::SkeletonPtr skeleton, dynamics::BodyNode *parent, const SDFJoint &amp;newJoint, const SDFBodyNode &amp;newBody)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NextResult</type>
      <name>getNextJointAndNodePair</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a827f6416a66671d0b3b248fdf7f90c4b</anchor>
      <arglist>(BodyMap::iterator &amp;body, JointMap::const_iterator &amp;parentJoint, dynamics::BodyNode *&amp;parentBody, const dynamics::SkeletonPtr skeleton, BodyMap &amp;sdfBodyNodes, const JointMap &amp;sdfJoints)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::SkeletonPtr</type>
      <name>makeSkeleton</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a3fe7242b35216de4146a961bde8e8347</anchor>
      <arglist>(tinyxml2::XMLElement *_skeletonElement, Eigen::Isometry3d &amp;skeletonFrame)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; dynamics::Joint *, dynamics::BodyNode * &gt;</type>
      <name>createJointAndNodePair</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a3935b436cdac3dc727bee84dba5cf824</anchor>
      <arglist>(dynamics::SkeletonPtr skeleton, dynamics::BodyNode *parent, const SDFJoint &amp;joint, const SDFBodyNode &amp;node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BodyMap</type>
      <name>readAllBodyNodes</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>abacd5be1d153c0d955a0b711f539b0ef</anchor>
      <arglist>(tinyxml2::XMLElement *_skeletonElement, const std::string &amp;_skelPath, const common::ResourceRetrieverPtr &amp;_retriever, const Eigen::Isometry3d &amp;skeletonFrame)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BodyMap</type>
      <name>readAllBodyNodes</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a20419ae6660b4c0d3998ec584a7b1b1d</anchor>
      <arglist>(tinyxml2::XMLElement *_skeletonElement, const std::string &amp;_skelPath, const common::ResourceRetrieverPtr &amp;_retriever, const Eigen::Isometry3d &amp;skeletonFrame, std::function&lt; SDFBodyNode(tinyxml2::XMLElement *, const Eigen::Isometry3d &amp;, const std::string &amp;, const common::ResourceRetrieverPtr &amp;)&gt; bodyReader)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SDFBodyNode</type>
      <name>readBodyNode</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a0b283069d5b166d6a51064a2c2b0488a</anchor>
      <arglist>(tinyxml2::XMLElement *_bodyNodeElement, const Eigen::Isometry3d &amp;_skeletonFrame, const std::string &amp;_skelPath, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::ShapePtr</type>
      <name>readShape</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a7cf7a09a07c765d856da390a386195cd</anchor>
      <arglist>(tinyxml2::XMLElement *_shapelement, const std::string &amp;_skelPath, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static JointMap</type>
      <name>readAllJoints</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a705ee4cefc3d8beee5a4f054ea2f0219</anchor>
      <arglist>(tinyxml2::XMLElement *_skeletonElement, const Eigen::Isometry3d &amp;skeletonFrame, const BodyMap &amp;sdfBodyNodes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SDFJoint</type>
      <name>readJoint</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>adaf99b6f9778206ba1c557ca4818f64b</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, const BodyMap &amp;_bodies, const Eigen::Isometry3d &amp;_skeletonFrame)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dart::dynamics::WeldJoint::Properties</type>
      <name>readWeldJoint</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a38bb235b11cb08d337865e15781fe9aa</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, const Eigen::Isometry3d &amp;_parentModelFrame, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::RevoluteJoint::Properties</type>
      <name>readRevoluteJoint</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a4edab5c477057b91153547297a535881</anchor>
      <arglist>(tinyxml2::XMLElement *_revoluteJointElement, const Eigen::Isometry3d &amp;_parentModelFrame, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::PrismaticJoint::Properties</type>
      <name>readPrismaticJoint</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a41afad2b4bf13e8877c06e4659eb77ed</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, const Eigen::Isometry3d &amp;_parentModelFrame, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::ScrewJoint::Properties</type>
      <name>readScrewJoint</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>af4208c611b481ebe1e9d81ca069ce51d</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, const Eigen::Isometry3d &amp;_parentModelFrame, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::UniversalJoint::Properties</type>
      <name>readUniversalJoint</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>aa9289e9d346a2a32f42ee226be3205b8</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, const Eigen::Isometry3d &amp;_parentModelFrame, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::BallJoint::Properties</type>
      <name>readBallJoint</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a076da827365b57c0b9f36c10aca92734</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, const Eigen::Isometry3d &amp;_parentModelFrame, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dart::dynamics::EulerJoint *</type>
      <name>readEulerJoint</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a33c2116d0844b30a007e9b195124ff0a</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, const Eigen::Isometry3d &amp;_parentModelFrame, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dart::dynamics::TranslationalJoint::Properties</type>
      <name>readTranslationalJoint</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>ad87762c8b7a8e6e9b145db358f5090f4</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, const Eigen::Isometry3d &amp;_parentModelFrame, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::FreeJoint::Properties</type>
      <name>readFreeJoint</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a247970c75176d9a9d2c33a6fae66ecb7</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, const Eigen::Isometry3d &amp;_parentModelFrame, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static common::ResourceRetrieverPtr</type>
      <name>getResourceRetriever</name>
      <anchorfile>d2/d42/classdart_1_1utils_1_1SdfParser.html</anchorfile>
      <anchor>a669f8de51abef9bd92a6949fb69e1e54</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::utils::SdfParser::SDFBodyNode</name>
    <filename>d2/da2/structdart_1_1utils_1_1SdfParser_1_1SDFBodyNode.html</filename>
    <member kind="variable">
      <type>BodyPropPtr</type>
      <name>properties</name>
      <anchorfile>d2/da2/structdart_1_1utils_1_1SdfParser_1_1SDFBodyNode.html</anchorfile>
      <anchor>a7087ef02ba3b261069f8d9e6f9c0ae6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Isometry3d</type>
      <name>initTransform</name>
      <anchorfile>d2/da2/structdart_1_1utils_1_1SdfParser_1_1SDFBodyNode.html</anchorfile>
      <anchor>ad87d6d1acbffaed8319e208720c372b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>d2/da2/structdart_1_1utils_1_1SdfParser_1_1SDFBodyNode.html</anchorfile>
      <anchor>ac035c70e8ade8ef49a5664b69e358201</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::utils::SdfParser::SDFJoint</name>
    <filename>d6/d4b/structdart_1_1utils_1_1SdfParser_1_1SDFJoint.html</filename>
    <member kind="variable">
      <type>JointPropPtr</type>
      <name>properties</name>
      <anchorfile>d6/d4b/structdart_1_1utils_1_1SdfParser_1_1SDFJoint.html</anchorfile>
      <anchor>a8c60042d0a35d55568caaad577f01730</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>parentName</name>
      <anchorfile>d6/d4b/structdart_1_1utils_1_1SdfParser_1_1SDFJoint.html</anchorfile>
      <anchor>aa9a4ca59037389d9d9fb40a5604b0115</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>childName</name>
      <anchorfile>d6/d4b/structdart_1_1utils_1_1SdfParser_1_1SDFJoint.html</anchorfile>
      <anchor>a0f6a641433db477d61cb86b3cb392fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>d6/d4b/structdart_1_1utils_1_1SdfParser_1_1SDFJoint.html</anchorfile>
      <anchor>acf08ba9a124887bdc5908c010c09671e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::SoftSdfParser</name>
    <filename>d6/d87/classdart_1_1utils_1_1SoftSdfParser.html</filename>
    <base>dart::utils::SdfParser</base>
    <member kind="function" static="yes">
      <type>static simulation::WorldPtr</type>
      <name>readSoftSdfFile</name>
      <anchorfile>d6/d87/classdart_1_1utils_1_1SoftSdfParser.html</anchorfile>
      <anchor>a462fda6982a8af91cbd97f1da205a1a9</anchor>
      <arglist>(const common::Uri &amp;_fileUri, const common::ResourceRetrieverPtr &amp;_retriever=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::SkeletonPtr</type>
      <name>readSkeleton</name>
      <anchorfile>d6/d87/classdart_1_1utils_1_1SoftSdfParser.html</anchorfile>
      <anchor>ae2c56bb7f7ef573572e12c7b7362dadd</anchor>
      <arglist>(const common::Uri &amp;_fileName, const common::ResourceRetrieverPtr &amp;_retriever=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>createSoftPair</name>
      <anchorfile>d6/d87/classdart_1_1utils_1_1SoftSdfParser.html</anchorfile>
      <anchor>a6d1dfd3e0619264315431cf941003724</anchor>
      <arglist>(dynamics::SkeletonPtr skeleton, dynamics::BodyNode *parent, const SDFJoint &amp;newJoint, const SDFBodyNode &amp;newBody)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static simulation::WorldPtr</type>
      <name>readWorld</name>
      <anchorfile>d6/d87/classdart_1_1utils_1_1SoftSdfParser.html</anchorfile>
      <anchor>acd5fdc200bb98ee57582b4296b544441</anchor>
      <arglist>(tinyxml2::XMLElement *_worldElement, const std::string &amp;_skelPath, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::SkeletonPtr</type>
      <name>readSkeleton</name>
      <anchorfile>d6/d87/classdart_1_1utils_1_1SoftSdfParser.html</anchorfile>
      <anchor>a7fbd2a0120888facc97d019fe1bb6f8e</anchor>
      <arglist>(tinyxml2::XMLElement *_skeletonElement, const std::string &amp;_skelPath, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SDFBodyNode</type>
      <name>readSoftBodyNode</name>
      <anchorfile>d6/d87/classdart_1_1utils_1_1SoftSdfParser.html</anchorfile>
      <anchor>a7f8fdb14a248fde0698bf48cb7f6e28e</anchor>
      <arglist>(tinyxml2::XMLElement *_softBodyNodeElement, const Eigen::Isometry3d &amp;_skeletonFrame, const std::string &amp;_skelPath, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::utils::DofProxy</name>
    <filename>df/d22/structdart_1_1utils_1_1DofProxy.html</filename>
    <member kind="function">
      <type></type>
      <name>DofProxy</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>a5d280944d5a6ecf1157ea7590bb070e4</anchor>
      <arglist>(dynamics::SingleDofJoint::Properties &amp;properties, SkelParser::SkelJoint &amp;joint, size_t _index, const std::string &amp;jointName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DofProxy</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>a8ccad4ff0d81230242a74a33b0c921d3</anchor>
      <arglist>(PropertyType &amp;properties, SkelParser::SkelJoint &amp;joint, size_t _index, const std::string &amp;jointName)</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>index</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>ad30ddc8bb910183512dfc9ea4ffd71b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>a03c39458f8a59d86cb952e731e03e24e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>lowerPosition</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>ae82c7402047e01008ce844429542ef30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>upperPosition</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>a69306d06f2a7616276fc86908edf9f12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>initalPosition</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>a047302627b0348167e3a2012c99bba7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>lowerVelocity</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>a636aa62e1cdcfdbfa78685b1694c7934</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>upperVelocity</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>ab2b99c3a4cc10fcfbe1d58e165ac74dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>initialVelocity</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>a8770344d78c3174a37a1c0c54ed1b64a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>lowerAcceleration</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>a5e4d9ffa99e56f536a0eff055b87908f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>upperAcceleration</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>a85662bdfaea537e1629a2eca9755cd39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>initialAcceleration</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>aef6ce699d6debbb750535dd2a9479de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>lowerForce</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>ad3a251386f68d3ac189b421a46f574f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>upperForce</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>a57e99fdb8d6901504b1da74dfd111afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>initialForce</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>a6c21bc98930e4368d835c5c4132270dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>springStiffness</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>ad456b616288ce13d0f9c4c6680317311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>restPosition</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>afc00be4e84f2ae3dfb5da401a8e295aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>dampingCoefficient</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>aba10deea827c3ab6ab0c4b92ed6b5938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>friction</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>a450deacbd8460c296ba8aabf6d70e0d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool *</type>
      <name>preserveName</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>a1b1915bb3edf9d0990f573855b2750ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string *</type>
      <name>name</name>
      <anchorfile>df/d22/structdart_1_1utils_1_1DofProxy.html</anchorfile>
      <anchor>a107ed755f63c0873962dd1df8832bb99</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::SkelParser</name>
    <filename>dd/d87/classdart_1_1utils_1_1SkelParser.html</filename>
    <class kind="struct">dart::utils::SkelParser::SkelBodyNode</class>
    <class kind="struct">dart::utils::SkelParser::SkelJoint</class>
    <member kind="typedef">
      <type>std::shared_ptr&lt; dynamics::BodyNode::Properties &gt;</type>
      <name>BodyPropPtr</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a586ffbbe2117e9e730dddf605c0aefbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::aligned_map&lt; std::string, SkelBodyNode &gt;</type>
      <name>BodyMap</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>ade0b01e616555b512359eefd038d8c92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::shared_ptr&lt; dynamics::Joint::Properties &gt;</type>
      <name>JointPropPtr</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>aa99eab6893f8c88f85db5417f801c8b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, SkelJoint &gt;</type>
      <name>JointMap</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a9d88ac3c608fb856dd94a5e35941919f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; size_t, std::string &gt;</type>
      <name>IndexToJoint</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a6203c97091ead93d98450188b13a6439</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, size_t &gt;</type>
      <name>JointToIndex</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a85cea80d02fce1ae7dbc4a44cbe8a2f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static simulation::WorldPtr</type>
      <name>readWorld</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>addb990215f939daa372889e01cb89f0b</anchor>
      <arglist>(const common::Uri &amp;_uri, const common::ResourceRetrieverPtr &amp;_retriever=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static simulation::WorldPtr</type>
      <name>readWorldXML</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a665efd4911830972604926e4ed9a7c3b</anchor>
      <arglist>(const std::string &amp;_xmlString, const common::Uri &amp;_baseUri=&quot;&quot;, const common::ResourceRetrieverPtr &amp;_retriever=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dynamics::SkeletonPtr</type>
      <name>readSkeleton</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a30e30ed11844f429cc6ec159b84fd312</anchor>
      <arglist>(const common::Uri &amp;_fileUri, const common::ResourceRetrieverPtr &amp;_retriever=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static simulation::WorldPtr</type>
      <name>readWorld</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a2c1ccf3c5288cf0908d5e485ac4c5468</anchor>
      <arglist>(tinyxml2::XMLElement *_worldElement, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static dart::dynamics::SkeletonPtr</type>
      <name>readSkeleton</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>acf8d40627ace7061d024b214f10f6991</anchor>
      <arglist>(tinyxml2::XMLElement *_skeletonElement, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static SkelBodyNode</type>
      <name>readBodyNode</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a875513b9f013b4135c5843dec4c2e306</anchor>
      <arglist>(tinyxml2::XMLElement *_bodyElement, const Eigen::Isometry3d &amp;_skeletonFrame, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static SkelBodyNode</type>
      <name>readSoftBodyNode</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a73383731bf509e511dcf85abf2c012c8</anchor>
      <arglist>(tinyxml2::XMLElement *_softBodyNodeElement, const Eigen::Isometry3d &amp;_skeletonFrame, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static dynamics::ShapePtr</type>
      <name>readShape</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a3b127562e2af3498c97f0f7c0b04821e</anchor>
      <arglist>(tinyxml2::XMLElement *_shapeElement, const std::string &amp;bodyName, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static dynamics::Marker::Properties</type>
      <name>readMarker</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>adfaf3dc9bc1cfb5516cbb3cb5d15d8ae</anchor>
      <arglist>(tinyxml2::XMLElement *_markerElement)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>readJoint</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a107b8e784259c84974e7ebad7baf880f</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, const BodyMap &amp;_bodyNodes, JointMap &amp;_joints, IndexToJoint &amp;_order, JointToIndex &amp;_lookup)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static JointPropPtr</type>
      <name>readRevoluteJoint</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a4a0c047eb2b7c13526c4b212e7524dbf</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, SkelJoint &amp;_joint, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static JointPropPtr</type>
      <name>readPrismaticJoint</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a159480f9bcb36963257157cecb6c44a1</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, SkelJoint &amp;_joint, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static JointPropPtr</type>
      <name>readScrewJoint</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a9997b9b34a18f4171ebc87a30767c92a</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, SkelJoint &amp;_joint, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static JointPropPtr</type>
      <name>readUniversalJoint</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>aad7e7125a0bcc12ce050d7a5d30f137b</anchor>
      <arglist>(tinyxml2::XMLElement *_universalJointElement, SkelJoint &amp;_joint, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static JointPropPtr</type>
      <name>readBallJoint</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a9bdbdd3c5a8868d9f07f94f70019cc09</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, SkelJoint &amp;_joint, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static JointPropPtr</type>
      <name>readEulerJoint</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a00b7042268b8de74d61ffd8f19878f4a</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, SkelJoint &amp;_joint, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static JointPropPtr</type>
      <name>readTranslationalJoint</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>afda870ef001aba0ff1db96fb68b41e13</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, SkelJoint &amp;_joint, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static JointPropPtr</type>
      <name>readPlanarJoint</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a33de962a26ab9de9a981e3a4f7eff798</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, SkelJoint &amp;_joint, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static JointPropPtr</type>
      <name>readFreeJoint</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a786b670ce565cac887483bceb257f3d0</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, SkelJoint &amp;_joint, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static JointPropPtr</type>
      <name>readWeldJoint</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a48db346d27dd757492c35acdc2cf1156</anchor>
      <arglist>(tinyxml2::XMLElement *_jointElement, SkelJoint &amp;_joint, const std::string &amp;_name)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static common::ResourceRetrieverPtr</type>
      <name>getRetriever</name>
      <anchorfile>dd/d87/classdart_1_1utils_1_1SkelParser.html</anchorfile>
      <anchor>a610a24f6e92951e448f614bc1244ad9b</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;_retriever)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::utils::SkelParser::SkelBodyNode</name>
    <filename>da/d74/structdart_1_1utils_1_1SkelParser_1_1SkelBodyNode.html</filename>
    <member kind="variable">
      <type>BodyPropPtr</type>
      <name>properties</name>
      <anchorfile>da/d74/structdart_1_1utils_1_1SkelParser_1_1SkelBodyNode.html</anchorfile>
      <anchor>aee7709e3705d1f771c918a91acba5c68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::Isometry3d</type>
      <name>initTransform</name>
      <anchorfile>da/d74/structdart_1_1utils_1_1SkelParser_1_1SkelBodyNode.html</anchorfile>
      <anchor>af0a09a086ec169822243e211e691235f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>da/d74/structdart_1_1utils_1_1SkelParser_1_1SkelBodyNode.html</anchorfile>
      <anchor>a0e115b6fb025c86dbe6858dc53948104</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>dart::utils::SkelParser::SkelJoint</name>
    <filename>d4/d2a/structdart_1_1utils_1_1SkelParser_1_1SkelJoint.html</filename>
    <member kind="variable">
      <type>JointPropPtr</type>
      <name>properties</name>
      <anchorfile>d4/d2a/structdart_1_1utils_1_1SkelParser_1_1SkelJoint.html</anchorfile>
      <anchor>a84535070ad14a867744d717bb9a8a59e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>position</name>
      <anchorfile>d4/d2a/structdart_1_1utils_1_1SkelParser_1_1SkelJoint.html</anchorfile>
      <anchor>a4f08c272d3ceffd3f9d1a1a63f149f4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>velocity</name>
      <anchorfile>d4/d2a/structdart_1_1utils_1_1SkelParser_1_1SkelJoint.html</anchorfile>
      <anchor>a7ba739a303a0034d5d6a402b31928e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>acceleration</name>
      <anchorfile>d4/d2a/structdart_1_1utils_1_1SkelParser_1_1SkelJoint.html</anchorfile>
      <anchor>afacf109bf161c3682180fce12b288b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Eigen::VectorXd</type>
      <name>force</name>
      <anchorfile>d4/d2a/structdart_1_1utils_1_1SkelParser_1_1SkelJoint.html</anchorfile>
      <anchor>ac6b7367d2f336409f8f57fe0d5fee5a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>parentName</name>
      <anchorfile>d4/d2a/structdart_1_1utils_1_1SkelParser_1_1SkelJoint.html</anchorfile>
      <anchor>a05b8a184a02f5a3b2a158fe33b36a251</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>childName</name>
      <anchorfile>d4/d2a/structdart_1_1utils_1_1SkelParser_1_1SkelJoint.html</anchorfile>
      <anchor>a634abbebd4ba5da846b96a3d862b0cc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>d4/d2a/structdart_1_1utils_1_1SkelParser_1_1SkelJoint.html</anchorfile>
      <anchor>a04e91ec1b1353528c35bca48af4b1fd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::DartLoader</name>
    <filename>d8/d29/classdart_1_1utils_1_1DartLoader.html</filename>
    <member kind="function">
      <type></type>
      <name>DartLoader</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>aea41be468ccb93b05744ee7622b3c739</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPackageDirectory</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a54d46f3fc7e0d9bb20b07dac4d87fa6d</anchor>
      <arglist>(const std::string &amp;_packageName, const std::string &amp;_packageDirectory)</arglist>
    </member>
    <member kind="function">
      <type>dynamics::SkeletonPtr</type>
      <name>parseSkeleton</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>af90a1a2ecd8a855ef826035754d7bcaf</anchor>
      <arglist>(const common::Uri &amp;_uri, const common::ResourceRetrieverPtr &amp;_resourceRetriever=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>dynamics::SkeletonPtr</type>
      <name>parseSkeletonString</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>adad475ef7c8051c0fdd58855796a5953</anchor>
      <arglist>(const std::string &amp;_urdfString, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>dart::simulation::WorldPtr</type>
      <name>parseWorld</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a2c427e98bc36ef00bb66ec0f42e1b648</anchor>
      <arglist>(const common::Uri &amp;_uri, const common::ResourceRetrieverPtr &amp;_resourceRetriever=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>dart::simulation::WorldPtr</type>
      <name>parseWorldString</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a6bac27b58b13196b342c8c4621380bd6</anchor>
      <arglist>(const std::string &amp;_urdfString, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever=nullptr)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::shared_ptr&lt; dynamics::BodyNode::Properties &gt;</type>
      <name>BodyPropPtr</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>ad32e354ef1c16caa2794094356bfa646</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::shared_ptr&lt; dynamics::Joint::Properties &gt;</type>
      <name>JointPropPtr</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>aa087dce657ab67a763b995935fd2f6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>common::ResourceRetrieverPtr</type>
      <name>getResourceRetriever</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a7913d3f19e1d6bab426ec204cfe08c94</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static dart::dynamics::SkeletonPtr</type>
      <name>modelInterfaceToSkeleton</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a34a30d37290706d6d28c8e213cf61fb0</anchor>
      <arglist>(const urdf::ModelInterface *_model, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>createSkeletonRecursive</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a1d3d0970f30e98e31f0f81080720359c</anchor>
      <arglist>(dynamics::SkeletonPtr _skel, const urdf::Link *_lk, dynamics::BodyNode *_parent, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static dynamics::ShapePtr</type>
      <name>createShape</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a141993f728bffb4e7aea5287cfebcff3</anchor>
      <arglist>(const VisualOrCollision *_vizOrCol, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static dynamics::BodyNode *</type>
      <name>createDartJointAndNode</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a9be96c086885f68097d5847743cb8ad3</anchor>
      <arglist>(const urdf::Joint *_jt, const dynamics::BodyNode::Properties &amp;_body, dynamics::BodyNode *_parent, dynamics::SkeletonPtr _skeleton, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>createDartNodeProperties</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>aed7b65ebca78d70b4f712ec4076c54fa</anchor>
      <arglist>(const urdf::Link *_lk, dynamics::BodyNode::Properties &amp;properties, const common::Uri &amp;_baseUri, const common::ResourceRetrieverPtr &amp;_resourceRetriever)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static Eigen::Isometry3d</type>
      <name>toEigen</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a18adad8888cbbbfb99cae596585f46bf</anchor>
      <arglist>(const urdf::Pose &amp;_pose)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static Eigen::Vector3d</type>
      <name>toEigen</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a69bbd9cd02c35b2439f8d6d8dd318aac</anchor>
      <arglist>(const urdf::Vector3 &amp;_vector)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>readFileToString</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>ac4dc552244f97e3e1e00d4fbe306d061</anchor>
      <arglist>(const common::ResourceRetrieverPtr &amp;_resourceRetriever, const common::Uri &amp;_uri, std::string &amp;_output)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>common::LocalResourceRetrieverPtr</type>
      <name>mLocalRetriever</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a9f0d4e5fb7d17460f0ecf2d70db7b037</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>utils::PackageResourceRetrieverPtr</type>
      <name>mPackageRetriever</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>af01e3aeb3a05ac8fb71615cbc4a67bf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>utils::CompositeResourceRetrieverPtr</type>
      <name>mRetriever</name>
      <anchorfile>d8/d29/classdart_1_1utils_1_1DartLoader.html</anchorfile>
      <anchor>a0a203558ed53f49daf0b65ed09fa211b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>dart::utils::urdf_parsing</name>
    <filename>d0/d4c/namespacedart_1_1utils_1_1urdf__parsing.html</filename>
    <class kind="class">dart::utils::urdf_parsing::Entity</class>
    <class kind="class">dart::utils::urdf_parsing::World</class>
    <member kind="function">
      <type>std::shared_ptr&lt; World &gt;</type>
      <name>parseWorldURDF</name>
      <anchorfile>d0/d4c/namespacedart_1_1utils_1_1urdf__parsing.html</anchorfile>
      <anchor>abda1895a15f2d6dcef7ce9671c1088a1</anchor>
      <arglist>(const std::string &amp;_xml_string, const dart::common::Uri &amp;_baseUri)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::urdf_parsing::Entity</name>
    <filename>d7/ddf/classdart_1_1utils_1_1urdf__parsing_1_1Entity.html</filename>
    <member kind="function">
      <type></type>
      <name>Entity</name>
      <anchorfile>d7/ddf/classdart_1_1utils_1_1urdf__parsing_1_1Entity.html</anchorfile>
      <anchor>a8a89bce6933404f2ab4462eb1aee0a3d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Entity</name>
      <anchorfile>d7/ddf/classdart_1_1utils_1_1urdf__parsing_1_1Entity.html</anchorfile>
      <anchor>a624cbbd664d470b6c1fc7a71388ca32c</anchor>
      <arglist>(const urdf::Entity &amp;urdfEntity)</arglist>
    </member>
    <member kind="variable">
      <type>boost::shared_ptr&lt; urdf::ModelInterface &gt;</type>
      <name>model</name>
      <anchorfile>d7/ddf/classdart_1_1utils_1_1urdf__parsing_1_1Entity.html</anchorfile>
      <anchor>a5e8a88a6feaef77799a1a1f194e029d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>urdf::Pose</type>
      <name>origin</name>
      <anchorfile>d7/ddf/classdart_1_1utils_1_1urdf__parsing_1_1Entity.html</anchorfile>
      <anchor>a220569966e8f25bc16b9fb204583b84f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>urdf::Twist</type>
      <name>twist</name>
      <anchorfile>d7/ddf/classdart_1_1utils_1_1urdf__parsing_1_1Entity.html</anchorfile>
      <anchor>a13ea7d9de4cf8605e12d9640c5e58a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dart::common::Uri</type>
      <name>uri</name>
      <anchorfile>d7/ddf/classdart_1_1utils_1_1urdf__parsing_1_1Entity.html</anchorfile>
      <anchor>aa009120ab67a9c6c2122a42628ad12b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>dart::utils::urdf_parsing::World</name>
    <filename>d5/d46/classdart_1_1utils_1_1urdf__parsing_1_1World.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d5/d46/classdart_1_1utils_1_1urdf__parsing_1_1World.html</anchorfile>
      <anchor>a91457c42a13c3975a32674e2fe006a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Entity &gt;</type>
      <name>models</name>
      <anchorfile>d5/d46/classdart_1_1utils_1_1urdf__parsing_1_1World.html</anchorfile>
      <anchor>abb21099dce92b15982dd29f0c258b76b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Eigen</name>
    <filename>d1/d62/namespaceEigen.html</filename>
    <member kind="typedef">
      <type>Matrix&lt; double, 6, 1 &gt;</type>
      <name>Vector6d</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>ac27ace7c50a658d3a07238110fa51a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Matrix&lt; double, 6, 6 &gt;</type>
      <name>Matrix6d</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a1690c3b787f33c899925ec8ed093dfdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Eigen::Vector3d &gt;</type>
      <name>EIGEN_V_VEC3D</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a425d7eb71fbda74251b39a56d77483a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::vector&lt; Eigen::Vector3d &gt; &gt;</type>
      <name>EIGEN_VV_VEC3D</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a375d47fcb4f2d2215ba09c82fcc8f23c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; _Tp, Eigen::aligned_allocator&lt; _Tp &gt;&gt;</type>
      <name>aligned_vector</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a8dfe4f733de0543cf4067932f2ce7efa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; _Key, _Tp, _Compare, Eigen::aligned_allocator&lt; std::pair&lt; const _Key, _Tp &gt;&gt;&gt;</type>
      <name>aligned_map</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>ac7d9b3d70dd2fee4a4e69d3328060c79</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Vector6d</type>
      <name>compose</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>a5ddf9ce6ff40e8e0a562b80953064149</anchor>
      <arglist>(const Eigen::Vector3d &amp;_angular, const Eigen::Vector3d &amp;_linear)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; _Tp &gt;</type>
      <name>make_aligned_shared</name>
      <anchorfile>d1/d62/namespaceEigen.html</anchorfile>
      <anchor>ab5662ca881d3d41dc8716964a2a9f5ac</anchor>
      <arglist>(_Args &amp;&amp;...__args)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>flann</name>
    <filename>da/dd9/namespaceflann.html</filename>
    <class kind="class">flann::L2</class>
    <class kind="class">flann::Index</class>
  </compound>
  <compound kind="class">
    <name>flann::L2</name>
    <filename>d6/dd6/classflann_1_1L2.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>flann::Index</name>
    <filename>d6/d7d/classflann_1_1Index.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="namespace">
    <name>urdf</name>
    <filename>dc/de5/namespaceurdf.html</filename>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/bullet</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/bullet/</path>
    <filename>dir_b637490a2ad2244ddde6a51ab145510e.html</filename>
    <file>BulletCollisionDetector.cpp</file>
    <file>BulletCollisionDetector.h</file>
    <file>BulletCollisionNode.cpp</file>
    <file>BulletCollisionNode.h</file>
    <file>BulletTypes.cpp</file>
    <file>BulletTypes.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/</path>
    <filename>dir_7aaf2eefc9c12d3855f042d5a221f589.html</filename>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/bullet</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/dart</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl_mesh</dir>
    <file>CollisionDetector.cpp</file>
    <file>CollisionDetector.h</file>
    <file>CollisionNode.cpp</file>
    <file>CollisionNode.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/common</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/</path>
    <filename>dir_038ecf057a57cc1982efaa71edfdbdcb.html</filename>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/detail</dir>
    <file>Console.cpp</file>
    <file>Console.h</file>
    <file>Deprecated.h</file>
    <file>LocalResource.cpp</file>
    <file>LocalResource.h</file>
    <file>LocalResourceRetriever.cpp</file>
    <file>LocalResourceRetriever.h</file>
    <file>Memory.h</file>
    <file>NameManager.h</file>
    <file>Observer.cpp</file>
    <file>Observer.h</file>
    <file>Resource.h</file>
    <file>ResourceRetriever.h</file>
    <file>Signal.cpp</file>
    <file>Signal.h</file>
    <file>sub_ptr.h</file>
    <file>Subject.cpp</file>
    <file>Subject.h</file>
    <file>Timer.cpp</file>
    <file>Timer.h</file>
    <file>Uri.cpp</file>
    <file>Uri.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint/</path>
    <filename>dir_f2ed43681a1f94b8b6b590eee51c5fa9.html</filename>
    <file>BalanceConstraint.cpp</file>
    <file>BalanceConstraint.h</file>
    <file>BallJointConstraint.cpp</file>
    <file>BallJointConstraint.h</file>
    <file>ConstrainedGroup.cpp</file>
    <file>ConstrainedGroup.h</file>
    <file>ConstraintBase.cpp</file>
    <file>ConstraintBase.h</file>
    <file>ConstraintSolver.cpp</file>
    <file>ConstraintSolver.h</file>
    <file>ContactConstraint.cpp</file>
    <file>ContactConstraint.h</file>
    <file>DantzigLCPSolver.cpp</file>
    <file>DantzigLCPSolver.h</file>
    <file>JointConstraint.cpp</file>
    <file>JointConstraint.h</file>
    <file>JointCoulombFrictionConstraint.cpp</file>
    <file>JointCoulombFrictionConstraint.h</file>
    <file>JointLimitConstraint.cpp</file>
    <file>JointLimitConstraint.h</file>
    <file>LCPSolver.cpp</file>
    <file>LCPSolver.h</file>
    <file>PGSLCPSolver.cpp</file>
    <file>PGSLCPSolver.h</file>
    <file>SoftContactConstraint.cpp</file>
    <file>SoftContactConstraint.h</file>
    <file>WeldJointConstraint.cpp</file>
    <file>WeldJointConstraint.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/dart</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/dart/</path>
    <filename>dir_131dbabb1e3b2d47fa0af3a8336591fd.html</filename>
    <file>DARTCollide.cpp</file>
    <file>DARTCollide.h</file>
    <file>DARTCollisionDetector.cpp</file>
    <file>DARTCollisionDetector.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/</path>
    <filename>dir_bdca9e024c7189a7f761273aaa65cff0.html</filename>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/common</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/constraint</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/integration</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/math</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/planning</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/renderer</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/simulation</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils</dir>
    <file>dart-core.h</file>
    <file>dart.cpp</file>
    <file>dart.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/detail</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/detail/</path>
    <filename>dir_d3413d487e3f281ac8dda0a2946d4186.html</filename>
    <file>BodyNode.h</file>
    <file>BodyNodePtr.h</file>
    <file>DegreeOfFreedomPtr.h</file>
    <file>InverseKinematics.h</file>
    <file>InverseKinematicsPtr.h</file>
    <file>JointPtr.h</file>
    <file>MultiDofJoint.h</file>
    <file>NodePtr.h</file>
    <file>Skeleton.h</file>
    <file>TemplatedJacobianNode.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/detail</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/common/detail/</path>
    <filename>dir_201a2942a46777912343adccc75a2706.html</filename>
    <file>ConnectionBody.cpp</file>
    <file>ConnectionBody.h</file>
    <file>NameManager.h</file>
    <file>Signal.h</file>
    <file>sub_ptr.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/</path>
    <filename>dir_ce1d750ba4a7950ac0659613f96015b8.html</filename>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/dynamics/detail</dir>
    <file>ArrowShape.cpp</file>
    <file>ArrowShape.h</file>
    <file>AssimpInputResourceAdaptor.cpp</file>
    <file>AssimpInputResourceAdaptor.h</file>
    <file>BallJoint.cpp</file>
    <file>BallJoint.h</file>
    <file>BodyNode.cpp</file>
    <file>BodyNode.h</file>
    <file>BoxShape.cpp</file>
    <file>BoxShape.h</file>
    <file>Branch.cpp</file>
    <file>Branch.h</file>
    <file>Chain.cpp</file>
    <file>Chain.h</file>
    <file>CylinderShape.cpp</file>
    <file>CylinderShape.h</file>
    <file>DegreeOfFreedom.cpp</file>
    <file>DegreeOfFreedom.h</file>
    <file>EllipsoidShape.cpp</file>
    <file>EllipsoidShape.h</file>
    <file>EndEffector.cpp</file>
    <file>EndEffector.h</file>
    <file>Entity.cpp</file>
    <file>Entity.h</file>
    <file>EulerJoint.cpp</file>
    <file>EulerJoint.h</file>
    <file>FixedFrame.cpp</file>
    <file>FixedFrame.h</file>
    <file>Frame.cpp</file>
    <file>Frame.h</file>
    <file>FreeJoint.cpp</file>
    <file>FreeJoint.h</file>
    <file>Group.cpp</file>
    <file>Group.h</file>
    <file>HierarchicalIK.cpp</file>
    <file>HierarchicalIK.h</file>
    <file>Inertia.cpp</file>
    <file>Inertia.h</file>
    <file>InvalidIndex.h</file>
    <file>InverseKinematics.cpp</file>
    <file>InverseKinematics.h</file>
    <file>JacobianNode.cpp</file>
    <file>JacobianNode.h</file>
    <file>Joint.cpp</file>
    <file>Joint.h</file>
    <file>LineSegmentShape.cpp</file>
    <file>LineSegmentShape.h</file>
    <file>Linkage.cpp</file>
    <file>Linkage.h</file>
    <file>Marker.cpp</file>
    <file>Marker.h</file>
    <file>MeshShape.cpp</file>
    <file>MeshShape.h</file>
    <file>MetaSkeleton.cpp</file>
    <file>MetaSkeleton.h</file>
    <file>MultiDofJoint.h</file>
    <file>Node.cpp</file>
    <file>Node.h</file>
    <file>PlanarJoint.cpp</file>
    <file>PlanarJoint.h</file>
    <file>PlaneShape.cpp</file>
    <file>PlaneShape.h</file>
    <file>PointMass.cpp</file>
    <file>PointMass.h</file>
    <file>PrismaticJoint.cpp</file>
    <file>PrismaticJoint.h</file>
    <file>ReferentialSkeleton.cpp</file>
    <file>ReferentialSkeleton.h</file>
    <file>RevoluteJoint.cpp</file>
    <file>RevoluteJoint.h</file>
    <file>ScrewJoint.cpp</file>
    <file>ScrewJoint.h</file>
    <file>Shape.cpp</file>
    <file>Shape.h</file>
    <file>SimpleFrame.cpp</file>
    <file>SimpleFrame.h</file>
    <file>SingleDofJoint.cpp</file>
    <file>SingleDofJoint.h</file>
    <file>Skeleton.cpp</file>
    <file>Skeleton.h</file>
    <file>SmartPointer.h</file>
    <file>SoftBodyNode.cpp</file>
    <file>SoftBodyNode.h</file>
    <file>SoftMeshShape.cpp</file>
    <file>SoftMeshShape.h</file>
    <file>TemplatedJacobianNode.h</file>
    <file>TranslationalJoint.cpp</file>
    <file>TranslationalJoint.h</file>
    <file>UniversalJoint.cpp</file>
    <file>UniversalJoint.h</file>
    <file>WeldJoint.cpp</file>
    <file>WeldJoint.h</file>
    <file>ZeroDofJoint.cpp</file>
    <file>ZeroDofJoint.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl/</path>
    <filename>dir_d9bc0d3f4e4fe81f6b2799c71d86043d.html</filename>
    <file>FCLCollisionDetector.cpp</file>
    <file>FCLCollisionDetector.h</file>
    <file>FCLCollisionNode.cpp</file>
    <file>FCLCollisionNode.h</file>
    <file>FCLTypes.cpp</file>
    <file>FCLTypes.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl_mesh</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/collision/fcl_mesh/</path>
    <filename>dir_068f4d95e1aeda0452dcd594189e7f0a.html</filename>
    <file>CollisionShapes.h</file>
    <file>FCLMeshCollisionDetector.cpp</file>
    <file>FCLMeshCollisionDetector.h</file>
    <file>FCLMeshCollisionNode.cpp</file>
    <file>FCLMeshCollisionNode.h</file>
    <file>tri_tri_intersection_test.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/gui/</path>
    <filename>dir_77df7651d5de09f92d5a9d7a4e71e16d.html</filename>
    <file>GLFuncs.cpp</file>
    <file>GLFuncs.h</file>
    <file>GlutWindow.cpp</file>
    <file>GlutWindow.h</file>
    <file>GraphWindow.cpp</file>
    <file>GraphWindow.h</file>
    <file>Jitter.cpp</file>
    <file>Jitter.h</file>
    <file>LoadGlut.h</file>
    <file>lodepng.cpp</file>
    <file>lodepng.h</file>
    <file>SimWindow.cpp</file>
    <file>SimWindow.h</file>
    <file>SoftSimWindow.cpp</file>
    <file>SoftSimWindow.h</file>
    <file>Trackball.cpp</file>
    <file>Trackball.h</file>
    <file>Win2D.cpp</file>
    <file>Win2D.h</file>
    <file>Win3D.cpp</file>
    <file>Win3D.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/integration</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/integration/</path>
    <filename>dir_11d0e0a9ed3d34dad67cb53c0e080e16.html</filename>
    <file>EulerIntegrator.cpp</file>
    <file>EulerIntegrator.h</file>
    <file>Integrator.cpp</file>
    <file>Integrator.h</file>
    <file>RK4Integrator.cpp</file>
    <file>RK4Integrator.h</file>
    <file>SemiImplicitEulerIntegrator.cpp</file>
    <file>SemiImplicitEulerIntegrator.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/ipopt</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/ipopt/</path>
    <filename>dir_4de723071857cd11b72eb1e970a1f59e.html</filename>
    <file>IpoptSolver.cpp</file>
    <file>IpoptSolver.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/lcpsolver/</path>
    <filename>dir_10253f68b8645be175f3db557703e448.html</filename>
    <file>common.h</file>
    <file>error.cpp</file>
    <file>error.h</file>
    <file>fastdot.cpp</file>
    <file>fastldlt.cpp</file>
    <file>fastlsolve.cpp</file>
    <file>fastltsolve.cpp</file>
    <file>lcp.cpp</file>
    <file>lcp.h</file>
    <file>Lemke.cpp</file>
    <file>Lemke.h</file>
    <file>matrix.cpp</file>
    <file>matrix.h</file>
    <file>misc.cpp</file>
    <file>misc.h</file>
    <file>odeconfig.h</file>
    <file>ODELCPSolver.cpp</file>
    <file>ODELCPSolver.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/math</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/math/</path>
    <filename>dir_89aa97c1afb8f2f06c6371ad36082490.html</filename>
    <file>Geometry.cpp</file>
    <file>Geometry.h</file>
    <file>Helpers.h</file>
    <file>MathTypes.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/nlopt</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/nlopt/</path>
    <filename>dir_3053eca09ba05573ef0e564df3ddfcd1.html</filename>
    <file>NloptSolver.cpp</file>
    <file>NloptSolver.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/</path>
    <filename>dir_17ecb0674ae43a7dd53465ba621feab7.html</filename>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/ipopt</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/nlopt</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/snopt</dir>
    <file>Function.cpp</file>
    <file>Function.h</file>
    <file>GradientDescentSolver.cpp</file>
    <file>GradientDescentSolver.h</file>
    <file>Problem.cpp</file>
    <file>Problem.h</file>
    <file>Solver.cpp</file>
    <file>Solver.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/planning</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/planning/</path>
    <filename>dir_ab9efa6cf5da43fa1504765d33dbe254.html</filename>
    <file>Path.cpp</file>
    <file>Path.h</file>
    <file>PathFollowingTrajectory.cpp</file>
    <file>PathFollowingTrajectory.h</file>
    <file>PathPlanner.h</file>
    <file>PathShortener.cpp</file>
    <file>PathShortener.h</file>
    <file>RRT.cpp</file>
    <file>RRT.h</file>
    <file>Trajectory.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/renderer</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/renderer/</path>
    <filename>dir_c1151b1877b9a0e0f13c9ae5b0a5bd05.html</filename>
    <file>Camera.h</file>
    <file>Light.h</file>
    <file>LoadOpengl.h</file>
    <file>OpenGLCamera.h</file>
    <file>OpenGLRenderInterface.cpp</file>
    <file>OpenGLRenderInterface.h</file>
    <file>RenderInterface.cpp</file>
    <file>RenderInterface.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/sdf</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/sdf/</path>
    <filename>dir_aac3146568c74976f5f3de3ab0035948.html</filename>
    <file>SdfParser.cpp</file>
    <file>SdfParser.h</file>
    <file>SoftSdfParser.cpp</file>
    <file>SoftSdfParser.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/simulation</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/simulation/</path>
    <filename>dir_422824466fd7ee9e505d8e54ec516d72.html</filename>
    <file>Recording.cpp</file>
    <file>Recording.h</file>
    <file>World.cpp</file>
    <file>World.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/snopt</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/optimizer/snopt/</path>
    <filename>dir_080be38898392fe9d3f60365d59fdb03.html</filename>
    <file>SnoptInterface.cpp</file>
    <file>SnoptInterface.h</file>
    <file>SnoptSolver.cpp</file>
    <file>SnoptSolver.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/urdf</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/urdf/</path>
    <filename>dir_3167900535d36e4d345e8f71f69e35cd.html</filename>
    <file>DartLoader.cpp</file>
    <file>DartLoader.h</file>
    <file>urdf_world_parser.cpp</file>
    <file>urdf_world_parser.h</file>
  </compound>
  <compound kind="dir">
    <name>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils</name>
    <path>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/</path>
    <filename>dir_558fb1470c9a14158ce5db1674bc31a0.html</filename>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/sdf</dir>
    <dir>/home/js/dev/pr/dart/doxygen_tag_file/dart/utils/urdf</dir>
    <file>C3D.cpp</file>
    <file>C3D.h</file>
    <file>CompositeResourceRetriever.cpp</file>
    <file>CompositeResourceRetriever.h</file>
    <file>FileInfoC3D.cpp</file>
    <file>FileInfoC3D.h</file>
    <file>FileInfoDof.cpp</file>
    <file>FileInfoDof.h</file>
    <file>FileInfoWorld.cpp</file>
    <file>FileInfoWorld.h</file>
    <file>PackageResourceRetriever.cpp</file>
    <file>PackageResourceRetriever.h</file>
    <file>Parser.cpp</file>
    <file>Parser.h</file>
    <file>SkelParser.cpp</file>
    <file>SkelParser.h</file>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>DART - Dynamic Animation and Robotics Toolkits</title>
    <filename>index</filename>
    <docanchor file="index" title="Introduction">intro</docanchor>
  </compound>
</tagfile>
